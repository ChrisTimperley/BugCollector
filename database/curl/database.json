[
  {
    "id": "895168bfd3d817f7cc5e4b1ee86e2f6007e47a64",
    "files": [
      "lib/urldata.h",
      "lib/vtls/schannel.c"
    ],
    "message": "schannel: Disable ALPN for Wine since it is causing problems\n\n- Disable ALPN on Wine.\n\n- Don't pass input secbuffer when ALPN is disabled.\n\nWhen ALPN support was added a change was made to pass an input secbuffer\nto initialize the context. When ALPN is enabled the buffer contains the\nALPN information, and when it's disabled the buffer is empty. In either\ncase this input buffer caused problems with Wine and connections would\nnot complete.\n\nBug: https://github.com/curl/curl/issues/983\nReported-by: Christian Fillion",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1472240116
  },
  {
    "id": "3a5d5de9ef52ebe8ca2bda2165edc1b34c242e54",
    "files": [
      "RELEASE-NOTES",
      "lib/vtls/nss.c"
    ],
    "message": "nss: work around race condition in PK11_FindSlotByName()\n\nSerialise the call to PK11_FindSlotByName() to avoid spurious errors in\na multi-threaded environment. The underlying cause is a race condition\nin nssSlot_IsTokenPresent().\n\nBug: https://bugzilla.mozilla.org/1297397\n\nCloses #985",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1472215342
  },
  {
    "id": "b6fcdc32eb346ab2e1ff0c60eeb3d73ed29238a4",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: accept subjectAltName iPAddress if no dNSName match\n\nUndo change introduced in d4643d6 which caused iPAddress match to be\nignored if dNSName was present but did not match.\n\nAlso, if iPAddress is present but does not match, and dNSName is not\npresent, fail as no-match. Prior to this change in such a case the CN\nwould be checked for a match.\n\nBug: https://github.com/curl/curl/issues/959\nReported-by: wmsch@users.noreply.github.com",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1471068886
  },
  {
    "id": "e577c43bb5c6728ae12c8171bac102a89c0cb0f9",
    "files": [
      "lib/rtsp.c"
    ],
    "message": "rtsp: accept any RTSP session id\n\nMakes libcurl work in communication with gstreamer-based RTSP\nservers. The original code validates the session id to be in accordance\nwith the RFC. I think it is better not to do that:\n\n- For curl the actual content is a don't care.\n\n- The clarity of the RFC is debatable, is $ allowed or only as \\$, that\n  is imho not clear\n\n- Gstreamer seems to url-encode the session id but % is not allowed by\nthe RFC\n\n- less code\n\nWith this patch curl will correctly handle real-life lines like:\nSession: biTN4Kc.8%2B1w-AF.; timeout=60\n\nBug: https://curl.haxx.se/mail/lib-2016-08/0076.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1470812290
  },
  {
    "id": "4732ca5724072f132876f520c8f02c7c5b654d95",
    "files": [
      "docs/libcurl/opts/CURLOPT_TCP_NODELAY.3",
      "src/tool_operate.c",
      "lib/http2.c",
      "lib/url.c",
      "src/tool_setopt.c",
      "src/tool_cfgable.c"
    ],
    "message": "CURLOPT_TCP_NODELAY: now enabled by default\n\nAfter a few wasted hours hunting down the reason for slowness during a\nTLS handshake that turned out to be because of TCP_NODELAY not being\nset, I think we have enough motivation to toggle the default for this\noption. We now enable TCP_NODELAY by default and allow applications to\nswitch it off.\n\nThis also makes --tcp-nodelay unnecessary, but --no-tcp-nodelay can be\nused to disable it.\n\nThanks-to: Tim R\u00fchsen\nBug: https://curl.haxx.se/mail/lib-2016-06/0143.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1470348777
  },
  {
    "id": "6eb60c2dc589a15ff8a3aa5961745d86044a9b78",
    "files": [
      "lib/transfer.h",
      "lib/multi.c",
      "lib/transfer.c"
    ],
    "message": "transfer: return without select when the read loop reached maxcount\n\nRegression added in 790d6de48515. The was then added to avoid one\nparticular transfer to starve out others. But when aborting due to\nreading the maxcount, the connection must be marked to be read from\nagain without first doing a select as for some protocols (like SFTP/SCP)\nthe data may already have been read off the socket.\n\nReported-by: Dan Donahue\nBug: https://curl.haxx.se/mail/lib-2016-07/0057.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1470263007
  },
  {
    "id": "11ec5ad4352bba384404c56e77c7fab9382fd22d",
    "files": [
      "lib/vtls/vtls.c"
    ],
    "message": "TLS: only reuse connections with the same client cert\n\nCVE-2016-5420\nBug: https://curl.haxx.se/docs/adv_20160803B.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1470177267
  },
  {
    "id": "247d890da88f9ee817079e246c59f3d7d12fde5f",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "lib/vtls/vtls.c"
    ],
    "message": "TLS: switch off SSL session id when client cert is used\n\nCVE-2016-5419\nBug: https://curl.haxx.se/docs/adv_20160803A.html\nReported-by: Bru Rom\nContributions-by: Eric Rescorla and Ray Satiro",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1470177267
  },
  {
    "id": "75dc096e01ef1e21b6c57690d99371dedb2c0b80",
    "files": [
      "lib/multi.c"
    ],
    "message": "curl_multi_cleanup: clear connection pointer for easy handles\n\nCVE-2016-5421\nBug: https://curl.haxx.se/docs/adv_20160803C.html\nReported-by: Marcelo Echeverria and Fernando Mu\u00f1oz",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1470177267
  },
  {
    "id": "dcdd4be35213d4ba36e41ad92fe2ae4ddab1205d",
    "files": [
      "lib/vauth/digest_sspi.c"
    ],
    "message": "vauth: Fixed memory leak due to function returning without free\n\nThis patch allocates memory to \"output_token\" only when it is required\nso that memory is not leaked if function returns.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1469049709
  },
  {
    "id": "4ee203542d042e9ba4f137ab252637742998de42",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: disable TFO on Linux when using SSL\n\n- Linux TFO + TLS is not implemented yet.\n\nBug: https://github.com/curl/curl/issues/907",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1468997359
  },
  {
    "id": "c50980807c55f91c2fb2d09f3b6dc0ae69f4cf45",
    "files": [
      "lib/easy.c"
    ],
    "message": "curl_global_init: Check if IPv6 works\n\n- Curl_ipv6works() is not thread-safe until after the first call, so\ncall it once during global init to avoid a possible race condition.\n\nBug: https://github.com/curl/curl/issues/915\nPR: https://github.com/curl/curl/pull/918",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1468824148
  },
  {
    "id": "6655e3069120cd069be9b7e2ff268342513c93bf",
    "files": [
      "lib/ssh.c",
      "lib/smb.c"
    ],
    "message": "conn: don't free easy handle data in handler->disconnect\n\nReported-by: Gou Lingfeng\nBug: https://curl.haxx.se/mail/lib-2016-06/0139.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1467234789
  },
  {
    "id": "38685f86c8709c0670e81812b98f8181814212bf",
    "files": [
      "lib/http.c"
    ],
    "message": "cleanup: minor code cleanup in Curl_http_readwrite_headers()\n\n- the expression of an 'if' was always true\n- a 'while' contained a condition that was always true\n- use 'if(k->exp100 > EXP100_SEND_DATA)' instead of 'if(k->exp100)'\n- fixed a typo\n\nCloses #889",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1467139724
  },
  {
    "id": "b6ddc0ac075ecb7e86b25a26ba2faf7e7880ce13",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP: set a generic error when no SFTP one exists...\n\n... as otherwise we could get a 0 which would count as no error and we'd\nwrongly continue and could end up segfaulting.\n\nBug: https://curl.haxx.se/mail/lib-2016-06/0052.html\nReported-by: \u6696\u548c\u7684\u548c\u6696",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1467120617
  },
  {
    "id": "608d161b605e4ac0ebdab6c89c64e14423a0457a",
    "files": [
      "lib/asyn-thread.c"
    ],
    "message": "resolve: enable protocol family logic for synthesized IPv6\n\n- Enable protocol family logic for IPv6 resolves even when support\nfor synthesized addresses is enabled.\n\nThis is a follow up to the parent commit that added support for\nsynthesized IPv6 addresses from IPv4 on iOS/OS X. The protocol family\nlogic needed for IPv6 was inadvertently excluded if support for\nsynthesized addresses was enabled.\n\nBug: https://github.com/curl/curl/issues/863\nRef: https://github.com/curl/curl/pull/866\nRef: https://github.com/curl/curl/pull/867",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1465352604
  },
  {
    "id": "1aa899ff38548a5d1c196f5c9ad7047f0fae3f5a",
    "files": [
      "lib/http.c"
    ],
    "message": "http: Fix HTTP/2 connection reuse\n\n- Change the parser to not require a minor version for HTTP/2.\n\nHTTP/2 connection reuse broke when we changed from HTTP/2.0 to HTTP/2\nin 8243a95 because the parser still expected a minor version.\n\nBug: https://github.com/curl/curl/issues/855\nReported-by: Andrew Robbins, Frank Gevaerts",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1465110812
  },
  {
    "id": "584d0121c353ed855115c39f6cbc009854018029",
    "files": [
      "src/tool_urlglob.c",
      "RELEASE-NOTES"
    ],
    "message": "tool_urlglob: fix off-by-one error in glob_parse()\n\n... causing SIGSEGV while parsing URL with too many globs.\nMinimal example:\n\n$ curl $(for i in $(seq 101); do printf '{a}'; done)\n\nReported-by: Romain Coltel\nBug: https://bugzilla.redhat.com/1340757",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1464952042
  },
  {
    "id": "31c521b0470e57125ffcd0f1b0c6edf3b9af96c1",
    "files": [
      "lib/vtls/schannel.c",
      "lib/vtls/axtls.c",
      "lib/vtls/openssl.c",
      "lib/vtls/polarssl.c",
      "lib/vtls/mbedtls.c",
      "lib/vtls/darwinssl.c",
      "lib/urldata.h",
      "lib/vtls/vtls.h",
      "lib/vtls/gtls.c",
      "lib/vtls/cyassl.c",
      "lib/vtls/vtls.c"
    ],
    "message": "vtls: fix ssl session cache race condition\n\nSessionid cache management is inseparable from managing individual\nsession lifetimes. E.g. for reference-counted sessions (like those in\nSChannel and OpenSSL engines) every session addition and removal\nshould be accompanied with refcount increment and decrement\nrespectively. Failing to do so synchronously leads to a race condition\nthat causes symptoms like use-after-free and memory corruption.\nThis commit:\n - makes existing session cache locking explicit, thus allowing\n   individual engines to manage lock's scope.\n - fixes OpenSSL and SChannel engines by putting refcount management\n   inside this lock's scope in relevant places.\n - adds these explicit locking calls to other engines that use\n   sessionid cache to accommodate for this change. Note, however,\n   that it is unknown whether any of these engines could also have\n   this race.\n\nBug: https://github.com/curl/curl/issues/815\nFixes #815\nCloses #847",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1464766855
  },
  {
    "id": "6df916d751e72fc9a1febc07bb59c4ddd886c043",
    "files": [
      "lib/curl_sspi.c",
      "packages/Symbian/group/libcurl.mmp",
      "lib/system_win32.c",
      "lib/system_win32.h",
      "lib/Makefile.vc6",
      "lib/telnet.c",
      "lib/Makefile.inc"
    ],
    "message": "loadlibrary: Only load system DLLs from the system directory\n\nInspiration provided by: Daniel Stenberg and Ray Satiro\n\nBug: https://curl.haxx.se/docs/adv_20160530.html\n\nRef: Windows DLL hijacking with curl, CVE-2016-4802",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1464588867
  },
  {
    "id": "b15a17c702eff70c79b384c07d20272c2495d583",
    "files": [
      "lib/vtls/mbedtls.c"
    ],
    "message": "mbedtls: fix includes so snprintf() works\n\nRegression from the previous *printf() rearrangements, this file missed to\ninclude the correct header to make sure snprintf() works universally.\n\nReported-by: Moti Avrahami\nBug: https://curl.haxx.se/mail/lib-2016-05/0196.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1464084858
  },
  {
    "id": "3caaeffbe8ded4deaeb946d23631b04507bee408",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: cleanup must free compression methods\n\n- Free compression methods if OpenSSL 1.0.2 to avoid a memory leak.\n\nBug: https://github.com/curl/curl/issues/817\nReported-by: jveazey@users.noreply.github.com",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1463777041
  },
  {
    "id": "6efd2fa529a189bf41736a610f6184cd8ad94b4d",
    "files": [
      "lib/vtls/polarssl.c",
      "lib/vtls/mbedtls.c"
    ],
    "message": "mbedtls/polarssl: set \"hostname\" unconditionally\n\n...as otherwise the TLS libs will skip the CN/SAN check and just allow\nconnection to any server. curl previously skipped this function when SNI\nwasn't used or when connecting to an IP address specified host.\n\nCVE-2016-3739\n\nBug: https://curl.haxx.se/docs/adv_20160518A.html\nReported-by: Moti Avrahami",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1463489297
  },
  {
    "id": "0761a51ee0551ad9e523cbdba24ce00d22fff9c1",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Add space between colon and header value\n\ncurl's representation of HTTP/2 responses involves transforming the\nresponse to a format that is similar to HTTP/1.1. Prior to this change,\ncurl would do this by separating header names and values with only a\ncolon, without introducing a space after the colon.\n\nWhile this is technically a valid way to represent a HTTP/1.1 header\nblock, it is much more common to see a space following the colon. This\nchange introduces that space, to ensure that incautious tools are safely\nable to parse the header block.\n\nThis also ensures that the difference between the HTTP/1.1 and HTTP/2\nresponse layout is as minimal as possible.\n\nBug: https://github.com/curl/curl/issues/797\n\nCloses #798\nFixes #797",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1463080330
  },
  {
    "id": "856baf5a46e9d5fb71950a648ac6d1600838584d",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "TLS: SSL_peek is not a const operation\n\nCalling SSL_peek can cause bytes to be read from the raw socket which in\nturn can upset the select machinery that determines whether there's data\navailable on the socket.\n\nSince Curl_ossl_check_cxn only tries to determine whether the socket is\nalive and doesn't actually need to see the bytes SSL_peek seems like\nthe wrong function to call.\n\nWe're able to occasionally reproduce a connect timeout due to this\nbug. What happens is that Curl doesn't know to call SSL_connect again\nafter the peek happens since data is buffered in the SSL buffer and thus\nselect won't fire for this socket.\n\nCloses #795",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1462918000
  },
  {
    "id": "b9728bca549709a26a5228f1d44f7488dd26811d",
    "files": [
      "src/tool_operate.c",
      "src/tool_cb_hdr.c"
    ],
    "message": "tool_cb_hdr: Fix --remote-header-name with schemeless URL\n\n- Move the existing scheme check from tool_operate.\n\nIn the case of --remote-header-name we want to parse Content-disposition\nfor a filename, but only if the scheme is http or https. A recent\nadjustment 0dc4d8e was made to account for schemeless URLs however it's\nnot 100% accurate. To remedy that I've moved the scheme check to the\nheader callback, since at that point the library has already determined\nthe scheme.\n\nBug: https://github.com/curl/curl/issues/760\nReported-by: Kai Noda",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1462133224
  },
  {
    "id": "9f498de9a28e4a4a3f73108756fb7e50af9ec014",
    "files": [
      "lib/getinfo.c",
      "lib/urldata.h",
      "lib/vtls/polarssl.c",
      "lib/vtls/mbedtls.c",
      "docs/libcurl/opts/CURLINFO_TLS_SSL_PTR.3"
    ],
    "message": "mbedtls: Fix session resume\n\nThis also fixes PolarSSL session resume.\n\nPrior to this change the TLS session information wasn't properly\nsaved and restored for PolarSSL and mbedTLS.\n\nBug: https://curl.haxx.se/mail/lib-2016-01/0070.html\nReported-by: Thomas Glanzmann\n\nBug: https://curl.haxx.se/mail/lib-2016-04/0095.html\nReported-by: Moti Avrahami",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1461826658
  },
  {
    "id": "439afae886e1019974cd3cd2b169a99cb1f84c35",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: accidentally used resolved host name instead of proxy\n\nRegression introduced in 09b5a998\n\nBug: https://curl.haxx.se/mail/lib-2016-04/0084.html\nReported-by: BoBo",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1461619915
  },
  {
    "id": "3c1e84f5693d80931d7a58065c1b7dbaa2d8cbf6",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "curl: make --ftp-create-dirs retry on failure\n\nThe underlying libcurl option used for this feature is\nCURLOPT_FTP_CREATE_MISSING_DIRS which has the ability to retry the dir\ncreation, but it was never set to do that by the command line tool.\n\nNow it does.\n\nBug: https://curl.haxx.se/mail/archive-2016-04/0021.html\nReported-by: John Wanghui\nHelp-by: Leif W",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1461331513
  },
  {
    "id": "99980cf904a9d5e59ad6c0d91ad50129b6dfc9b7",
    "files": [
      "lib/url.c"
    ],
    "message": "url.c: Prefer we don't use explicit NULLs in conditions\n\nFixed commit fa5fa65a30 to not use NULLs in if condition.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1461172025
  },
  {
    "id": "4fbd57693054eb14499cde2ace2dc7890800598b",
    "files": [
      "tests/data/test1517",
      "tests/libtest/lib1517.c",
      "tests/data/Makefile.inc",
      "tests/libtest/Makefile.inc"
    ],
    "message": "tests: added test1517\n\n... for checking ability to receive full HTTP response when POST request\nis used with slow read callback function.\n\nThis test checks for bug #657 and verifies the work-around from\n72d5e144fbc6.\n\nCloses #720",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1461139342
  },
  {
    "id": "b5f82148f5cd3ec7f7a5a6ab760f7c9a15673958",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Process paused data first before tear down http2 session\n\nThis commit ensures that data from network are processed before HTTP/2\nsession is terminated.  This is achieved by pausing nghttp2 whenever\ndifferent stream than current easy handle receives data.\n\nThis commit also fixes the bug that sometimes processing hangs when\nmultiple HTTP/2 streams are multiplexed.\n\nRef: https://github.com/curl/curl/issues/659\nRef: https://github.com/curl/curl/pull/663",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1460425407
  },
  {
    "id": "e655ae0c80aa3ddbacc20cac349336e4696d7d74",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "curl_sasl: Fixed potential null pointer utilisation\n\nAlthough this should never happen due to the relationship between the\n'mech' and 'resp' variables, and the way they are allocated together,\nit does cause problems for code analysis tools:\n\nV595 The 'mech' pointer was utilized before it was verified against\n     nullptr. Check lines: 376, 381. curl_sasl.c 376\n\nBug: https://github.com/curl/curl/issues/745\nReported-by: Alexis La Goutte",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1459702517
  },
  {
    "id": "73f1096335d468b5be7c3cc99045479c3314f433",
    "files": [
      "lib/vauth/krb5_gssapi.c",
      "lib/vauth/krb5_sspi.c"
    ],
    "message": "krb5: Fixed missing client response when mutual authentication enabled\n\nAlthough mutual authentication is currently turned off and can only be\nenabled by changing libcurl source code, authentication using Kerberos\n5 has been broken since commit 79543caf90 in this use case.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1459699364
  },
  {
    "id": "9a8aef13654ca648e6028d1a2767882e0745b2f4",
    "files": [
      "lib/url.c"
    ],
    "message": "url: Corrected get protocol family for FTP and LDAP\n\nFixed copy/paste error from commit a5aec58726.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1459491879
  },
  {
    "id": "7c314fd9f8e383c36b700ac231645efe1dfcd1eb",
    "files": [
      "lib/strerror.c"
    ],
    "message": "strerror: don't bit shift a signed integer\n\nBug: https://github.com/curl/curl/issues/744\nReported-by: Alexis La Goutte",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1459472729
  },
  {
    "id": "3d144ab99bed3ad9af1179c50f1df6334350aa98",
    "files": [
      "lib/url.c"
    ],
    "message": "url: don't use bad offset in tld_check_name to show error\n\nlibidn's tld_check_lz returns an error offset of the first character\nthat it failed to process, however that offset is not a byte offset and\nmay not even be in the locale encoding therefore we can't use it to show\nthe user the character that failed to process.\n\nBug: https://github.com/curl/curl/issues/731\nReported-by: Karlson2k",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1459017695
  },
  {
    "id": "568d26e0f5c3001fbd2c4c0c794b5365e967d379",
    "files": [
      "lib/vauth/digest.c"
    ],
    "message": "digest.c: Fixed checksrc warnings",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1458908254
  },
  {
    "id": "240cd84b494e0ffee8ad261c43b927d246cf6be1",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: fix ERR_remove_thread_state() for boringssl/libressl\n\nThe removed arg is only done in OpenSSL\n\nBug: https://twitter.com/xtraemeat/status/712564874098917376",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1458723929
  },
  {
    "id": "c5744340db2d55a95743c93f55e47869317b4c95",
    "files": [
      "lib/easy.c"
    ],
    "message": "easy: Remove poll failure check in easy_transfer\n\n.. because curl_multi_wait can no longer signal poll failure.\n\nfollow-up to 77e1726\n\nBug: https://github.com/curl/curl/issues/707",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1458415792
  },
  {
    "id": "a5aec58726beae3926bcbe2fed83953ea3cd636e",
    "files": [
      "lib/url.c",
      "lib/imap.c",
      "lib/urldata.h",
      "lib/pop3.c",
      "lib/smtp.c"
    ],
    "message": "imap/pop3/smtp: Fixed connections upgraded with TLS are not reused\n\nRegression since commit 710f14edba.\n\nBug: https://github.com/curl/curl/issues/422\nReported-by: Justin Ehlert",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1457465806
  },
  {
    "id": "cb222bcfef3d95e1fb04ca85b2e82e62bb92dfd3",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp_done: clear tunnel_state when secondary socket closes\n\nIntroducing a function for closing the secondary connection to make this\nbug less likely to happen again.\n\nReported-by: daboul\nCloses #701",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1457445653
  },
  {
    "id": "20de9b4f090e9000f90362ec6fdede7d1153a643",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie: Don't expire session cookies in remove_expired\n\nPrior to this change cookies with an expiry date that failed parsing\nand were converted to session cookies could be purged in remove_expired.\n\nBug: https://github.com/curl/curl/issues/697\nReported-by: Seth Mos",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1457202917
  },
  {
    "id": "3c2ef2a610814028a8dc9469b350d291327c673f",
    "files": [
      "lib/url.c"
    ],
    "message": "url: if Curl_done is premature then pipeline not in use\n\nPrevent a crash if 2 (or more) requests are made to the same host and\npipelining is enabled and the connection does not complete.\n\nBug: https://github.com/curl/curl/pull/690",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1456876504
  },
  {
    "id": "332414a30e82caa8fbc6cd76903f286736594052",
    "files": [
      "packages/OS400/curl.inc.in",
      "include/curl/curl.h",
      "docs/libcurl/opts/Makefile.am",
      "lib/getinfo.c",
      "docs/libcurl/curl_easy_getinfo.3",
      "packages/OS400/ccsidcurl.c",
      "docs/libcurl/opts/CURLINFO_TLS_SESSION.3",
      "docs/libcurl/opts/CURLINFO_TLS_SSL_PTR.3",
      "docs/libcurl/symbols-in-versions"
    ],
    "message": "getinfo: CURLINFO_TLS_SSL_PTR supersedes CURLINFO_TLS_SESSION\n\nThe two options are almost the same, except in the case of OpenSSL:\n\nCURLINFO_TLS_SESSION OpenSSL session internals is SSL_CTX *.\n\nCURLINFO_TLS_SSL_PTR OpenSSL session internals is SSL *.\n\nFor backwards compatibility we couldn't modify CURLINFO_TLS_SESSION to\nreturn an SSL pointer for OpenSSL.\n\nAlso, add support for the 'internals' member to point to SSL object for\nthe other backends axTLS, PolarSSL, Secure Channel, Secure Transport and\nwolfSSL.\n\nBug: https://github.com/curl/curl/issues/234\nReported-by: dkjjr89@users.noreply.github.com\n\nBug: https://curl.haxx.se/mail/lib-2015-09/0127.html\nReported-by: Michael K\u00f6nig",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1456272183
  },
  {
    "id": "3438ce7f468e837f98f51b798da15ff0a836cf43",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_remove_handle: keep the timeout list until after disconnect\n\nThe internal Curl_done() function uses Curl_expire() at times and that\nuses the timeout list. Better clean up the list once we're done using\nit. This caused a segfault.\n\nReported-by: \u8521\u6587\u51f1\nBug: https://curl.haxx.se/mail/lib-2016-02/0097.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1456229291
  },
  {
    "id": "186546f1c5ffa62526bd57deb5b9fd6e68da2a5e",
    "files": [
      "lib/tftp.c",
      "docs/libcurl/opts/CURLOPT_TFTP_NO_OPTIONS.3",
      "docs/libcurl/opts/Makefile.am",
      "tests/data/test1242",
      "docs/libcurl/curl_easy_setopt.3",
      "src/tool_getparam.c",
      "src/tool_help.c",
      "src/tool_operate.c",
      "src/tool_cfgable.h",
      "docs/curl.1",
      "tests/data/Makefile.inc",
      "tests/data/test1243"
    ],
    "message": "TFTP: add option to suppress TFTP option requests (Part 2)\n\n- Add tests.\n\n- Add an example to CURLOPT_TFTP_NO_OPTIONS.3.\n\n- Add --tftp-no-options to expose CURLOPT_TFTP_NO_OPTIONS.\n\nBug: https://github.com/curl/curl/issues/481",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1456214467
  },
  {
    "id": "9dc3eaee2901875d87690de62b427fa7cf96fead",
    "files": [
      "lib/tftp.c",
      "packages/OS400/curl.inc.in",
      "include/curl/curl.h",
      "docs/libcurl/opts/CURLOPT_TFTP_NO_OPTIONS.3",
      "lib/url.c",
      "lib/urldata.h",
      "docs/libcurl/curl_easy_setopt.3",
      "docs/libcurl/symbols-in-versions"
    ],
    "message": "TFTP: add option to suppress TFTP option requests (Part 1)\n\nSome TFTP server implementations ignore the \"TFTP Option extension\"\n(RFC 1782-1784, 2347-2349), or implement it in a flawed way, causing\nproblems with libcurl. Another switch for curl_easy_setopt\n\"CURLOPT_TFTP_NO_OPTIONS\" is introduced which prevents libcurl from\nsending TFTP option requests to a server, avoiding many problems caused\nby faulty implementations.\n\nBug: https://github.com/curl/curl/issues/481",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1456214458
  },
  {
    "id": "3fa220a6a5a3f3e9db89b04845ac5a8367445952",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "curl_sasl: Fix memory leak in digest parser\n\nIf any parameter in a HTTP DIGEST challenge message is present multiple\ntimes, memory allocated for all but the last entry should be freed.\n\nBug: https://github.com/curl/curl/pull/667",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1455936725
  },
  {
    "id": "b080a7cd0612f96875d2f2ae915f8c729258c9a7",
    "files": [
      "lib/http.c"
    ],
    "message": "http: Don't break the header into chunks if HTTP/2\n\nnghttp2 callback deals with TLS layer and therefore the header does not\nneed to be broken into chunks.\n\nBug: https://github.com/curl/curl/issues/659\nReported-by: Kazuho Oku",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1455652152
  },
  {
    "id": "078753c40d05fc4a07ee20a18f60fc325592b31c",
    "files": [
      "lib/vtls/gtls.c"
    ],
    "message": "gtls: fix for builds lacking encrypted key file support\n\nBug: https://github.com/curl/curl/pull/651",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1455420092
  },
  {
    "id": "c3aac489195526c23190fcfe4ce63cbe49ea00e6",
    "files": [
      "src/tool_urlglob.c"
    ],
    "message": "tool_urlglob: Allow reserved dos device names (Windows)\n\nAllow --output to reserved dos device names without the device prefix\nfor backwards compatibility.\n\nExample: --output NUL can be used instead of --output \\\\.\\NUL\n\nBug: https://github.com/curl/curl/commit/4520534#commitcomment-15954863\nReported-by: Gisle Vanem",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1454962182
  },
  {
    "id": "18c735e790e47a1199f9dd71a01aa9847d6474b1",
    "files": [
      "lib/cookie.c",
      "tests/data/test8"
    ],
    "message": "cookies: allow spaces in cookie names, cut of trailing spaces\n\nIt turns out Firefox and Chrome both allow spaces in cookie names and\nthere are sites out there using that.\n\nTurned out the code meant to strip off trailing space from cookie names\ndidn't work. Fixed now.\n\nTest case 8 modified to verify both these changes.\n\nCloses #639",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1454942994
  },
  {
    "id": "113f04e664b16b944e64498a73a4dab990fe9a68",
    "files": [
      "tests/data/test275",
      "tests/data/test1213",
      "tests/data/test549",
      "tests/data/test547",
      "tests/data/test279",
      "tests/data/test540",
      "tests/data/test83",
      "tests/data/test1228",
      "tests/data/test1415",
      "tests/data/test265",
      "tests/data/test94",
      "tests/data/test523",
      "tests/data/test551",
      "tests/data/test79",
      "tests/data/test85",
      "tests/data/test1230",
      "tests/data/test5",
      "tests/data/test213",
      "tests/data/test183",
      "tests/data/test1077",
      "tests/data/test1008",
      "tests/data/test550",
      "tests/data/test1528",
      "tests/data/test1216",
      "tests/data/test257",
      "tests/data/test162",
      "tests/data/test43",
      "tests/data/test239",
      "tests/data/test209",
      "tests/data/test1001",
      "tests/data/test590",
      "tests/data/test95",
      "tests/data/test563",
      "tests/data/test169",
      "tests/data/test1525",
      "tests/data/test1321",
      "tests/data/test82",
      "tests/data/test1232",
      "tests/data/test81",
      "tests/data/test278",
      "tests/data/test1097",
      "tests/data/test1088",
      "tests/data/test63",
      "tests/data/test179",
      "tests/data/test561",
      "tests/data/test299",
      "tests/data/test1428",
      "tests/data/test1509",
      "lib/http.c",
      "tests/data/test1526",
      "tests/data/test208",
      "tests/data/test84",
      "tests/data/test234",
      "tests/data/test1092",
      "tests/data/test185",
      "tests/data/test184",
      "tests/data/test548",
      "tests/data/test1035",
      "tests/data/test167",
      "tests/data/test16",
      "tests/data/test256",
      "lib/http_proxy.c",
      "tests/data/test259",
      "tests/data/test1098",
      "tests/data/test93",
      "tests/data/test1060",
      "tests/data/test206",
      "tests/data/test258",
      "tests/data/test1241",
      "tests/data/test1059",
      "tests/data/test1314",
      "tests/data/test1218",
      "tests/data/test1527",
      "tests/data/test1106",
      "tests/data/test263",
      "tests/data/test168",
      "tests/data/test170",
      "tests/data/test552",
      "tests/data/test1021",
      "tests/data/test1319",
      "tests/data/test1331",
      "tests/data/test264",
      "tests/data/test2047",
      "tests/data/test1320",
      "tests/data/test287",
      "tests/data/test171",
      "tests/data/test1061",
      "tests/data/test1104",
      "tests/data/test80",
      "tests/data/test1214",
      "tests/data/test555",
      "tests/data/test1034",
      "tests/data/test1087",
      "tests/data/test217",
      "tests/data/test1215",
      "tests/data/test1002",
      "tests/data/test503",
      "tests/data/test1078",
      "tests/data/test243",
      "tests/data/test165",
      "tests/data/test233",
      "tests/data/test1421"
    ],
    "message": "Proxy-Connection: stop sending this header by default\n\nRFC 7230 says we should stop. Firefox already stopped.\n\nBug: https://github.com/curl/curl/issues/633\nReported-By: Brad Fitzpatrick\n\nCloses #633",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1454926180
  },
  {
    "id": "d572d2664d82fb8a14b838910018b5683b0af837",
    "files": [
      "src/tool_operhlp.c"
    ],
    "message": "tool_operhlp: Check for backslashes in get_url_file_name\n\nExtract the filename from the last slash or backslash. Prior to this\nchange backslashes could be part of the filename.\n\nThis change needed for the curl tool built for Cygwin. Refer to the\nCYGWIN addendum in advisory 20160127B.\n\nBug: https://curl.haxx.se/docs/adv_20160127B.html",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1454919244
  },
  {
    "id": "d6a8869ea346ece7026afbc38d2cd4344a45909f",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: Fix signed/unsigned mismatch warning in X509V3_ext\n\nsk_X509_EXTENSION_num may return an unsigned integer, however the value\nwill fit in an int.\n\nBug: https://github.com/curl/curl/commit/dd1b44c#commitcomment-15913896\nReported-by: Gisle Vanem",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1454803849
  },
  {
    "id": "9e7fcd4291425a528075e6e8e8a459e2ee063463",
    "files": [
      "lib/idn_win32.c"
    ],
    "message": "idn_win32: Better error checking\n\n.. also fix a conversion bug in the unused function\ncurl_win32_ascii_to_idn().\n\nAnd remove wprintfs on error (Jay).\n\nBug: https://github.com/curl/curl/pull/637",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1454799111
  },
  {
    "id": "742deff4dddde519e8928c7b13a66a51e83383f1",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fix memory leak in domain populate\n\nFree an existing domain before replacing it.\n\nBug: https://github.com/curl/curl/issues/635\nReported-by: silveja1@users.noreply.github.com",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1454627467
  },
  {
    "id": "d41dcba4e9b69d6b761e3460cc6ae7e8fd8f621f",
    "files": [
      "lib/url.c"
    ],
    "message": "NTLM: Fix ConnectionExists to compare Proxy credentials\n\nProxy NTLM authentication should compare credentials when\nre-using a connection similar to host authentication, as it\nauthenticate the connection.\n\nExample:\ncurl -v -x http://proxy:port http://host/ -U good_user:good_pwd\n  --proxy-ntlm --next -x http://proxy:port http://host/\n    [-U fake_user:fake_pwd --proxy-ntlm]\n\nCVE-2016-0755\n\nBug: http://curl.haxx.se/docs/adv_20160127A.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1453848175
  },
  {
    "id": "3017d8a8d8849ebd4feae4f5eae037cd55736a61",
    "files": [
      "src/tool_doswin.c",
      "src/tool_operate.c",
      "src/tool_cb_hdr.c",
      "src/tool_doswin.h"
    ],
    "message": "curl: avoid local drive traversal when saving file (Windows)\n\ncurl does not sanitize colons in a remote file name that is used as the\nlocal file name. This may lead to a vulnerability on systems where the\ncolon is a special path character. Currently Windows/DOS is the only OS\nwhere this vulnerability applies.\n\nCVE-2016-0754\n\nBug: http://curl.haxx.se/docs/adv_20160127B.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1453848175
  },
  {
    "id": "d58ba66eeceb5a290ecd50f596606a7f77d68b4b",
    "files": [
      "lib/vtls/mbedtls.c"
    ],
    "message": "mbedtls: Fix pinned key return value on fail\n\n- Switch from verifying a pinned public key in a callback during the\ncertificate verification to inline after the certificate verification.\n\nThe callback method had three problems:\n\n1. If a pinned public key didn't match, CURLE_SSL_PINNEDPUBKEYNOTMATCH\nwas not returned.\n\n2. If peer certificate verification was disabled the pinned key\nverification did not take place as it should.\n\n3. (related to #2) If there was no certificate of depth 0 the callback\nwould not have checked the pinned public key.\n\nThough all those problems could have been fixed it would have made the\ncode more complex. Instead we now verify inline after the certificate\nverification in mbedtls_connect_step2.\n\nRef: http://curl.haxx.se/mail/lib-2016-01/0047.html\nRef: https://github.com/bagder/curl/pull/601",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1453106890
  },
  {
    "id": "be538e07667e1ba880b7201014be706851428d40",
    "files": [
      "docs/libcurl/opts/CURLOPT_SSH_PUBLIC_KEYFILE.3",
      "RELEASE-NOTES",
      "lib/ssh.c"
    ],
    "message": "ssh: make CURLOPT_SSH_PUBLIC_KEYFILE treat \"\" as NULL\n\nThe CURLOPT_SSH_PUBLIC_KEYFILE option has been documented to handle\nempty strings specially since curl-7_25_0-31-g05a443a but the behavior\nwas unintentionally removed in curl-7_38_0-47-gfa7d04f.\n\nThis commit restores the original behavior and clarifies it in the\ndocumentation that NULL and \"\" have both the same meaning when passed\nto CURLOPT_SSH_PUBLIC_KEYFILE.\n\nBug: http://curl.haxx.se/mail/lib-2016-01/0072.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1452850474
  },
  {
    "id": "3d209b5fb0c792655288758d48a2703b88a84145",
    "files": [
      "lib/url.c",
      "tests/data/test1213"
    ],
    "message": "lib: Prefix URLs with lower-case protocol names/schemes\n\nBefore this patch, if a URL does not start with the protocol\nname/scheme, effective URLs would be prefixed with upper-case protocol\nnames/schemes. This behavior might not be expected by library users or\nend users.\n\nFor example, if `CURLOPT_DEFAULT_PROTOCOL` is set to \"https\". And the\nURL is \"hostname/path\". The effective URL would be\n\"HTTPS://hostname/path\" instead of \"https://hostname/path\".\n\nAfter this patch, effective URLs would be prefixed with a lower-case\nprotocol name/scheme.\n\nCloses #597\n\nSigned-off-by: Mohammad AlSaleh <CE.Mohammad.AlSaleh@gmail.com>",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1452551922
  },
  {
    "id": "325686ef9eaf969830965ecaf044289cf8777f49",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: handle the received SETTINGS frame\n\nThis regression landed in 5778e6f5 and made libcurl not act on received\nsettings and instead stayed with its internal defaults.\n\nBug: http://curl.haxx.se/mail/lib-2016-01/0031.html\nReported-by: Bankde",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1452290819
  },
  {
    "id": "d9b4d1ce20e89a00dba8afc3767845fb7e357b21",
    "files": [
      "lib/url.c",
      "tests/data/test2047",
      "tests/data/test2046",
      "tests/data/Makefile.inc"
    ],
    "message": "connection reuse: IDN host names fixed\n\nUse the ACE form of IDN hostnames as key in the connection cache.  Add\nnew tests.\n\nCloses #592",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1452208786
  },
  {
    "id": "6c2c019654e658a78ccf692f5b8553cef337ec27",
    "files": [
      "lib/x509asn1.c"
    ],
    "message": "x509asn1: Fix host altname verification\n\n- In Curl_verifyhost check all altnames in the certificate.\n\nPrior to this change only the first altname was checked. Only the GSKit\nSSL backend was affected by this bug.\n\nBug: http://curl.haxx.se/mail/lib-2015-12/0062.html\nReported-by: John Kohl",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1450206448
  },
  {
    "id": "12f6bf5e5806d42119638bffc82d3926beca2bec",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Fix hanging paused stream\n\nWhen NGHTTP2_ERR_PAUSE is returned from data_source_read_callback, we\nmight not process DATA frame fully.  Calling nghttp2_session_mem_recv()\nagain will continue to process DATA frame, but if there is no incoming\nframes, then we have to call it again with 0-length data.  Without this,\non_stream_close callback will not be called, and stream could be hanged.\n\nBug: http://curl.haxx.se/mail/lib-2015-11/0103.html\nReported-by: Francisco Moraes",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1449596432
  },
  {
    "id": "738b0ba09eb0b9e662dea3c436a88d505195f5e4",
    "files": [
      "lib/formdata.c"
    ],
    "message": "formdata: Check if length is too large for memory\n\n- If the size of the length type (curl_off_t) is greater than the size\nof the size_t type then check before allocating memory to make sure the\nvalue of length will fit in a size_t without overflow. If it doesn't\nthen return CURLE_BAD_FUNCTION_ARGUMENT.\n\nBug: https://github.com/bagder/curl/issues/425#issuecomment-154518679\nReported-by: Steve Holme",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1449474204
  },
  {
    "id": "81ae6d01fa9c0b599e4831fa268acf5b6bc8b142",
    "files": [
      "lib/nonblock.c"
    ],
    "message": "nonblock: fix setting non-blocking mode for Amiga\n\nIoctlSocket() apparently wants a pointer to a long, passed as a char *\nin its third parameter. This bug was introduced already back in commit\nc5fdeef41d from October 1 2001!\n\nBug: http://curl.haxx.se/mail/lib-2015-11/0088.html\nReported-by: Norbert Kett",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1448663370
  },
  {
    "id": "db05d7a731109a2a5234168973783499d300fdb8",
    "files": [
      "src/tool_paramhlp.c"
    ],
    "message": "tool_paramhlp: Fixed display of URL index in password prompt for --next\n\nCommit f3bae6ed73 added the URL index to the password prompt when using\n--next. Unfortunately, because the size_t specifier (%zu) is not\nsupported by all sprintf() implementations we use the curl_off_t format\nspecifier instead. The display of an incorrect value arises on platforms\nwhere size_t and curl_off_t are of a different size.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1448607542
  },
  {
    "id": "cd2b73b3ed9d971eca87ee5c6245cc1cc6f83d06",
    "files": [
      "lib/http.c"
    ],
    "message": "timecond: do not add if-modified-since without timecondition\n\nThe RTSP code path didn't skip adding the if-modified-since for certain\nRTSP code paths, even if CURLOPT_TIMECONDITION was set to\nCURL_TIMECOND_NONE.\n\nAlso, an unknown non-zero CURLOPT_TIMECONDITION value no longer equals\nCURL_TIMECOND_IFMODSINCE.\n\nBug: http://stackoverflow.com/questions/33903982/curl-timecond-none-doesnt-work-how-to-remove-if-modified-since-header",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1448447890
  },
  {
    "id": "ad2d51754573cef5f7ff1df2ee48591bdcfcdc99",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: Free modules on cleanup\n\nCurl_ossl_init calls OPENSSL_load_builtin_modules() but\nCurl_ossl_cleanup doesn't make a call to free these modules.\n\nBug: https://github.com/bagder/curl/issues/526",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1447449101
  },
  {
    "id": "64e959ffe37c436503f9fed1ce2d6ee6ae50bd9a",
    "files": [
      "lib/vtls/gtls.c",
      "src/tool_cb_prg.c",
      "lib/http2.c",
      "lib/http.c",
      "lib/splay.c",
      "lib/rtsp.c",
      "lib/ftp.c",
      "lib/easy.c",
      "lib/x509asn1.c",
      "lib/smtp.c",
      "lib/asyn-ares.c",
      "lib/vtls/openssl.c",
      "src/tool_operate.c",
      "lib/openldap.c",
      "lib/url.c",
      "lib/telnet.c",
      "lib/imap.c",
      "lib/ssh.c",
      "lib/curl_memory.h"
    ],
    "message": "cleanup: general removal of TODO (and similar) comments\n\nThey tend to never get updated anyway so they're frequently inaccurate\nand we never go back to revisit them anyway. We document issues to work\non properly in KNOWN_BUGS and TODO instead.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1447427726
  },
  {
    "id": "278ea24a7a6461a97c3c5d9b37fc9fdd3a9802f4",
    "files": [
      "tests/unit/unit1602.c"
    ],
    "message": "unit1602: Fixed failure in torture test",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1447364857
  },
  {
    "id": "b6baa108fac4d5c251fd4951867444d7cb92fe96",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: fixed unicode build for digest authentication\n\nCloses #525",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1447355500
  },
  {
    "id": "f54a4aa9a383c93065735e441355c49ef42129f4",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: avoid freeing constant string\n\nThe fix in 1a614c6c3 was wrong and would leed to free() of a fixed\nstring.\n\nPointed-out-by: Kamil Dudka",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1447062895
  },
  {
    "id": "729b92afbe4a350ee725a5001f041170dd12789b",
    "files": [
      "src/slist_wc.c"
    ],
    "message": "tool: Fixed a memory leak on OOM introduced in 19cb0c4a",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1446997825
  },
  {
    "id": "23b8fc15c8653133b2ea664b8f894c74d8862a3c",
    "files": [
      "lib/imap.c",
      "tests/data/test841",
      "tests/data/Makefile.inc"
    ],
    "message": "imap: Don't check for continuation when executing a CUSTOMREQUEST\n\nBug: https://github.com/bagder/curl/issues/486\nCloses https://github.com/bagder/curl/pull/487",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1446984753
  },
  {
    "id": "50bff12ac83fa9db16784a06c7fd69a5d3c853ef",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed double quote in LIST command when mailbox contains spaces",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1446895234
  },
  {
    "id": "cd3aba1a5c618bb20b418ac73d3627b21fb795c8",
    "files": [
      "lib/getinfo.c"
    ],
    "message": "getinfo: CURLINFO_ACTIVESOCKET: fix bad socket value\n\n- Set user info param to the socket returned by Curl_getconnectinfo,\nregardless of if the socket is bad. Effectively this means the user info\nparam now will receive CURL_SOCKET_BAD instead of -1 on bad socket.\n\n- Remove incorrect comments.\n\nCURLINFO_ACTIVESOCKET is documented to write CURL_SOCKET_BAD to user\ninfo param but prior to this change it wrote -1.\n\nBug: https://github.com/bagder/curl/pull/518\nReported-by: Marcel Raad",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1446787816
  },
  {
    "id": "19cb0c4a88aaa388fbcba862c30514778ae2cf5a",
    "files": [
      "src/tool_easysrc.h",
      "src/slist_wc.h",
      "src/Makefile.vc6",
      "src/slist_wc.c",
      "src/tool_easysrc.c",
      "src/Makefile.inc"
    ],
    "message": "tool: Generate easysrc with last cache linked-list\n\nUsing a last cache linked-list improves the performance of easysrc\ngeneration.\n\nBug: https://github.com/bagder/curl/issues/444\nRef: https://github.com/bagder/curl/issues/429\n\nCloses #452",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1445119250
  },
  {
    "id": "2b98cb57c4cd5bf9968f09a12222c517d397919b",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Don't pass unitialized name+len pairs to nghttp2_submit_request\n\nbug introduced by 18691642931e5c7ac8af83ac3a84fbcb36000f96.\n\nCloses #493",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1445031963
  },
  {
    "id": "443e81ea47bcb6e60903cf3954cfe907217f05e9",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: fix off-by-one finit[] array size\n\nintroduced in c6aedf680f6. It needs to be CURLM_STATE_LAST big since it\nmust hande the range 0 .. CURLM_STATE_MSGSENT (18) and CURLM_STATE_LAST\nis 19 right now.\n\nReported-by: Dan Fandrich\nBug: http://curl.haxx.se/mail/lib-2015-10/0069.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1445028176
  },
  {
    "id": "c6aedf680f6923ffbe4dd4fd4e68e7dadcd5fb19",
    "files": [
      "lib/urldata.h",
      "lib/transfer.c",
      "lib/http.c",
      "lib/url.c",
      "lib/telnet.c",
      "lib/ssh.c",
      "lib/ftp.c",
      "lib/transfer.h",
      "lib/multi.c"
    ],
    "message": "fread_func: move callback pointer from set to state struct\n\n... and assign it from the set.fread_func_set pointer in the\nCurl_init_CONNECT function. This A) avoids that we have code that\nassigns fields in the 'set' struct (which we always knew was bad) and\nmore importantly B) it makes it impossibly to accidentally leave the\nwrong value for when the handle is re-used etc.\n\nIntroducing a state-init functionality in multi.c, so that we can set a\nspecific function to get called when we enter a state. The\nCurl_init_CONNECT is thus called when switching to the CONNECT state.\n\nBug: https://github.com/bagder/curl/issues/346\n\nCloses #346",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1444944739
  },
  {
    "id": "69b89050d4b824b54449df907bb9f23f80a3c382",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: Fix algorithm init\n\n- Change algorithm init to happen after OpenSSL config load.\n\nAdditional algorithms may be available due to the user's config so we\ninitialize the algorithms after the user's config is loaded.\n\nBug: https://github.com/bagder/curl/issues/447\nReported-by: Denis Feklushkin",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1443494845
  },
  {
    "id": "46ad4f7f93d80998eba01ceaa6c2619e381a151e",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: avoid superfluous Curl_expire() calls\n\n... only call it when there is data arriving for another handle than the\none that is currently driving it.\n\nImproves single-stream download performance quite a lot.\n\nThanks-to: Tatsuhiro Tsujikawa\nBug: http://curl.haxx.se/mail/lib-2015-09/0097.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1443389013
  },
  {
    "id": "4d95491636eeb14e32c287ef183dbcdc05074f48",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool: generate easysrc only on --libcurl\n\nCode should only be generated when --libcurl is used.\n\nBug: https://github.com/bagder/curl/issues/429\nReported-by: @greafhe, Jay Satiro\n\nCloses #429\nCloses #442",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1442746458
  },
  {
    "id": "30c131f51f605d35e5d90f4be1727045fef17351",
    "files": [
      "lib/vtls/gskit.c",
      "lib/vtls/vtls.c",
      "lib/vtls/gtls.c",
      "lib/vtls/cyassl.c",
      "lib/vtls/vtls.h",
      "lib/vtls/openssl.c",
      "lib/vtls/nss.c"
    ],
    "message": "ssl: add server cert's \"sha256//\" hash to verbose\n\nAdd a \"pinnedpubkey\" section to the \"Server Certificate\" verbose\n\nBug: https://github.com/bagder/curl/issues/410\nReported-by: W. Mark Kubacki\n\nCloses #430\nCloses #410",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1442697459
  },
  {
    "id": "958d2ffb198166a062a0ff20d009c64972a2b374",
    "files": [
      "RELEASE-NOTES",
      "lib/vtls/nss.c"
    ],
    "message": "nss: prevent NSS from incorrectly re-using a session\n\nWithout this workaround, NSS re-uses a session cache entry despite the\nserver name does not match.  This causes SNI host name to differ from\nthe actual host name.  Consequently, certain servers (e.g. github.com)\nrespond by 400 to such requests.\n\nBug: https://bugzilla.mozilla.org/1202264",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1442590731
  },
  {
    "id": "df6a4d3519655b26137a90a440c5a99f4abe7e22",
    "files": [
      "lib/curl_setup.h",
      "lib/strerror.c",
      "lib/curl_sspi.h"
    ],
    "message": "curl_sspi: fix possibly undefined CRYPT_E_REVOKED\n\nBug: https://github.com/bagder/curl/pull/411\nReported-by: Viktor Szakats",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1441865853
  },
  {
    "id": "7380433d6a2f4aaec8dfcacfffadc260b417c7a3",
    "files": [
      "lib/vtls/nss.c"
    ],
    "message": "nss: do not directly access SSL_ImplementedCiphers[]\n\nIt causes dynamic linking issues at run-time after an update of NSS.\n\nBug: https://lists.fedoraproject.org/pipermail/devel/2015-September/214117.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1441370136
  },
  {
    "id": "62f306ff34f569020ce54451da7c841d162710ac",
    "files": [
      "lib/getinfo.c",
      "docs/libcurl/symbols-in-versions",
      "docs/KNOWN_BUGS",
      "include/curl/curl.h",
      "docs/libcurl/curl_easy_getinfo.3"
    ],
    "message": "getinfo: added CURLINFO_ACTIVESOCKET\n\nThis patch addresses known bug #76, where on 64-bit Windows SOCKET is 64\nbits wide, but long is only 32, making CURLINFO_LASTSOCKET unreliable.\n\nSigned-off-by: Razvan Cojocaru <rcojocaru@bitdefender.com>",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1440412457
  },
  {
    "id": "b46a7744bcdc37411346566872bf19baa5f8c4e3",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool_operate: Fix CURLOPT_SSL_OPTIONS for builds without HTTPS\n\n- Set CURLOPT_SSL_OPTIONS only if the tool enabled an SSL option.\n\nBroken by me several days ago in 172b2be.\nhttps://github.com/bagder/curl/commit/172b2be#diff-70b44ee478e58d4e1ddcf9c9a73d257b\n\nBug: http://curl.haxx.se/mail/lib-2015-07/0119.html\nReported-by: Dan Fandrich",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1437856335
  },
  {
    "id": "40c921f8b825c80bfe0d34f3137f1ece122369c6",
    "files": [
      "lib/curl_sspi.c",
      "lib/connect.c"
    ],
    "message": "Windows: Fix VerifyVersionInfo calls\n\n- Fix the VerifyVersionInfo calls, which we use to test for the OS major\nversion, to also test for the minor version as well as the service pack\nmajor and minor versions.\n\nMSDN: \"If you are testing the major version, you must also test the\nminor version and the service pack major and minor versions.\"\n\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms725492.aspx\n\nBug: https://github.com/bagder/curl/pull/353#issuecomment-123493098\nReported-by: Marcel Raad <MarcelRaad@users.noreply.github.com>",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1437544543
  },
  {
    "id": "172b2beba6b89b632c09be7a88645e3a0607cfe9",
    "files": [
      "docs/SSL-PROBLEMS",
      "lib/urldata.h",
      "src/tool_setopt.h",
      "src/tool_setopt.c",
      "lib/vtls/schannel.c",
      "src/tool_getparam.c",
      "src/tool_help.c",
      "tests/data/test2043",
      "tests/data/Makefile.inc",
      "include/curl/curl.h",
      "src/tool_cfgable.h",
      "docs/curl.1",
      "lib/url.c",
      "src/tool_operate.c",
      "docs/libcurl/opts/CURLOPT_SSL_OPTIONS.3"
    ],
    "message": "SSL: Add an option to disable certificate revocation checks\n\nNew tool option --ssl-no-revoke.\nNew value CURLSSLOPT_NO_REVOKE for CURLOPT_SSL_OPTIONS.\n\nCurrently this option applies only to WinSSL where we have automatic\ncertificate revocation checking by default. According to the\nssl-compared chart there are other backends that have automatic checking\n(NSS, wolfSSL and DarwinSSL) so we could possibly accommodate them at\nsome later point.\n\nBug: https://github.com/bagder/curl/issues/264\nReported-by: zenden2k <zenden2k@gmail.com>",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1437115216
  },
  {
    "id": "1f70cdef985aa5635a4f84be612b242ccaa8a10b",
    "files": [
      "src/tool_cb_hdr.c"
    ],
    "message": "tool_header_cb: fflush the header stream\n\nFlush the header stream when -D is used so that they are sent off\nearlier.\n\nBug: https://github.com/bagder/curl/issues/324\nReported-by: C\u00e9dric Connes",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1435258436
  },
  {
    "id": "f65ab8864e2f9d580daf0ca48c972d6124a2ff3d",
    "files": [
      "lib/http.h",
      "docs/libcurl/opts/CURLMOPT_PUSHFUNCTION.3",
      "lib/http.c",
      "lib/http2.c",
      "include/curl/multi.h"
    ],
    "message": "http2: fixed the header accessor functions for the push callback",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1435182282
  },
  {
    "id": "903b6e05565bf826b4194447864288642214b094",
    "files": [
      "lib/multi.c",
      "lib/transfer.c"
    ],
    "message": "pretransfer: init state.infilesize here, not in add_handle\n\n... to properly support that options are set to the handle after it is\nadded to the multi handle.\n\nBug: http://curl.haxx.se/mail/lib-2015-06/0122.html\nReported-by: Stefan B\u00fchler",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1435106917
  },
  {
    "id": "ef0fdb83b89c87b63e94bf6ecdab5cd8c6458b2e",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie: Fix bug in export if any-domain cookie is present\n\nIn 3013bb6 I had changed cookie export to ignore any-domain cookies,\nhowever the logic I used to do so was incorrect, and would lead to a\nbusy loop in the case of exporting a cookie list that contained\nany-domain cookies. The result of that is worse though, because in that\ncase the other cookies would not be written resulting in an empty file\nonce the application is terminated to stop the busy loop.",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1434670640
  },
  {
    "id": "26ddc536b0ab5fc62d6503c82c34dd3dbf112dc3",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: fix use of uninitialized buffer\n\nMake sure that the error buffer is always initialized and simplify the\nuse of it to make the logic easier.\n\nBug: https://github.com/bagder/curl/issues/318\nReported-by: sneis",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1434630031
  },
  {
    "id": "26583a62ab8f29f672f91932b81c595f33c72b9f",
    "files": [
      "docs/examples/asiohiper.cpp",
      "docs/examples/certinfo.c",
      "docs/examples/debug.c",
      "docs/examples/cookie_interface.c",
      "docs/examples/chkspeed.c",
      "docs/examples/anyauthput.c",
      "docs/examples/cacertinmem.c",
      "docs/examples/10-at-a-time.c"
    ],
    "message": "examples: add descriptions with <DESC>\n\nUsing this fixed format for example descriptions, we can generate a\nbetter list on the web site.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1434615422
  },
  {
    "id": "b88f980a7437abc1159a1185c04d381347c8f5b1",
    "files": [
      "lib/ftp.c",
      "lib/http_proxy.h",
      "lib/http_proxy.c"
    ],
    "message": "FTP: do the HTTP CONNECT for data connection blocking\n\n** WORK-AROUND **\n\nThe introduced non-blocking general behaviour for Curl_proxyCONNECT()\ndidn't work for the data connection establishment unless it was very\nfast. The newly introduced function argument makes it operate in a more\nblocking manner, more like it used to work in the past. This blocking\napproach is only used when the FTP data connecting through HTTP proxy.\n\nBlocking like this is bad. A better fix would make it work more\nasynchronously.\n\nBug: https://github.com/bagder/curl/issues/278",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1434542412
  },
  {
    "id": "50c7f17e503fbab5081b69c97f9d4645389b9270",
    "files": [
      "lib/smb.c"
    ],
    "message": "SMB: rangecheck values read off incoming packet\n\nCVE-2015-3237\n\nDetected by Coverity. CID 1299430.\n\nBug: http://curl.haxx.se/docs/adv_20150617B.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1434519793
  },
  {
    "id": "3e7ec1e8492824f0c6f6dea718624935a1407069",
    "files": [
      "lib/urldata.h",
      "lib/vtls/schannel.c",
      "lib/vtls/schannel.h"
    ],
    "message": "schannel: schannel_recv overhaul\n\nThis commit is several drafts squashed together. The changes from each\ndraft are noted below. If any changes are similar and possibly\ncontradictory the change in the latest draft takes precedence.\n\nBug: https://github.com/bagder/curl/issues/244\nReported-by: Chris Araman\n\n%%\n%% Draft 1\n%%\n- return 0 if len == 0. that will have to be documented.\n- continue on and process the caches regardless of raw recv\n- if decrypted data will be returned then set the error code to CURLE_OK\nand return its count\n- if decrypted data will not be returned and the connection has closed\n(eg nread == 0) then return 0 and CURLE_OK\n- if decrypted data will not be returned and the connection *hasn't*\nclosed then set the error code to CURLE_AGAIN --only if an error code\nisn't already set-- and return -1\n- narrow the Win2k workaround to only Win2k\n\n%%\n%% Draft 2\n%%\n- Trying out a change in flow to handle corner cases.\n\n%%\n%% Draft 3\n%%\n- Back out the lazier decryption change made in draft2.\n\n%%\n%% Draft 4\n%%\n- Some formatting and branching changes\n- Decrypt all encrypted cached data when len == 0\n- Save connection closed state\n- Change special Win2k check to use connection closed state\n\n%%\n%% Draft 5\n%%\n- Default to CURLE_AGAIN in cleanup if an error code wasn't set and the\nconnection isn't closed.\n\n%%\n%% Draft 6\n%%\n- Save the last error only if it is an unrecoverable error.\n\nPrior to this I saved the last error state in all cases; unfortunately\nthe logic to cover that in all cases would lead to some muddle and I'm\nconcerned that could then lead to a bug in the future so I've replaced\nit by only recording an unrecoverable error and that state will persist.\n\n- Do not recurse on renegotiation.\n\nInstead we'll continue on to process any trailing encrypted data\nreceived during the renegotiation only.\n\n- Move the err checks in cleanup after the check for decrypted data.\n\nIn either case decrypted data is always returned but I think it's easier\nto understand when those err checks come after the decrypted data check.\n\n%%\n%% Draft 7\n%%\n- Regardless of len value go directly to cleanup if there is an\nunrecoverable error or a close_notify was already received. Prior to\nthis change we only acknowledged those two states if len != 0.\n\n- Fix a bug in connection closed behavior: Set the error state in the\ncleanup, because we don't know for sure it's an error until that time.\n\n- (Related to above) In the case the connection is closed go \"greedy\"\nwith the decryption to make sure all remaining encrypted data has been\ndecrypted even if it is not needed at that time by the caller. This is\nnecessary because we can only tell if the connection closed gracefully\n(close_notify) once all encrypted data has been decrypted.\n\n- Do not renegotiate when an unrecoverable error is pending.\n\n%%\n%% Draft 8\n%%\n- Don't show 'server closed the connection' info message twice.\n\n- Show an info message if server closed abruptly (missing close_notify).",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1434514623
  },
  {
    "id": "ff7097f72c26a9d389f135f76cb28e10ca30f4c1",
    "files": [
      "lib/rtsp.c",
      "lib/multi.c",
      "lib/http.c"
    ],
    "message": "urldata: store POST size in state.infilesize too\n\n... to simplify checking when PUT _or_ POST have completed.\n\nReported-by: Frank Meier\nBug: http://curl.haxx.se/mail/lib-2015-06/0019.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1434317461
  },
  {
    "id": "cbf2920d02b6d8feff7b8a36b174fef162bbcf1d",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: LibreSSL and BoringSSL do not use TLS_client_method\n\nAlthough OpenSSL 1.1.0+ deprecated SSLv23_client_method in favor of\nTLS_client_method LibreSSL and BoringSSL didn't and still use\nSSLv23_client_method.\n\nBug: https://github.com/bagder/curl/commit/49a6642#commitcomment-11578009\nReported-by: asavah@users.noreply.github.com",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1433821526
  },
  {
    "id": "20ac3458068b2bd11c3ce802f091af66b55e2c23",
    "files": [
      "tests/data/test1530",
      "tests/libtest/lib1530.c",
      "lib/connect.c",
      "tests/data/Makefile.inc",
      "tests/libtest/Makefile.inc"
    ],
    "message": "CURLOPT_OPENSOCKETFUNCTION: return error at once\n\nWhen CURL_SOCKET_BAD is returned in the callback, it should be treated\nas an error (CURLE_COULDNT_CONNECT) if no other socket is subsequently\ncreated when trying to connect to a server.\n\nBug: http://curl.haxx.se/mail/lib-2015-06/0047.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1433802122
  },
  {
    "id": "3013bb6b1c8e63e46ed0324eddffa6c54228acd7",
    "files": [
      "docs/examples/cookie_interface.c",
      "docs/libcurl/opts/CURLOPT_COOKIELIST.3",
      "lib/cookie.c"
    ],
    "message": "cookie: Stop exporting any-domain cookies\n\nPrior to this change any-domain cookies (cookies without a domain that\nare sent to any domain) were exported with domain name \"unknown\".\n\nBug: https://github.com/bagder/curl/issues/292",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1433382527
  },
  {
    "id": "e8423f9ce1507c749c559f1ac1847fa433e66c45",
    "files": [
      "lib/vtls/gtls.c",
      "lib/memdebug.c",
      "src/tool_parsecfg.c",
      "lib/vtls/openssl.c",
      "src/tool_easysrc.c",
      "lib/curl_setup.h",
      "lib/netrc.c",
      "src/tool_cb_dbg.c",
      "lib/cookie.c",
      "src/tool_getparam.c"
    ],
    "message": "curl_setup: Add macros for FOPEN_READTEXT, FOPEN_WRITETEXT\n\n- Change fopen calls to use FOPEN_READTEXT instead of \"r\" or \"rt\"\n- Change fopen calls to use FOPEN_WRITETEXT instead of \"w\" or \"wt\"\n\nThis change is to explicitly specify when we need to read/write text.\nUnfortunately 't' is not part of POSIX fopen so we can't specify it\ndirectly. Instead we now have FOPEN_READTEXT, FOPEN_WRITETEXT.\n\nPrior to this change we had an issue on Windows if an application that\nuses libcurl overrides the default file mode to binary. The default file\nmode in Windows is normally text mode (translation mode) and that's what\nlibcurl expects.\n\nBug: https://github.com/bagder/curl/pull/258#issuecomment-107093055\nReported-by: Orgad Shaneh",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1433143283
  },
  {
    "id": "41db5aed7a7b5941e5a884f8a452648e19e2098f",
    "files": [
      "docs/examples/http2-download.c"
    ],
    "message": "http2-download: check for CURLPIPE_MULTIPLEX properly\n\nBug: http://curl.haxx.se/mail/lib-2015-06/0001.html\nReported-by: Rafayel Mkrtchyan",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1433141130
  },
  {
    "id": "4bb815a32ed1fa20dec415b3b018ff18c014c19c",
    "files": [
      "tests/data/test159",
      "lib/http.c"
    ],
    "message": "HTTP-NTLM: fail auth on connection close instead of looping\n\nBug: https://github.com/bagder/curl/issues/256",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1433107275
  },
  {
    "id": "b6e3da5f081bfae655939dcf4e657eb31dfe2444",
    "files": [
      "lib/conncache.c"
    ],
    "message": "conncache: fixed memory leak on OOM (torture tests)",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1432459147
  },
  {
    "id": "817323ed822ef16d7551315b7a74cf9a6c9e07af",
    "files": [
      "lib/url.c"
    ],
    "message": "parse_proxy: switch off tunneling if non-HTTP proxy\n\nnon-HTTP proxy implies not using CURLOPT_HTTPPROXYTUNNEL\n\nBug: http://curl.haxx.se/mail/lib-2015-05/0056.html\nReported-by: Sean Boudreau",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1432304393
  },
  {
    "id": "995c6006fecf7633f9fc5eb4b72da4f282fc12bb",
    "files": [
      "lib/strerror.c"
    ],
    "message": "strerror: Change SEC_E_ILLEGAL_MESSAGE description\n\nPrior to this change the description for SEC_E_ILLEGAL_MESSAGE was OS\nand language specific, and invariably translated to something not very\nhelpful like: \"The message received was unexpected or badly formatted.\"\n\nBug: https://github.com/bagder/curl/issues/267\nReported-by: Michael Osipov",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1432276238
  },
  {
    "id": "193251794aa702b9156280967f19cbebaaae035d",
    "files": [
      "lib/url.c"
    ],
    "message": "IsPipeliningPossible: fixed for http2",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1431934427
  },
  {
    "id": "2ce2f03007cca9e3d8cc1b481ae7c4489c111741",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Fix bug that data to be drained are overwritten by pending \"paused\" data",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1431932238
  },
  {
    "id": "d261652d422b0724406d03df8ff753ac7a20b7b6",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Fix streams get stuck\n\nThis commit fixes the bug that streams get stuck if stream gets some\nDATA, and stream->closed becomes true at the same time.  Previously,\nin this condition, after we processed DATA, we are going to try to\nread data from underlying transport, but there is no data, and gets\nEAGAIN.  There was no code path to evaludate stream->closed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1431932238
  },
  {
    "id": "33058a1dc34cb0673fb79ba8d07c5553a5a4d62a",
    "files": [
      "lib/netrc.c"
    ],
    "message": "netrc: Read in text mode when cygwin\n\nUse text mode when cygwin to eliminate trailing carriage returns.\n\nBug: https://github.com/bagder/curl/pull/258",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1430894071
  },
  {
    "id": "690317aae21d2b081040dea5405708d1e2d76627",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: skip trace outputs for ssl_ver == 0\n\nThe OpenSSL trace callback is wonderfully undocumented but given a\njourney in the source code, it seems the cases were ssl_ver is zero\ndoesn't follow the same pattern and thus turned out confusing and\nmisleading. For now, we skip doing any CURLINFO_TEXT logging on those\nbut keep sending them as CURLINFO_SSL_DATA_OUT/IN.\n\nAlso, I added direction to the text info and I edited some functions\nslightly.\n\nBug: https://github.com/bagder/curl/issues/219\nReported-by: Jay Satiro, Ashish Shukla",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1430735279
  },
  {
    "id": "4bb8bad964f7ce84866f67054f8fae431ed45136",
    "files": [
      "lib/vtls/schannel.c"
    ],
    "message": "Bug born in changes made several days ago 9a91e80.\n\nCommit: https://github.com/bagder/curl/commit/926cb9f\nReported-by: Ray Satiro",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1430465974
  },
  {
    "id": "926cb9ff65b36697e189f8dcd6b75e6eea847123",
    "files": [
      "lib/vtls/schannel.c"
    ],
    "message": "schannel: Fix out of bounds array\n\nBug born in changes made several days ago 9a91e80.\n\nBug: http://curl.haxx.se/mail/lib-2015-04/0199.html\nReported-by: Brian Chrisman",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1430372685
  },
  {
    "id": "6ba2e88a642434bd0ffa95465e4a7d034d03ea10",
    "files": [
      "lib/url.c",
      "tests/libtest/lib1527.c",
      "tests/data/test287",
      "docs/libcurl/opts/CURLOPT_HEADEROPT.3",
      "tests/data/test1527"
    ],
    "message": "CURLOPT_HEADEROPT: default to separate\n\nMake the HTTP headers separated by default for improved security and\nreduced risk for information leakage.\n\nBug: http://curl.haxx.se/docs/adv_20150429.html\nReported-by: Yehezkel Horowitz, Oren Souroujon",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1430247757
  },
  {
    "id": "cae43a10cbb8cce2a6ea449c69a70c59e803408b",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "Curl_ossl_init: load builtin modules\n\nTo have engine modules work, we must tell openssl to load builtin\nmodules first.\n\nBug: https://github.com/bagder/curl/pull/206",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1430061991
  },
  {
    "id": "aff153f83afb4e4f255f13b40e081ecf5753664b",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: fix serial number output\n\nThe code extracting the cert serial number was broken and didn't display\nit properly.\n\nBug: https://github.com/bagder/curl/issues/235\nReported-by: dkjjr89",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1430058979
  },
  {
    "id": "59f3f92ba6150e9a5a57f71b6e781802148916d0",
    "files": [
      "lib/curl_sasl.h",
      "lib/curl_sasl.c",
      "lib/curl_sasl_sspi.c",
      "lib/curl_sspi.h"
    ],
    "message": "sasl_sspi: Populate domain from the realm in the challenge\n\nWithout this, SSPI based digest auth was broken.\n\nBug: https://github.com/bagder/curl/pull/141.patch",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1430057543
  },
  {
    "id": "6a7261359b4c7ebddff0c096468047077e7d06ef",
    "files": [
      "src/tool_getparam.c",
      "src/tool_help.c",
      "docs/curl.1"
    ],
    "message": "tool: New option --data-raw to HTTP POST data, '@' allowed.\n\nAdd new option --data-raw which is almost the same as --data but does\nnot have a special interpretation of the @ character.\n\nPrior to this change there was no (easy) way to pass the @ character as\nthe first character in POST data without it being interpreted as a\nspecial character.\n\nBug: https://github.com/bagder/curl/issues/198\nReported-by: Jens Rantil",
    "committer": {
      "email": "raysatiro@yahoo.com",
      "name": "Jay Satiro"
    },
    "date": 1429987874
  },
  {
    "id": "710a2e99b569d3f7bbc2771badcb1add87bb7e09",
    "files": [
      "tests/data/test1424",
      "src/tool_operate.c",
      "tests/data/Makefile.inc"
    ],
    "message": "curl -z: do not write empty file on unmet condition\n\nThis commit fixes a regression introduced in curl-7_41_0-186-g261a0fe.\nIt also introduces a regression test 1424 based on tests 78 and 1423.\n\nReported-by: Viktor Szakats\nBug: https://github.com/bagder/curl/issues/237",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1429792927
  },
  {
    "id": "79478fdb68ecdb2e36ae634262133670ada44084",
    "files": [
      "src/tool_getparam.c"
    ],
    "message": "tool: fixed a comment typo",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1429740589
  },
  {
    "id": "fd9d3a1ef1f7b1cb5812d04bad07818efc6f3b3a",
    "files": [
      "lib/url.c"
    ],
    "message": "connectionexists: fix build without NTLM\n\nDo not access NTLM-specific struct fields when built without NTLM\nenabled!\n\nbug: http://curl.haxx.se/?i=231\nReported-by: Patrick Rapin",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1429702365
  },
  {
    "id": "b47c17d67c9b5c9e985375b090f0140bf43cb146",
    "files": [
      "tests/runtests.pl",
      "docs/libcurl/opts/CURLOPT_PINNEDPUBLICKEY.3",
      "src/tool_help.c",
      "lib/vtls/nss.c",
      "docs/curl.1"
    ],
    "message": "nss: implement public key pinning for NSS backend\n\nBug: https://bugzilla.redhat.com/1195771",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1429701691
  },
  {
    "id": "79b9d5f1a42578f807a6c94914bc65cbaa304b6d",
    "files": [
      "lib/http.c"
    ],
    "message": "http_done: close Negotiate connections when done\n\nWhen doing HTTP requests Negotiate authenticated, the entire connnection\nmay become authenticated and not just the specific HTTP request which is\notherwise how HTTP works, as Negotiate can basically use NTLM under the\nhood. curl was not adhering to this fact but would assume that such\nrequests would also be authenticated per request.\n\nCVE-2015-3148\n\nBug: http://curl.haxx.se/docs/adv_20150422B.html\nReported-by: Isaac Boukris",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1429651237
  },
  {
    "id": "0583e87ada7a3cfb10904ae4ab61b339582c5bd3",
    "files": [
      "lib/url.c"
    ],
    "message": "fix_hostname: zero length host name caused -1 index offset\n\nIf a URL is given with a zero-length host name, like in \"http://:80\" or\njust \":80\", `fix_hostname()` will index the host name pointer with a -1\noffset (as it blindly assumes a non-zero length) and both read and\nassign that address.\n\nCVE-2015-3144\n\nBug: http://curl.haxx.se/docs/adv_20150422D.html\nReported-by: Hanno B\u00f6ck",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1429651236
  },
  {
    "id": "b5f947b8ac0e282c61c75b69cd5b9d37dafc6959",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie: cookie parser out of boundary memory access\n\nThe internal libcurl function called sanitize_cookie_path() that cleans\nup the path element as given to it from a remote site or when read from\na file, did not properly validate the input. If given a path that\nconsisted of a single double-quote, libcurl would index a newly\nallocated memory area with index -1 and assign a zero to it, thus\ndestroying heap memory it wasn't supposed to.\n\nCVE-2015-3145\n\nBug: http://curl.haxx.se/docs/adv_20150422C.html\nReported-by: Hanno B\u00f6ck",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1429651236
  },
  {
    "id": "31be461c6b659312100c47be6ddd5f0f569290f6",
    "files": [
      "lib/url.c"
    ],
    "message": "ConnectionExists: for NTLM re-use, require credentials to match\n\nCVE-2015-3143\n\nBug: http://curl.haxx.se/docs/adv_20150422A.html\nReported-by: Paras Sethia",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1429651236
  },
  {
    "id": "3a87bdebd13a776cb7870e83621fc155c4417b00",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "vtls/openssl: use https in URLs and a comment typo fixed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1429465957
  },
  {
    "id": "261a0fedcf1545440190965311a1554d7695b6c0",
    "files": [
      "RELEASE-NOTES",
      "src/tool_cb_wrt.h",
      "src/tool_operate.c"
    ],
    "message": "src/tool_operate: create output file on successful download\n\n... of an empty file\n\nBug: https://github.com/bagder/curl/issues/183",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1428478988
  },
  {
    "id": "21e82bd635124881a4a2ac08b3b9b28efe98afee",
    "files": [
      "lib/http2.c",
      "tests/data/test1801"
    ],
    "message": "http2: Fix missing nghttp2_session_send call in Curl_http2_switched\n\nPreviously in Curl_http2_switched, we called nghttp2_session_mem_recv to\nparse incoming data which were already received while curl was handling\nupgrade.  But we didn't call nghttp2_session_send, and it led to make\ncurl not send any response to the received frames.  Most likely, we\nreceived SETTINGS from server at this point, so we missed opportunity to\nsend SETTINGS + ACK.  This commit adds missing nghttp2_session_send call\nin Curl_http2_switched to fix this issue.\n\nBug: https://github.com/bagder/curl/issues/192\nReported-by: Stefan Eissing",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1427980769
  },
  {
    "id": "2685041a5c285968696de639699fb39a0fdf8c69",
    "files": [
      "tests/data/test31",
      "lib/cookie.c"
    ],
    "message": "cookie: handle spaces after the name in Set-Cookie\n\n\"name =value\" is fine and the space should just be skipped.\n\nUpdated test 31 to also test for this.\n\nBug: https://github.com/bagder/curl/issues/195\nReported-by: cromestant\nHelp-by: Frank Gevaerts",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1427923529
  },
  {
    "id": "787c2ae91b1f172ce9fdd2b6613c6217c00a85b3",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: remove_handle: move pending connections\n\nIf the handle removed from the multi handle happens to be the one\n\"owning\" the pipeline other transfers will be waiting indefinitely. Now\nwe move such handles back to connect to have them race (again) for\ngetting the connection and thus avoid hanging.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1465\nReported-by: Jiri Dvorak",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1427665752
  },
  {
    "id": "318ad8d767a982b33c828d08bf9eddb5b32d21df",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: on a request completion, check all CONNECT_PEND transfers\n\n... even if they don't have an associated connection anymore. It could\nleave the waiting transfers pending with no active one on the\nconnection.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1465\nReported-by: Jiri Dvorak",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1427354062
  },
  {
    "id": "abfab1786ed771e2d0ab659c845fd1108f60c71d",
    "files": [
      "lib/http2.c"
    ],
    "message": "HTTP: don't switch to HTTP/2 from 1.1 until we get the 101\n\nWe prematurely changed protocol handler to HTTP/2 which made things very\nslow (and wrong).\n\nReported-by: Stefan Eissing\nBug: https://github.com/bagder/curl/issues/169",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426769058
  },
  {
    "id": "ef1c3b464810756430174d02b424f2d3a0c8388e",
    "files": [
      "lib/http.c"
    ],
    "message": "HTTP: don't use Expect: headers when on HTTP/2\n\nReported-by: Stefan Eissing\nBug: https://github.com/bagder/curl/issues/169",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426601374
  },
  {
    "id": "9e661601feba03d1158ac466a457d5a6ce7f3f11",
    "files": [
      "lib/formdata.c",
      "lib/url.c",
      "lib/share.c"
    ],
    "message": "Bug #149: Deletion of unnecessary checks before a few calls of cURL functions\n\nThe following functions return immediately if a null pointer was passed.\n* Curl_cookie_cleanup\n* curl_formfree\n\nIt is therefore not needed that a function caller repeats a corresponding check.\n\nThis issue was fixed by using the software Coccinelle 1.0.0-rc24.\n\nSigned-off-by: Markus Elfring <elfring@users.sourceforge.net>",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426504436
  },
  {
    "id": "29c655c0a6affc0359e499162e8308663eb4d04f",
    "files": [
      "lib/formdata.c",
      "lib/ftp.c",
      "docs/examples/postinmemory.c",
      "packages/OS400/os400sys.c",
      "lib/http.c",
      "docs/examples/fopen.c",
      "lib/ldap.c",
      "packages/OS400/ccsidcurl.c",
      "lib/cookie.c",
      "lib/x509asn1.c",
      "lib/asyn-ares.c",
      "tests/libtest/lib568.c",
      "lib/url.c",
      "lib/wildcard.c",
      "tests/libtest/lib569.c",
      "lib/curl_addrinfo.c",
      "tests/unit/unit1305.c",
      "lib/nwlib.c",
      "lib/vtls/nss.c",
      "lib/security.c",
      "lib/curl_ntlm_wb.c",
      "tests/server/getpart.c",
      "lib/pingpong.c",
      "tests/server/rtspd.c",
      "lib/http_proxy.c",
      "lib/multi.c",
      "lib/getinfo.c",
      "tests/libtest/lib572.c",
      "lib/escape.c",
      "lib/vtls/vtls.c",
      "tests/libtest/lib539.c",
      "tests/server/tftpd.c",
      "lib/base64.c",
      "tests/server/sws.c",
      "docs/examples/getinmemory.c",
      "tests/libtest/lib570.c",
      "lib/asyn-thread.c",
      "tests/libtest/lib571.c",
      "lib/ftplistparser.c",
      "tests/libtest/lib582.c"
    ],
    "message": "Bug #149: Deletion of unnecessary checks before calls of the function \"free\"\n\nThe function \"free\" is documented in the way that no action shall occur for\na passed null pointer. It is therefore not needed that a function caller\nrepeats a corresponding check.\nhttp://stackoverflow.com/questions/18775608/free-a-null-pointer-anyway-or-check-first\n\nThis issue was fixed by using the software Coccinelle 1.0.0-rc24.\n\nSigned-off-by: Markus Elfring <elfring@users.sourceforge.net>",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426504436
  },
  {
    "id": "059b3a5770075315dbc843b9285a1cdec82c12d5",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: Fix happy eyeballs logic for IPv4-only builds\n\nBug: https://github.com/bagder/curl/pull/168\n\n(trynextip)\n- Don't try the \"other\" protocol family unless IPv6 is available. In an\nIPv4-only build the other family can only be IPv6 which is unavailable.\n\nThis change essentially stops IPv4-only builds from attempting the\n\"happy eyeballs\" secondary parallel connection that is supposed to be\nused by the \"other\" address family.\n\nPrior to this change in IPv4-only builds that secondary parallel\nconnection attempt could be erroneously used by the same family (IPv4)\nwhich caused a bug where every address after the first for a host could\nbe tried twice, often in parallel. This change fixes that bug. An\nexample of the bug is shown below.\n\nAssume MTEST resolves to 3 addresses 127.0.0.2, 127.0.0.3 and 127.0.0.4:\n\n* STATE: INIT => CONNECT handle 0x64f4b0; line 1046 (connection #-5000)\n* Rebuilt URL to: http://MTEST/\n* Added connection 0. The cache now contains 1 members\n* STATE: CONNECT => WAITRESOLVE handle 0x64f4b0; line 1083\n(connection #0)\n*   Trying 127.0.0.2...\n* STATE: WAITRESOLVE => WAITCONNECT handle 0x64f4b0; line 1163\n(connection #0)\n*   Trying 127.0.0.3...\n* connect to 127.0.0.2 port 80 failed: Connection refused\n*   Trying 127.0.0.3...\n* connect to 127.0.0.3 port 80 failed: Connection refused\n*   Trying 127.0.0.4...\n* connect to 127.0.0.3 port 80 failed: Connection refused\n*   Trying 127.0.0.4...\n* connect to 127.0.0.4 port 80 failed: Connection refused\n* connect to 127.0.0.4 port 80 failed: Connection refused\n* Failed to connect to MTEST port 80: Connection refused\n* Closing connection 0\n* The cache now contains 0 members\n* Expire cleared\ncurl: (7) Failed to connect to MTEST port 80: Connection refused\n\nThe bug was born in commit bagder/curl@2d435c7.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426504079
  },
  {
    "id": "9063a7f853a35d2ca9dfe8ac39f4649720081fb3",
    "files": [
      "lib/connect.c"
    ],
    "message": "closesocket: call multi socket cb on close even with custom close\n\nIn function Curl_closesocket() in connect.c the call to\nCurl_multi_closed() was wrongly omitted if a socket close function\n(CURLOPT_CLOSESOCKETFUNCTION) is registered.\n\nThat would lead to not removing the socket from the internal hash table\nand not calling the multi socket callback appropriately.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1493",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426422363
  },
  {
    "id": "0cf649d9cc550af0ef5c9577d38c800be167f373",
    "files": [
      "lib/http2.c",
      "tests/data/test1801"
    ],
    "message": "http2: detect prematures close without data transfered\n\n... by using the regular Curl_http_done() method which checks for\nthat. This makes test 1801 fail consistently with error 56 (which seems\nfine) to that test is also updated here.\n\nReported-by: Ben Darnell\nBug: https://github.com/bagder/curl/issues/166",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426353591
  },
  {
    "id": "a5d994941c2b19a3c63402caa064c9683647de05",
    "files": [
      "tests/data/test88",
      "tests/data/test90",
      "tests/data/test12",
      "tests/data/test1095",
      "tests/data/test155",
      "tests/data/test257",
      "tests/data/test1237",
      "tests/data/test189",
      "tests/data/test547",
      "tests/data/test279",
      "tests/data/test1079",
      "tests/data/test83",
      "tests/data/test64",
      "tests/data/test99",
      "tests/data/test273",
      "tests/data/test2026",
      "tests/data/test1212",
      "tests/data/test275",
      "tests/data/test1134",
      "tests/data/test85",
      "tests/data/test598",
      "tests/data/test1032",
      "tests/data/test91",
      "tests/data/test519",
      "tests/data/test1042",
      "tests/data/test522",
      "tests/data/test1001",
      "tests/data/test164",
      "tests/data/test150",
      "tests/data/test1100",
      "tests/data/test154",
      "tests/data/test176",
      "tests/data/test1204",
      "tests/data/test239",
      "tests/data/test68",
      "tests/data/test1121",
      "tests/data/test590",
      "tests/data/test159",
      "tests/data/test169",
      "tests/data/test70",
      "tests/data/test301",
      "tests/data/test82",
      "tests/data/test1229",
      "tests/data/test61",
      "tests/data/test81",
      "tests/data/test278",
      "tests/data/test1088",
      "tests/data/test63",
      "tests/data/test1418",
      "tests/data/test17",
      "tests/data/test565",
      "tests/data/test67",
      "tests/data/test245",
      "tests/data/test523",
      "tests/data/test1087",
      "tests/data/test2023",
      "tests/data/test540",
      "tests/data/test1428",
      "tests/data/test1075",
      "lib/http.c",
      "tests/data/test208",
      "tests/data/test2029",
      "tests/data/test1310",
      "tests/data/test84",
      "tests/data/test234",
      "tests/data/test69",
      "tests/data/test185",
      "tests/data/test184",
      "tests/data/test548",
      "tests/data/test1043",
      "tests/data/test73",
      "tests/data/test167",
      "tests/data/test2027",
      "tests/data/test65",
      "tests/data/test16",
      "tests/data/test256",
      "tests/data/test89",
      "tests/data/test555",
      "tests/data/test259",
      "tests/data/test1434",
      "tests/data/test2028",
      "tests/data/test242",
      "tests/data/test1041",
      "tests/data/test162",
      "tests/data/test2024",
      "tests/data/test1058",
      "tests/data/test188",
      "tests/data/test299",
      "tests/data/test33",
      "tests/data/test1071",
      "tests/data/test168",
      "tests/data/test1040",
      "tests/data/test170",
      "tests/data/test1117",
      "tests/data/test552",
      "tests/data/test1331",
      "tests/data/test267",
      "tests/data/test92",
      "tests/data/test62",
      "tests/data/test38",
      "tests/data/test1412",
      "tests/data/test3",
      "tests/data/test264",
      "tests/data/test2025",
      "tests/data/test153",
      "tests/data/test551",
      "tests/data/test194",
      "tests/data/test2",
      "tests/data/test56",
      "tests/data/test80",
      "tests/data/test1101",
      "tests/data/test72",
      "tests/data/test246",
      "tests/data/test258",
      "tests/data/test1002",
      "tests/data/test503",
      "tests/data/test1401",
      "tests/data/test243",
      "tests/data/test1030",
      "tests/data/test233",
      "tests/data/test1215"
    ],
    "message": "http: always send Host: header as first header\n\n...after the method line:\n\n \"Since the Host field-value is critical information for handling a\n request, a user agent SHOULD generate Host as the first header field\n following the request-line.\" / RFC 7230 section 5.4\n\nAdditionally, this will also make libcurl ignore multiple specified\ncustom Host: headers and only use the first one. Test 1121 has been\nupdated accordingly\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1491\nReported-by: Rainer Canavan",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426158924
  },
  {
    "id": "852d35b6eadb0bc6117a31cc991f589285a3fc0a",
    "files": [
      "lib/url.c",
      "lib/conncache.h",
      "tests/data/Makefile.inc",
      "lib/conncache.c",
      "tests/data/test1421"
    ],
    "message": "proxy: re-use proxy connections (regression)\n\nWhen checking for a connection to re-use, a proxy-using request must\ncheck for and use a proxy connection and not one based on the host\nname!\n\nAdded test 1421 to verify\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1492",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1426071262
  },
  {
    "id": "c19349951df1fde96c31d68e054e3a36a3b03860",
    "files": [
      "lib/multihandle.h",
      "lib/multi.c",
      "lib/http_proxy.c"
    ],
    "message": "multi: fix *getsock() with CONNECT\n\nThe code used some happy eyeballs logic even _after_ CONNECT has been\nsent to a proxy, while the happy eyeball phase is already (should be)\nover by then.\n\nThis is solved by splitting the multi state into two separate states\nintroducing the new SENDPROTOCONNECT state.\n\nBug: http://curl.haxx.se/mail/lib-2015-01/0170.html\nReported-by: Peter Laser",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1425752362
  },
  {
    "id": "3ac3331e140ba8833905bb9cdcd1e2a07fa36a0d",
    "files": [
      "src/tool_metalink.c"
    ],
    "message": "metalink: add some error checks\n\nmalloc() and strdup() calls without checking return codes.\n\nReported-by: Markus Elfring\nBug: https://github.com/bagder/curl/issues/150",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1425680065
  },
  {
    "id": "492dfca65d0147f2920b38d724186fdf39b2541b",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: fix memory-leak on timeout (regression)\n\nSince 1342a96ecfe0d44, a timeout detected in the multi state machine didn't\nnecesarily clear everything up, like formpost data.\n\nBug: https://github.com/bagder/curl/issues/147\nReported-by: Michel Promonet\nPatched-by: Michel Promonet",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1425566618
  },
  {
    "id": "43eb8b28748b71931299ab31d0baa909dbab44a0",
    "files": [
      "tests/libtest/lib568.c",
      "tests/libtest/lib586.c",
      "tests/libtest/testtrace.c",
      "tests/libtest/lib570.c",
      "tests/libtest/lib506.c",
      "tests/libtest/test.h",
      "tests/libtest/lib571.c",
      "tests/libtest/lib572.c",
      "tests/libtest/lib1515.c",
      "tests/libtest/lib557.c",
      "tests/libtest/lib569.c"
    ],
    "message": "libtest: fixed linker errors on msvc\n\nBug: https://github.com/bagder/curl/pull/144",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1425389591
  },
  {
    "id": "bc3a44aebc22f5427e8408894982af6c1e8d7b1b",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: return recv error on unexpected EOF\n\nPointed-out-by: Tatsuhiro Tsujikawa\nBug: http://curl.haxx.se/bug/view.cgi?id=1487",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1424868681
  },
  {
    "id": "e08a12dab1a410c94bf75aef04251bf64c127eb6",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c"
    ],
    "message": "connect: wait for IPv4 connection attempts\n\n... even if the last IPv6 connection attempt has failed.\n\nBug: https://bugzilla.redhat.com/show_bug.cgi?id=1187531#c4",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1424694748
  },
  {
    "id": "92835ca5d87850ae0c670d66bd73af391b34cdc3",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: avoid skipping an IPv4 address\n\n... in case the protocol versions are mixed in a DNS response\n(IPv6 -> IPv4 -> IPv6).\n\nBug: https://bugzilla.redhat.com/show_bug.cgi?id=1187531#c3",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1424694661
  },
  {
    "id": "90314100e0880144b2d8b7f7d02c51df9d6beece",
    "files": [
      "lib/url.c",
      "acinclude.m4"
    ],
    "message": "configure: allow both --with-ca-bundle and --with-ca-path\n\nSSL_CTX_load_verify_locations by default (and if given non-Null\nparameters) searches the CAfile first and falls back to CApath.  This\nallows for CAfile to be a basis (e.g. installed by the package manager)\nand CApath to be a user configured directory.\n\nThis wasn't reflected by the previous configure constraint which this\npatch fixes.\n\nBug: https://github.com/bagder/curl/pull/139",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1424446204
  },
  {
    "id": "63b4b8c7bdb66e492daa89e8c20a5018082ddd29",
    "files": [
      "lib/vtls/nss.c"
    ],
    "message": "nss: fix NPN/ALPN protocol negotiation\n\nCorrectly check for memcmp() return value (it returns 0 if the strings match).\n\nThis is not really important, since curl is going to use http/1.1 anyway, but\nit's still a bug I guess.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1424383752
  },
  {
    "id": "7eebf9a3fb7058ca95038450184ec44609a0daa7",
    "files": [
      "lib/http2.c"
    ],
    "message": "http2: Fix bug that associated stream canceled on PUSH_PROMISE\n\nPreviously we don't ignore PUSH_PROMISE header fields in on_header\ncallback.  It makes header values mixed with following HEADERS,\nresulting protocol error.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1423493576
  },
  {
    "id": "45b9b62de462210d714da87b03c347a47fe6bc56",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: SSL_SESSION->ssl_version no longer exist\n\nThe struct went private in 1.0.2 so we cannot read the version number\nfrom there anymore. Use SSL_version() instead!\n\nReported-by: Gisle Vanem\nBug: http://curl.haxx.se/mail/lib-2015-02/0034.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1423133853
  },
  {
    "id": "859a82a85cc0a1ea6dff496b3542beda0b06f933",
    "files": [
      "src/tool_getpass.c"
    ],
    "message": "getpass_r: read from stdin, not stdout!\n\nThe file number used was wrong. This bug was introduced over 10 years\nago, proving this function isn't used much...\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1476\nReported-by: Tamir",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1422919845
  },
  {
    "id": "e1bb13c09f8d4cb8d1499fc9f51734729cdcdf2c",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: Fixed Curl_ossl_cert_status_request() not returning FALSE\n\nModified the Curl_ossl_cert_status_request() function to return FALSE\nwhen built with BoringSSL or when OpenSSL is missing the necessary TLS\nextensions.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1422363221
  },
  {
    "id": "d1cf5d570663dac157740cb5e49d24614f185da7",
    "files": [
      "docs/libcurl/opts/CURLOPT_SSL_VERIFYSTATUS.3",
      "lib/vtls/openssl.c",
      "lib/vtls/openssl.h"
    ],
    "message": "openssl: add support for the Certificate Status Request TLS extension\n\nAlso known as \"status_request\" or OCSP stapling, defined in RFC6066\nsection 8.\n\nThanks-to: Joe Mason\n- for the work-around for the OpenSSL bug.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1421965523
  },
  {
    "id": "be57f689b0e9e2573e53df43140e8f3f7575571c",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: do public key pinning check independently\n\n... of the other cert verification checks so that you can set verifyhost\nand verifypeer to FALSE and still check the public key.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1471\nReported-by: Kyle J. McKay",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1421706013
  },
  {
    "id": "1cbc8fd3d1a95b90a1585d57d7af37c73cda2fc1",
    "files": [
      "lib/http_negotiate.c"
    ],
    "message": "http_negotiate: Use dynamic buffer for SPN generation\n\nUse a dynamicly allocated buffer for the temporary SPN variable similar\nto how the SASL GSS-API code does, rather than using a fixed buffer of\n2048 characters.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1421595912
  },
  {
    "id": "b9fd757d03c990cbd859ec93bfd943ef3503176a",
    "files": [
      "lib/curl_sasl_gssapi.c"
    ],
    "message": "sasl_gssapi: Fixed memory leak with local SPN variable",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1421595607
  },
  {
    "id": "a2f8887b7914ebb8d17dea1a5a97520e2fd2330a",
    "files": [
      "lib/curl_endian.c"
    ],
    "message": "curl_endian: Fixed build when 64-bit integers are not supported (Part 2)\n\nMissed Curl_read64_be() in commit bb12d44471 :(",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1421449287
  },
  {
    "id": "f13669a375f5bfd14797bda91642cabe076974fa",
    "files": [
      "lib/vtls/gtls.c",
      "lib/vtls/gtls.h"
    ],
    "message": "gtls: add support for the Certificate Status Request TLS extension\n\nAlso known as \"status_request\" or OCSP stapling, defined in RFC6066 section 8.\n\nThis requires GnuTLS 3.1.3 or higher to build, however it's recommended to use\nat least GnuTLS 3.3.11 since previous versions had a bug that caused the OCSP\nresponse verfication to fail even on valid responses.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1421447009
  },
  {
    "id": "bb12d44471346ccc458a9edebba3c2238c113955",
    "files": [
      "lib/curl_endian.c"
    ],
    "message": "curl_endian: Fixed build when 64-bit integers are not supported\n\nBug: http://curl.haxx.se/mail/lib-2015-01/0094.html\nReported-by: John E. Malmberg",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1421411484
  },
  {
    "id": "cc28bc472ec421cec2ba26d653e53892998a248d",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Curl_pretransfer: reset expected transfer sizes\n\nReported-by: Mohammad AlSaleh\nBug: http://curl.haxx.se/mail/lib-2015-01/0065.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1421274717
  },
  {
    "id": "9a452ba3a16bb51249e1d1be5a5b6e47a255c064",
    "files": [
      "lib/ftp.h",
      "lib/ftp.c"
    ],
    "message": "FTP: fix IPv6 host using link-local address\n\n... and make sure we can connect the data connection to a host name that\nis longer than 48 bytes.\n\nAlso simplifies the code somewhat by re-using the original host name\nmore, as it is likely still in the DNS cache.\n\nOriginal-Patch-by: Vojt\u011bch Kr\u00e1l\nBug: http://curl.haxx.se/bug/view.cgi?id=1468",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1420752757
  },
  {
    "id": "5c0e66d63214e0306197c5a3f162441e074f3401",
    "files": [
      "lib/curl_sasl_gssapi.c"
    ],
    "message": "sasl_gssapi: Fixed build on NetBSD with built-in GSS-API\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1469\nReported-by: Thomas Klausner",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420745818
  },
  {
    "id": "4ce22c607be9066b321f3eb3c524a6fff251a1e2",
    "files": [
      "lib/vtls/curl_darwinssl.c"
    ],
    "message": "darwinssl: fix session ID keys to only reuse identical sessions\n\n...to avoid a session ID getting cached without certificate checking and\nthen after a subsequent _enabling_ of the check libcurl could still\nre-use the session done without cert checks.\n\nBug: http://curl.haxx.se/docs/adv_20150108A.html\nReported-by: Marc Hesse",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1420667756
  },
  {
    "id": "3df8e78860d3a3d3cf95252bd2b4ad5fd53360cd",
    "files": [
      "tests/data/test1529",
      "tests/libtest/lib1529.c",
      "tests/data/Makefile.inc",
      "tests/libtest/Makefile.inc"
    ],
    "message": "tests: make sure CRLFs can't be used in URLs passed to proxy\n\nBug: http://curl.haxx.se/docs/adv_20150108B.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1420667756
  },
  {
    "id": "178bd7db34f77e020fb8562890c5625ccbd67093",
    "files": [
      "lib/url.c"
    ],
    "message": "url-parsing: reject CRLFs within URLs\n\nBug: http://curl.haxx.se/docs/adv_20150108B.html\nReported-by: Andrey Labunets",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1420667756
  },
  {
    "id": "4626f31d0ed38fa9afbe50dbd85e8e5f81a1c169",
    "files": [
      "lib/imap.c",
      "lib/ldap.c"
    ],
    "message": "ldap/imap: Fixed spelling mistake in comments and variable names\n\nReported-by: Michael Osipov",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420638656
  },
  {
    "id": "ea93252ef1cb3dba44312ceec824d6436c54aa08",
    "files": [
      "lib/curl_multibyte.h",
      "lib/ldap.c",
      "lib/curl_multibyte.c"
    ],
    "message": "ldap: Fixed Unicode usage for all Win32 builds\n\nOtherwise, the fixes in the previous commits would only be applicable\nto IDN and SSPI based builds and not others such as OpenSSL with LDAP\nenabled.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420409970
  },
  {
    "id": "f6b168de4cb28337e63d68aaea255416d10f46b0",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed memory leak from commit efb64fdf80",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420403638
  },
  {
    "id": "c37dcf0edbc3d111b89de1d43b72a4bba7a37559",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed attribute variable warnings when Unicode is enabled\n\nUse 'TCHAR *' for local attribute variable rather than 'char *'.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420388717
  },
  {
    "id": "5359936d07fee01ba832d251891c659f8c9bf7ca",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed DN variable warnings when Unicode is enabled\n\nUse 'TCHAR *' for local DN variable rather than 'char *'.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420388473
  },
  {
    "id": "84143dc57d8532b65dcac3aa0e144e0bf81843d2",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed support for Unicode filter in Win32 search call",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420384582
  },
  {
    "id": "3a805c5cc1d3f78dcb42be05837529dec25e2e44",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed support for Unicode attributes in Win32 search call",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420381671
  },
  {
    "id": "724152795672089837ddda2ebde15d1113da6b1b",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed memory leak from commit efb64fdf80\n\nThe unescapped DN was not freed after a successful character conversion.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420381289
  },
  {
    "id": "efb64fdf80b2246f4a1d67d220c9c16bca658e5b",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed support for Unicode DN in Win32 search call",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420373426
  },
  {
    "id": "6416dc998b0054f6c9e76aeb167a029a1c7d3595",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed Unicode user and password in Win32 bind calls",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420336629
  },
  {
    "id": "0f26148423d19874f56f8a814edea6c9bee3e8aa",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed Unicode host name in Win32 initialisation calls",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420336568
  },
  {
    "id": "4967109ffc7380278099d48c3bf78a2468978d98",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed attribute memory leaks on failed client write\n\nFixed memory leaks from commit 086ad79970 as was noted in the commit\ncomments.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420310790
  },
  {
    "id": "a68aa81320aca4d376fe2a43ee8c76a6eb6b8f01",
    "files": [
      "lib/ldap.c"
    ],
    "message": "ldap: Fixed DN memory leaks on failed client write\n\nFixed memory leaks from commit 086ad79970 as was noted in the commit\ncomments.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420310788
  },
  {
    "id": "a75ede4b9b525bcb9c523de8d9bd0abeb1302bc8",
    "files": [
      "lib/curl_endian.c"
    ],
    "message": "endian: Fixed bit-shift in 64-bit integer read functions\n\nFrom commit 43792592ca and 4bb5a351b2.\n\nReported-by: Michael Osipov",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420214022
  },
  {
    "id": "ee0941a0b79d6ee96fd8db24af96118925fda18f",
    "files": [
      "tests/libtest/lib1900.c"
    ],
    "message": "lib1900.c: Fixed cppcheck error\n\nlib1900.c:182: (style) Array index 'handlenum' is used before limits\n               check\n\nBug: https://github.com/bagder/curl/pull/133",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420029936
  },
  {
    "id": "8a3c0fbed1dc0a09f1d53579a0112b546cd3d76d",
    "files": [
      "docs/examples/sepheaders.c"
    ],
    "message": "sepheaders.c: Fixed resource leak on failure",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1420024462
  },
  {
    "id": "6e7904f9aa25491faa9f433287680851965af27e",
    "files": [
      "lib/curl_sasl_gssapi.c"
    ],
    "message": "sasl_gssapi: Fixed use of dummy username with real username",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1419794910
  },
  {
    "id": "0d037cfdce7d295052cf4c91eda6d7fda7a692a8",
    "files": [
      "tests/libtest/lib1520.c",
      "tests/data/test1520"
    ],
    "message": "test1520: Fixed initial teething problems\n\n* Missing initialisation of upload status caused a seg fault\n* Missing data termination caused corrupt data to be uploaded\n* Data verification should be performed in <upload> element\n* Added missing recipient list cleanup",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1419771855
  },
  {
    "id": "29726951b084efaec7eb7a89d6ec9f2284840c4d",
    "files": [
      "tests/libtest/lib1520.c",
      "tests/libtest/Makefile.inc",
      "tests/data/Makefile.inc",
      "tests/data/test1520"
    ],
    "message": "tests: Added test for bug #1456",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1419769052
  },
  {
    "id": "14c3601583bfe171a33971115220378d5076e3b8",
    "files": [
      "lib/url.c"
    ],
    "message": "parseurlandfillconn(): fix improper non-numeric scope_id stripping.\nFixes SF bug 1149: http://sourceforge.net/p/curl/bugs/1449/",
    "committer": {
      "email": "pm@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1418827927
  },
  {
    "id": "9081014c2c467077723d5ae1d0081003b3eb3504",
    "files": [
      "lib/urldata.h",
      "lib/ftp.c",
      "lib/if2ip.h",
      "lib/url.c",
      "lib/if2ip.c",
      "lib/connect.c",
      "lib/pop3.c",
      "lib/imap.c",
      "lib/smtp.c"
    ],
    "message": "IPV6: address scope != scope id\nThere was a confusion between these: this commit tries to disambiguate them.\n- Scope can be computed from the address itself.\n- Scope id is scope dependent: it is currently defined as 1-based local\n  interface index for link-local scoped addresses, and as a site index(?) for\n  (obsolete) site-local addresses. Linux only supports it for link-local\n  addresses.\nThe URL parser properly parses a scope id as an interface index, but stores it\nin a field named \"scope\": confusion. The field has been renamed into \"scope_id\".\nCurl_if2ip() used the scope id as it was a scope. This caused failures\nto bind to an interface.\nScope is now computed from the addresses and Curl_if2ip() matches them.\nIf redundantly specified in the URL, scope id is check for mismatch with\nthe interface index.\n\nThis commit should fix SF bug #1451.",
    "committer": {
      "email": "pm@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1418734326
  },
  {
    "id": "1befebc950d7e4fb1ae6ae4e9b6b284ff4a04f89",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP: work-around servers that return zero size on STAT\n\nBug: http://curl.haxx.se/mail/lib-2014-12/0103.html\nPathed-by: Marc Renault",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1418719757
  },
  {
    "id": "8676ce68e3a06d698802cf070da97592bfb1f13b",
    "files": [
      "lib/strtoofft.h",
      "lib/idn_win32.c"
    ],
    "message": "lib: Fixed multiple code analysis warnings if SAL are available\n\nwarning C28252: Inconsistent annotation for function:\nparameter has another annotation on this instance",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1418591783
  },
  {
    "id": "91669584cf2e0d1b334c3c9b13fb2834bc0291ca",
    "files": [
      "lib/smb.c"
    ],
    "message": "smb.c: Fixed code analysis warning\n\nsmb.c:320: warning C6297: Arithmetic overflow: 32-bit value is shifted,\n           then cast to 64-bit value. Result may not be an expected\n           value",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418590869
  },
  {
    "id": "b13923f0f7ad697792de96adbf51867122f3ee4f",
    "files": [
      "lib/vtls/curl_darwinssl.c"
    ],
    "message": "darwinssl: aprintf() to allocate the session key\n\n... to avoid using a fixed memory size that risks being too large or too\nsmall.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1418574842
  },
  {
    "id": "212e3e26bc711c4bd2e0a1c2bbc14b4e40506917",
    "files": [
      "lib/vtls/curl_schannel.c",
      "lib/vtls/curl_schannel.h"
    ],
    "message": "curl_schannel: Improvements to memory re-allocation strategy\n\n- do not grow memory by doubling its size\n- do not leak previously allocated memory if reallocation fails\n- replace while-loop with a single check to make sure\n  that the requested amount of data fits into the buffer\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1450\nReported-by: Warren Menzer",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1418574451
  },
  {
    "id": "35fae251dd2407db61e6a980bd4e55b0a169a42a",
    "files": [
      "lib/smb.c"
    ],
    "message": "smb: Fixed unnecessary initialisation of struct member variables\n\nThere is no need to set the 'state' and 'result' member variables to\nSMB_REQUESTING (0) and CURLE_OK (0) after the allocation via calloc()\nas calloc() initialises the contents to zero.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418560077
  },
  {
    "id": "52a4d6b8aee78f748924ed9f5217e4287df4593f",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Fixed return code for bad type-2 Target Info\n\nUse CURLE_BAD_CONTENT_ENCODING for bad type-2 Target Info security\nbuffers just like we do for bad decodes.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418559064
  },
  {
    "id": "bd7d7f4523f12a52f66b6a6645af5e2a4bd4cb7e",
    "files": [
      "lib/smb.c"
    ],
    "message": "smb.c: Fixed line longer than 79 columns",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418476205
  },
  {
    "id": "e98b7b1cb33f064767258f628959e1ca783b7934",
    "files": [
      "docs/examples/synctime.c"
    ],
    "message": "synctime.c: fixed timeserver URLs.\n\nFor getting the date header its not necessary to access special\npages or even CGI scripts - all pages including the main index\nreply with the date header, therefore shortened URLs to domain.\nRemoved worldtime.com; added pool.ntp.org.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1418474317
  },
  {
    "id": "10be4ec2c3f39f377ce3a97e05e5ea0d92f24d44",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed line longer than 79 columns",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418419391
  },
  {
    "id": "8a4ce7d0f5322f22d9b45539b06750dc5c9641b2",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed inappropriate free of the scratch buffer\n\nIf the scratch buffer was allocated in a previous call to\nCurl_smtp_escape_eob(), a new buffer not allocated in the subsequent\ncall and no action taken by that call, then an attempt would be made to\ntry and free the buffer which, by now, would be part of the data->state\nstructure.\n\nThis bug was introduced in commit 4bd860a001.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418411710
  },
  {
    "id": "f0ecdd04d3cd3c8814a296c3a9d2211086b7abd8",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed dot stuffing when EOL characters were at end of input buffers\n\nFixed a problem with the CRLF. detection when multiple buffers were\nused to upload an email to libcurl and the line ending character(s)\nappeared at the end of each buffer. This meant any lines which started\nwith . would not be escaped into .. and could be interpreted as the end\nof transmission string instead.\n\nThis only affected libcurl based applications that used a read function\nand wasn't reproducible with the curl command-line tool.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1456\nAssisted-by: Patrick Monnerat",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1418411708
  },
  {
    "id": "f4b5f8cdf0cd68be427c7093fde72f07012c36ca",
    "files": [
      "lib/curl_ntlm_wb.c"
    ],
    "message": "ntlm_wb_response: fix \"statement not reached\"\n\n... and I could use a break instead of a goto to end the loop.\n\nBug: http://curl.haxx.se/mail/lib-2014-12/0089.html\nReported-by: Tor Arntsen",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1418247919
  },
  {
    "id": "f768be0a2525dba234bfd002afe9595ba3b84958",
    "files": [
      "tests/server/sws.c"
    ],
    "message": "sws.c: Fixed 'rc' may be used uninitialized warning",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1418166370
  },
  {
    "id": "c3b85c12a9261867deba27840d044ba91c7ac2ba",
    "files": [
      "docs/examples/synctime.c"
    ],
    "message": "synctime.c: fixed user-agent setting.\n\nSome websites meanwhile refuse to reply to requests from ancient\nbrowsers like IE6, therefore I've comment out this setting, but\nalso fixed the string to now fake IE8 if someone enables it.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1418145520
  },
  {
    "id": "145c263a4ba649a2f1811ab8d0b86c98de26ad16",
    "files": [
      "lib/vtls/curl_schannel.c"
    ],
    "message": "schannel_recv: return the correct code\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1462\nReported-by: Tae Hyoung Ahn",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1418121971
  },
  {
    "id": "2adf294602a0660cb3d59ac710919bca63fdc33b",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie.c: Refactored cleanup code to simplify\n\nAlso, fixed the outdated comments on the cookie API.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1417951372
  },
  {
    "id": "befe9a10b976bba109d4dbde6dc1deb2cd0a79bc",
    "files": [
      "lib/smb.c"
    ],
    "message": "smb: Fixed a problem with large file transfers\n\nFixed an issue with the message size calculation where the raw bytes\nfrom the buffer were interpreted as signed values rather than unsigned\nvalues.\n\nReported-by: Gisle Vanem\nAssisted-by: Bill Nagel",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417902240
  },
  {
    "id": "864f17d894d0e4d2d790613d42ca5c89aad5bb05",
    "files": [
      "lib/smb.c"
    ],
    "message": "smb: Fixed URL encoded URLs not working",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417899419
  },
  {
    "id": "0b311834eb691aa06eabf82151f699846beefd45",
    "files": [
      "lib/curl_sasl_gssapi.c"
    ],
    "message": "sasl_gssapi: Fixed missing include from commit d3cca934ee",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417732369
  },
  {
    "id": "750203bde46cc6a137c83b668e21d8495c94995a",
    "files": [
      "lib/socks_gssapi.c",
      "lib/http_negotiate.c",
      "lib/curl_gssapi.h",
      "lib/curl_sasl_gssapi.c",
      "lib/krb5.c",
      "lib/curl_gssapi.c"
    ],
    "message": "sasl_gssapi: Fixed honouring of no mutual authentication",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417730714
  },
  {
    "id": "1b3a398ec1844560e60e2dad63d96d061361b57d",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "include/curl/curl.h",
      "CHANGES.0"
    ],
    "message": "docs: Fix FAILONERROR typos\n\nIt returns error for >= 400 HTTP responses.\n\nBug: https://github.com/bagder/curl/pull/129",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1417724099
  },
  {
    "id": "785d76d681fecffd8941159daeef6fda0877a208",
    "files": [
      "lib/transfer.c"
    ],
    "message": "transfer: Fixed existing scratch buffer being checked for NULL twice\n\nIf the scratch buffer already existed when the CRLF conversion was\nperformed then the buffer pointer would be checked twice for NULL. This\nsecond check is only necessary if the call to malloc() was performed by\nthe first check.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417359973
  },
  {
    "id": "9afd97022eb3ff586b13d33a7d85ce502d06e93c",
    "files": [
      "lib/transfer.c"
    ],
    "message": "smtp: Fixed dot stuffing being performed when no new data read\n\nWhilst I had moved the dot stuffing code from being performed before\nCRLF conversion takes place to after it, in commit 4bd860a001, I had\nmoved it outside the 'when something read' block of code when meant\nit could perform the dot stuffing twice on partial send if nread\nhappened to contain the right values. It also meant the function could\npotentially read past the end of buffer. This was highlighted by the\nfollowing warning:\n\nwarning: `nread' might be used uninitialized in this function",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417357475
  },
  {
    "id": "854049f962b7e8826e5ac495783c4ec62e9c19aa",
    "files": [
      "lib/smtp.h",
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed const'ness of nread parameter in Curl_smtp_escape_eob()\n\n...and some comment typos!",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417044717
  },
  {
    "id": "4bd860a001921e1e007ae448cfdd2c983018c057",
    "files": [
      "lib/smtp.c",
      "lib/transfer.c"
    ],
    "message": "smtp: Added support for the conversion of Unix newlines during mail send\n\nAdded support for the automatic conversion of Unix newlines to CRLF\nduring mail uploads.\n\nFeature: http://curl.haxx.se/bug/view.cgi?id=1456",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1417044714
  },
  {
    "id": "8ed2420dbb302f92ba9058684b2d4af3793715c9",
    "files": [
      "lib/curl_ntlm.c"
    ],
    "message": "http_ntlm: Fixed additional NSS initialisation call when decoding type-2\n\nAfter commit 48d19acb7c the HTTP code would call Curl_nss_force_init()\ntwice when decoding a NTLM type-2 message, once directly and the other\nthrough the call to Curl_sasl_decode_ntlm_type2_message().",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1416758708
  },
  {
    "id": "409265a571e3b0202db0db9511d9c11463dbc66d",
    "files": [
      "lib/curl_ntlm_msgs.h",
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Fixed static'ness of local decode function",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1416739134
  },
  {
    "id": "34cb17b9301854b12a79b4025f1e0a97d2896105",
    "files": [
      "lib/conncache.c"
    ],
    "message": "conncache: Fixed specifiers in infof() for long and size_t variables",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1416427461
  },
  {
    "id": "a607f8a20c6c5ac869598753097e3da06165cbd9",
    "files": [
      "docs/examples/multi-debugcallback.c",
      "docs/examples/multi-app.c",
      "docs/examples/multi-double.c",
      "docs/examples/fopen.c",
      "docs/examples/pop3-multi.c",
      "docs/examples/imap-multi.c",
      "docs/examples/smtp-multi.c",
      "docs/examples/multi-post.c",
      "docs/examples/multi-single.c"
    ],
    "message": "examples: Don't call select() to sleep on windows\n\nWindows does not support using select() for sleeping without a dummy\nsocket. Instead use Windows' Sleep() and sleep for 100ms which is the\nminimum suggested value in the curl_multi_fdset() doc.\n\nPrior to this change the multi examples would exit prematurely since\nselect() would error instead of sleeping when called without an fd.\n\nReported-by: Johan Lantz\nBug: http://curl.haxx.se/mail/lib-2014-11/0221.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1416083240
  },
  {
    "id": "18e1a3022deebfa91ef022f09de3396d595f50b2",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SSH: use the port number as well for known_known checks\n\n... if the libssh2 version is new enough.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1448",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1415544207
  },
  {
    "id": "dcad09e1254776a89ec412e9b04131733b434527",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "http_digest: Fixed some memory leaks introduced in commit 6f8d8131b1\n\nFixed a couple of memory leaks as a result of moving code that used to\npopulate allocuserpwd and relied on it's clean up.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1415319080
  },
  {
    "id": "cfe4252744803d6fc2f7dcea7d168d2b9cceac14",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "http_digest: Fixed auth retry loop when SSPI based authentication fails",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1415287647
  },
  {
    "id": "783c7f97ba4d499e26c96e9726d2af912f612bec",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "http_digest: Fixed memory leaks from commit 6f8d8131b1",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1415223910
  },
  {
    "id": "259f4f3d01f42ef4744318daa9e0c1fbbf8123b5",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: Fixed HTTP digest challenges with spaces between auth parameters\n\nBroken as part of the rework, in commit 7e6d51a73c, to assist with the\naddition of HTTP digest via Windows SSPI.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1415210287
  },
  {
    "id": "3cfe3bc0010a8089c689b8c01a4abe39ba839191",
    "files": [
      "lib/ssh.c"
    ],
    "message": "ssh: Fixed build on platforms where R_OK is not defined\n\nBug: http://curl.haxx.se/mail/lib-2014-11/0035.html\nReported-by: Jan Ehrhardt",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1415192948
  },
  {
    "id": "b3875606925536f82fc61f3114ac42f29eaf6945",
    "files": [
      "lib/formdata.c",
      "src/tool_strdup.c",
      "lib/strdup.h",
      "src/tool_setup.h",
      "lib/url.c",
      "lib/strdup.c",
      "lib/urldata.h",
      "src/tool_strdup.h",
      "src/Makefile.inc"
    ],
    "message": "curl_easy_duphandle: CURLOPT_COPYPOSTFIELDS read out of bounds\n\nWhen duplicating a handle, the data to post was duplicated using\nstrdup() when it could be binary and contain zeroes and it was not even\nzero terminated! This caused read out of bounds crashes/segfaults.\n\nSince the lib/strdup.c file no longer is easily shared with the curl\ntool with this change, it now uses its own version instead.\n\nBug: http://curl.haxx.se/docs/adv_20141105.html\nCVE: CVE-2014-3707\nReported-By: Symeon Paraschoudis",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1415171114
  },
  {
    "id": "b6821dbb91a7433d7451c1ad4cbd49cc4b8a71a9",
    "files": [
      "lib/curl_sasl.c",
      "lib/curl_sasl.h",
      "lib/curl_setup.h",
      "lib/urldata.h",
      "lib/pop3.c",
      "lib/imap.c",
      "lib/smtp.c",
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl: Fixed Kerberos V5 inclusion when CURL_DISABLE_CRYPTO_AUTH is used\n\nTypically the USE_WINDOWS_SSPI definition would not be used when the\nCURL_DISABLE_CRYPTO_AUTH define is, however, it is still a valid build\nconfiguration and, as such, the SASL Kerberos V5 (GSSAPI) authentication\ndata structures and functions would incorrectly be used when they\nshouldn't be.\n\nIntroduced a new USE_KRB5 definition that takes into account the use of\nCURL_DISABLE_CRYPTO_AUTH like USE_SPNEGO and USE_NTLM do.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1414888516
  },
  {
    "id": "9bc2582c31d10b49f9070a99848e96951f6b66c5",
    "files": [
      "tests/data/test1434",
      "tests/data/test1042",
      "tests/data/Makefile.inc",
      "lib/transfer.c"
    ],
    "message": "resume: consider a resume from [content-length] to be OK\n\nBasically since servers often then don't respond well to this and\ninstead send the full contents and then libcurl would instead error out\nwith the assumption that the server doesn't support resume. As the data\nis then already transfered, this is now considered fine.\n\nTest case 1434 added to verify this. Test case 1042 slightly modified.\n\nReported-by: hugo\nBug: http://curl.haxx.se/bug/view.cgi?id=1443",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1414879764
  },
  {
    "id": "f7e24683c47381ce32bfa5a3a01ff737483373c9",
    "files": [
      "lib/curl_sasl_sspi.c",
      "docs/curl.1"
    ],
    "message": "sasl_sspi: Allow DIGEST-MD5 to use current windows credentials\n\nFixed the ability to use the current log-in credentials with DIGEST-MD5.\nI had previously disabled this functionality in commit 607883f13c as I\ncouldn't get this to work under Windows 8, however, from testing HTTP\nDigest authentication through Windows SSPI and then further testing of\nthis code I have found it works in Windows 7.\n\nSome further investigation is required to see what the differences are\nbetween Windows 7 and 8, but for now enable this functionality as the\ncode will return an error when AcquireCredentialsHandle() fails.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1414592678
  },
  {
    "id": "357a15a6492ac0496abe952fae70aef7da017158",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "Fixed error message since we require ALPN support.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1414543038
  },
  {
    "id": "2e121fda355ecc94e155d27adbd21525aa60fdba",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed typo in comment",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1414540666
  },
  {
    "id": "95765567d0e9dd01a827e8defd423f27d1d03e95",
    "files": [
      "tests/data/test1429",
      "tests/data/test1432",
      "tests/data/Makefile.inc",
      "lib/http.c",
      "tests/data/test1430",
      "tests/data/test1431",
      "tests/data/test1433"
    ],
    "message": "HTTP: return larger than 3 digit response codes too\n\nHTTP 1.1 is clearly specified to only allow three digit response codes,\nand libcurl used sscanf(\"%3d\") for that purpose. This made libcurl\nsupport smaller numbers but not larger. It does now, but we will not\nmake any specific promises nor document this further since it is going\noutside of what HTTP is.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1441\nReported-by: Balaji",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1414423690
  },
  {
    "id": "64814739d5b0f1391c02972c98aa7fceb2132500",
    "files": [
      "lib/http_negotiate.c"
    ],
    "message": "http_negotiate: Fixed missing check for USE_SPNEGO",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1414340882
  },
  {
    "id": "9f5744a72f2ab7deebac27c39c0962b0f93d82f7",
    "files": [
      "lib/vtls/gtls.c"
    ],
    "message": "gnutls: removed dead code\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1437\nReported-by: Julien",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1414051318
  },
  {
    "id": "e36115d6889309d3deacc125d766221fe6cea0ca",
    "files": [
      "lib/vtls/vtls.c"
    ],
    "message": "Curl_rand: Uninitialized variable: r\n\nThis is not actually used uninitialized but we silence warnings.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1437\nReported-by: Julien",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1414051296
  },
  {
    "id": "fa9f5ed982366d9d9b39352a757a2df6611f4618",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Fixed empty type-2 decoded message info text\n\nUpdated the info text when the base-64 decode of the type-2 message\nreturns a null buffer to be more specific.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1413487808
  },
  {
    "id": "72147c62f7fa8893052ece2ebe83dd91035d24a2",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Fixed empty/bad base-64 decoded buffer return codes",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1413487496
  },
  {
    "id": "d4ea51734ed9b6a660d163323e4cdc7a3d0bdc93",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed some typos",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1413406710
  },
  {
    "id": "2ae142e6630ef5b9624ad0f794e04145cca7c1a2",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed Kerberos response buffer not being allocated when using SSO",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1413404650
  },
  {
    "id": "e64bc7cde6bf30b0bfa4e562b3d00a598771522f",
    "files": [
      "packages/OS400/os400sys.c",
      "packages/OS400/ccsidcurl.c"
    ],
    "message": "OS400: fix bugs in curl_*escape_ccsid() and reduce variables scope",
    "committer": {
      "email": "pm@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1413294205
  },
  {
    "id": "330346d51c1a11a7607349e364c417fccfc42ef5",
    "files": [
      "lib/vtls/curl_schannel.c"
    ],
    "message": "curl_schannel.c: Fixed possible memory or handle leak\n\nFirst try to fix possible memory leaks, in this case:\nOnly connssl->ctxt xor onnssl->cred being initialized.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1412439863
  },
  {
    "id": "ee0958cb4d930cb4cdb167ea401699cbb9229afa",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed intermittent \"SSL3_WRITE_PENDING: bad write retry\" error\n\nThis patch fixes the \"SSL3_WRITE_PENDING: bad write retry\" error that\nsometimes occurs when sending an email over SMTPS with OpenSSL. OpenSSL\nappears to require the same pointer on a write that follows a retry\n(CURLE_AGAIN) as discussed here:\n\nhttp://stackoverflow.com/questions/2997218/why-am-i-getting-error1409f07fssl-routinesssl3-write-pending-bad-write-retr",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1412109387
  },
  {
    "id": "46d71e7fd298f8c5d23034a88e856b254ff64253",
    "files": [
      "tests/libtest/lib506.c"
    ],
    "message": "test506: Fixed a couple of memory leaks in test",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1411707472
  },
  {
    "id": "bd3df5ec6dd2a71a66699303cc37fd5218a9920b",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed Unicode build\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1422\nVerified-by: Steve Holme",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1410599204
  },
  {
    "id": "8ee182288af1bd828613fdcab2e7e8b551e91901",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Fixed HTTP proxy authentication when using Windows SSPI\n\nRemoved ISC_REQ_* flags from calls to InitializeSecurityContext to fix\nbug in NTLM handshake for HTTP proxy authentication.\n\nNTLM handshake for HTTP proxy authentication failed with error\nSEC_E_INVALID_TOKEN from InitializeSecurityContext for certain proxy\nservers on generating the NTLM Type-3 message.\n\nThe flag ISC_REQ_CONFIDENTIALITY seems to cause the problem according\nto the observations and suggestions made in a bug report for the\nQT project (https://bugreports.qt-project.org/browse/QTBUG-17322).\n\nRemoving all the flags solved the problem.\n\nBug: http://curl.haxx.se/mail/lib-2014-08/0273.html\nReported-by: Ulrich Telle\nAssisted-by: Steve Holme, Daniel Stenberg",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1410523502
  },
  {
    "id": "785395b07e01eb9085655d6ef311e34c2fca2224",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: build fix for versions < 0.9.8e\n\nBug: http://curl.haxx.se/mail/lib-2014-09/0064.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1410347382
  },
  {
    "id": "8a75dbeb2305297640453029b7905ef51b87e8dd",
    "files": [
      "tests/data/test31",
      "tests/data/test1105",
      "lib/cookie.c",
      "tests/data/test8"
    ],
    "message": "cookies: only use full host matches for hosts used as IP address\n\nBy not detecting and rejecting domain names for partial literal IP\naddresses properly when parsing received HTTP cookies, libcurl can be\nfooled to both send cookies to wrong sites and to allow arbitrary sites\nto set cookies for others.\n\nCVE-2014-3613\n\nBug: http://curl.haxx.se/docs/adv_20140910A.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1410327156
  },
  {
    "id": "3c8c873252fa486d1e57fa28b8b455bfdb487f77",
    "files": [
      "lib/multihandle.h",
      "lib/multi.c"
    ],
    "message": "multi: convert CURLM_STATE_CONNECT_PEND handling to a list\n\n... instead of scanning through all handles, stash only the actual\nhandles that are in that state in the new ->pending list and scan that\nlist only. It should be mostly empty or very short. And only used for\npipelining.\n\nThis avoids a rather hefty slow-down especially notable if you add many\nhandles to the same multi handle. Regression introduced in commit\n0f147887 (version 7.30.0).\n\nBug: http://curl.haxx.se/mail/lib-2014-07/0206.html\nReported-by: David Meyer",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1409645867
  },
  {
    "id": "e608324f9f9ca1a40865902a52619f60ca86aa17",
    "files": [
      "lib/vtls/polarssl.c"
    ],
    "message": "polarssl: implement CURLOPT_SSLVERSION\n\nForwards the setting as minimum ssl version (if set) to polarssl.  If\nthe server does not support the requested version the SSL Handshake will\nfail.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1419",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1409604178
  },
  {
    "id": "cacdc27f52ba7b0bf08aa57886bfbd18bc82ebfb",
    "files": [
      "lib/speedcheck.c",
      "lib/asyn-ares.c",
      "lib/asyn-thread.c",
      "lib/connect.c",
      "lib/multiif.h",
      "lib/multi.c"
    ],
    "message": "low-speed-limit: avoid timeout flood\n\nIntroducing Curl_expire_latest(). To be used when we the code flow only\nwants to get called at a later time that is \"no later than X\" so that\nsomething can be checked (and another timeout be added).\n\nThe low-speed logic for example could easily be made to set very many\nexpire timeouts if it would be called faster or sooner than what it had\nset its own timer and this goes for a few other timers too that aren't\nexplictiy checked for timer expiration in the code.\n\nIf there's no condition the code that says if(time-passed >= TIME), then\nCurl_expire_latest() is preferred to Curl_expire().\n\nIf there exists such a condition, it is on the other hand important that\nCurl_expire() is used and not the other.\n\nBug: http://curl.haxx.se/mail/lib-2014-06/0235.html\nReported-by: Florian Weimer",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1409521801
  },
  {
    "id": "36a76380739660ce368d97289d87d0906c412d47",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "CONNECT: close proxy connections that fail to CONNECT\n\nThis is usually due to failed auth. There's no point in us keeping such\na connection alive since it shouldn't be re-used anyway.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1381\nReported-by: Marcel Raad",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1408966414
  },
  {
    "id": "898808fa8ca7b4a8e0866a5d7769ed1b50219328",
    "files": [
      "lib/url.c"
    ],
    "message": "disconnect: don't touch easy-related state on disconnects\n\nThis was done to make sure NTLM state that is bound to a connection\ndoesn't survive and gets used for the subsequent request - but\ndisconnects can also be done to for example make room in the connection\ncache and thus that connection is not strictly related to the easy\nhandle's current operation.\n\nThe http authentication state is still kept in the easy handle since all\nhttp auth _except_ NTLM is connection independent and thus survive over\nmultiple connections.\n\nBug: http://curl.haxx.se/mail/lib-2014-08/0148.html\nReported-by: Paras S",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1408951077
  },
  {
    "id": "1a073a20db78bb0d0250bda27def4f03ac2b6001",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: Fixed a memory leak on OOM",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1408736405
  },
  {
    "id": "63a0bd4270decef04e64fbe497b42f2c9e26c62b",
    "files": [
      "lib/url.c",
      "docs/KNOWN_BUGS"
    ],
    "message": "NTLM: ignore CURLOPT_FORBID_REUSE during NTLM HTTP auth\n\nProblem: if CURLOPT_FORBID_REUSE is set, requests using NTLM failed\nsince NTLM requires multiple requests that re-use the same connection\nfor the authentication to work\n\nSolution: Ignore the forbid reuse flag in case the NTLM authentication\nhandshake is in progress, according to the NTLM state flag.\n\nFixed known bug #77.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1408716331
  },
  {
    "id": "98633c2a19a9248dbbbb489d57248e113aebc6fa",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl.c: Fixed longer than 79 columns",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1408689843
  },
  {
    "id": "30f2d0c0b321cb17c38a2b21a50016e7901b55b2",
    "files": [
      "lib/url.c"
    ],
    "message": "Curl_disconnect: don't free the URL\n\nThe URL is not a property of the connection so it should not be freed in\nthe connection disconnect but in the Curl_close() that frees the easy\nhandle.\n\nBug: http://curl.haxx.se/mail/lib-2014-08/0148.html\nReported-by: Paras S",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1408545421
  },
  {
    "id": "23d52ca4a7be5e3c942dc001e95cff6ba905f1a1",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed a memory leak with the GSSAPI base-64 decoded challenge",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1408313335
  },
  {
    "id": "0187c9e11d079335f6863e583704e4350fe6b3e8",
    "files": [
      "tests/data/test194",
      "lib/http.c"
    ],
    "message": "http: fix the Content-Range: parser\n\n... to handle \"*/[total]\". Also, removed the strange hack that made\nCURLOPT_FAILONERROR on a 416 response after a *RESUME_FROM return\nCURLE_OK.\n\nReported-by: Dimitrios Siganos\nBug: http://curl.haxx.se/mail/lib-2014-06/0221.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1408089767
  },
  {
    "id": "fc5a5a4f073eda85ead58c5b36f88eddcffba749",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: fix version report for the 0.9.8 branch\n\nFixed libcurl to correctly output the newer versions of OpenSSL 0.9.8,\nstarting from openssl-0.9.8za.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1407912559
  },
  {
    "id": "01368d395ccdd8cae450c053f6275617850da60f",
    "files": [
      "lib/url.c",
      "lib/conncache.h",
      "lib/conncache.c"
    ],
    "message": "create_conn: prune dead connections\n\nBringing back the old functionality that was mistakenly removed when the\nconnection cache was remade. When creating a new connection, all the\nexisting ones are checked and those that are known to be dead get\ndisconnected for real and removed from the connection cache. It helps\nthe cache from holding on to very many stale connections and aids in\nkeeping down the number of system sockets in wait states.\n\nHelp-by: Jonatan Vela <jonatan.vela@ergon.ch>\n\nBug: http://curl.haxx.se/mail/lib-2014-06/0189.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1407879236
  },
  {
    "id": "cd6ecf6a899c49fee6ebd21f5a162d55632d4b85",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed hard coded buffer for response generation\n\nGiven the SSPI package info query indicates a token size of 4096 bytes,\nupdated to use a dynamic buffer for the response message generation\nrather than a fixed buffer of 1024 bytes.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407665480
  },
  {
    "id": "d804ff0d6bb3608cac83b08f3946d2403c6c8fb7",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed missing free of challenge buffer on SPN failure",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407663357
  },
  {
    "id": "72945b856e3cf9c3e91c902d3dd8d9412ebeec2e",
    "files": [
      "lib/urldata.h",
      "lib/http_negotiate_sspi.c"
    ],
    "message": "http_negotiate_sspi: Use a dynamic buffer for SPN generation\n\nUpdated to use a dynamic buffer for the SPN generation via the recently\nintroduced Curl_sasl_build_spn() function rather than a fixed buffer of\n1024 characters, which should have been more than enough, but by using\nthe new function removes the need for another variable sname to do the\nwide character conversion in Unicode builds.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407612308
  },
  {
    "id": "ff5dcb8df209d486534e5eb0487d5aab69564f38",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: Use a dynamic buffer for SPN generation\n\nUpdated Curl_sasl_create_digest_md5_message() to use a dynamic buffer\nfor the SPN generation via the recently introduced Curl_sasl_build_spn()\nfunction rather than a fixed buffer of 128 characters.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407606010
  },
  {
    "id": "f187372f0a9289bcece892864175e4ec7f032b54",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed SPN not being converted to wchar under Unicode builds\n\nCurl_sasl_create_digest_md5_message() would simply cast the SPN variable\nto a TCHAR when calling InitializeSecurityContext(). This meant that,\nunder Unicode builds, it would not be valid wide character string.\n\nUpdated to use the recently introduced Curl_sasl_build_spn() function\nwhich performs the correct conversion for us.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407600342
  },
  {
    "id": "1b69122810462cff569eb0929230961aa356bae0",
    "files": [
      "lib/curl_sasl.h",
      "lib/curl_sasl.c",
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl: Introduced Curl_sasl_build_spn() for building a SPN\n\nVarious parts of the libcurl source code build a SPN for inclusion in\nauthentication data. This information is either used by our own native\ngeneration routines or passed to authentication functions in third-party\nlibraries such as SSPI. However, some of these instances use fixed\nbuffers rather than dynamically allocated ones and not all of those that\nshould, convert to wide character strings in Unicode builds.\n\nImplemented a common function that generates a SPN and performs the\nwide character conversion where necessary.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407598824
  },
  {
    "id": "e9b4a96975e24ad75167e367d64f33daee887dcd",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "sasl_sspi: Fixed memory leak with not releasing Package Info struct\n\nCurl_sasl_create_digest_md5_message() wouldn't free the Package Info\nstructure after QuerySecurityPackageInfo() had allocated it.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407584062
  },
  {
    "id": "df739784e5cba0d032e0675d49fb449042799104",
    "files": [
      "lib/urldata.h",
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Fixed hard coded buffer for SSPI based auth packet generation\n\nGiven the SSPI package info query indicates a token size of 2888 bytes,\nand as with the Winbind code and commit 9008f3d56, use a dynamic buffer\nfor the Type-1 and Type-3 message generation rather than a fixed buffer\nof 1024 bytes.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407479463
  },
  {
    "id": "03d34b683d79dd42463fd26d5f0dd1d7cc192036",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "ntlm: Added support for SSPI package info query\n\nJust as with the SSPI implementations of Digest and Negotiate added a\npackage info query so that libcurl can a) return a more appropriate\nerror code when the NTLM package is not supported and b) it can be of\nuse later to allocate a dynamic buffer for the Type-1 and Type-3\noutput tokens rather than use a fixed buffer of 1024 bytes.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407438917
  },
  {
    "id": "7d2f61f66ab4e047fc9aefc2effc1ac6d340a66a",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: replace call to OPENSSL_config\n\nOPENSSL_config() is \"strongly recommended\" to use but unfortunately that\nfunction makes an exit() call on wrongly formatted config files which\nmakes it hard to use in some situations. OPENSSL_config() itself calls\nCONF_modules_load_file() and we use that instead and we ignore its\nreturn code!\n\nReported-by: Jan Ehrhardt\nBug: http://curl.haxx.se/bug/view.cgi?id=1401",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1407408031
  },
  {
    "id": "f8a8ed73fe7b130255d335d6b54b6d2e0accd056",
    "files": [
      "lib/urldata.h",
      "lib/http_negotiate_sspi.c"
    ],
    "message": "http_negotiate_sspi: Fixed specific username and password not working\n\nBug: http://curl.haxx.se/mail/lib-2014-06/0224.html\nReported-by: Leonardo Rosati",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407353479
  },
  {
    "id": "f8af8606a5420e2cfb17f2f32d750b6b2e7b52f9",
    "files": [
      "lib/http_negotiate_sspi.c"
    ],
    "message": "http_negotiate_sspi: Fixed endless unauthorized loop in commit 6bc76194e8\n\nIf the server rejects our authentication attempt and curl hasn't\ncalled CompleteAuthToken() then the status variable will be\nSEC_I_CONTINUE_NEEDED and not SEC_E_OK.\n\nAs such the existing detection mechanism for determining whether or not\nthe authentication process has finished is not sufficient.\n\nHowever, the WWW-Authenticate: Negotiate header line will not contain\nany data when the server has exhausted the negotiation, so we can use\nthat coupled with the already allocated context pointer.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1407305833
  },
  {
    "id": "2c1db913f73ff29291969ca7bf6f3bf8e1f34069",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: fixed a segfault during test 1320 torture test\n\nUnder these circumstances, the connection hasn't been fully established\nand smtp_connect hasn't been called, yet smtp_done still calls the state\nmachine which dereferences the NULL conn pointer in struct pingpong.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1406756244
  },
  {
    "id": "c56aa6f1214157e01bd7e0f9e3a7efe8089e6101",
    "files": [
      "lib/asyn-ares.c"
    ],
    "message": "c-ares: fix build without IPv6 support\n\nBug: http://curl.haxx.se/mail/lib-2014-07/0337.html\nReported-by: Spork Schivago",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1406273173
  },
  {
    "id": "aae4e4bf70f17a597b0042910e6c2c050ea927df",
    "files": [
      "lib/base64.c",
      "lib/http2.c",
      "lib/curl_base64.h"
    ],
    "message": "base64: added Curl_base64url_encode()\n\nThis is now used by the http2 code. It has two different symbols at the\nend of the base64 table to make the output \"url safe\".\n\nBug: https://github.com/tatsuhiro-t/nghttp2/issues/62",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1406269443
  },
  {
    "id": "5b22c47ca9f326d359d0016bfe6fb3ffd57324e1",
    "files": [
      "lib/url.c"
    ],
    "message": "findprotocol: show unsupported protocol within quotes\n\n... to aid when for example prefixed with a space or other weird\ncharacter.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1406132236
  },
  {
    "id": "59431c242bf1d93980756fa2db2d08744bfa79d3",
    "files": [
      "lib/krb5.c",
      "lib/http_negotiate.c",
      "lib/curl_gssapi.c",
      "lib/socks_gssapi.c",
      "lib/curl_gssapi.h"
    ],
    "message": "Use SPNEGO for HTTP Negotiate\n\nThis is the correct way to do SPNEGO. Just ask for it\n\nNow I correctly see it trying NTLMSSP authentication when a Kerberos ticket\nisn't available. Of course, we bail out when the server responds with the\nchallenge packet, since we don't expect that. But I'll fix that bug next...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1405524368
  },
  {
    "id": "9ad282b1ae1135e7d5dd2e466ff8671c1e4ee04b",
    "files": [
      "src/Makefile.m32",
      "winbuild/MakefileBuild.vc",
      "lib/config-tpf.h",
      "docs/LICENSE-MIXING",
      "lib/config-symbian.h",
      "lib/Makefile.Watcom",
      "configure.ac",
      "docs/examples/Makefile.m32",
      "docs/examples/Makefile.netware",
      "lib/Makefile.m32",
      "mkinstalldirs",
      "lib/Makefile.netware",
      "lib/config-dos.h",
      "lib/http_negotiate.c",
      "src/tool_help.c",
      "src/Makefile.netware",
      "install-sh",
      "lib/config-vxworks.h",
      "lib/version.c",
      "winbuild/Makefile.vc",
      "lib/curl_config.h.cmake"
    ],
    "message": "Remove all traces of FBOpenSSL SPNEGO support\n\nThis is just fundamentally broken. SPNEGO (RFC4178) is a protocol which\nallows client and server to negotiate the underlying mechanism which will\nactually be used to authenticate. This is *often* Kerberos, and can also\nbe NTLM and other things. And to complicate matters, there are various\ndifferent OIDs which can be used to specify the Kerberos mechanism too.\n\nA SPNEGO exchange will identify *which* GSSAPI mechanism is being used,\nand will exchange GSSAPI tokens which are appropriate for that mechanism.\n\nBut this SPNEGO implementation just strips the incoming SPNEGO packet\nand extracts the token, if any. And completely discards the information\nabout *which* mechanism is being used. Then we *assume* it was Kerberos,\nand feed the token into gss_init_sec_context() with the default\nmechanism (GSS_S_NO_OID for the mech_type argument).\n\nFurthermore... broken as this code is, it was never even *used* for input\ntokens anyway, because higher layers of curl would just bail out if the\nserver actually said anything *back* to us in the negotiation. We assume\nthat we send a single token to the server, and it accepts it. If the server\nwants to continue the exchange (as is required for NTLM and for SPNEGO\nto do anything useful), then curl was broken anyway.\n\nSo the only bit which actually did anything was the bit in\nCurl_output_negotiate(), which always generates an *initial* SPNEGO\ntoken saying \"Hey, I support only the Kerberos mechanism and this is its\ntoken\".\n\nYou could have done that by manually just prefixing the Kerberos token\nwith the appropriate bytes, if you weren't going to do any proper SPNEGO\nhandling. There's no need for the FBOpenSSL library at all.\n\nThe sane way to do SPNEGO is just to *ask* the GSSAPI library to do\nSPNEGO. That's what the 'mech_type' argument to gss_init_sec_context()\nis for. And then it should all Just Work\u2122.\n\nThat 'sane way' will be added in a subsequent patch, as will bug fixes\nfor our failure to handle any exchange other than a single outbound\ntoken to the server which results in immediate success.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1405524368
  },
  {
    "id": "4cb2521595ac557d3b94c48ef21a184fbed80d3c",
    "files": [
      "tests/data/test506",
      "tests/libtest/lib506.c"
    ],
    "message": "test506: verify aa6884845168\n\nAfter the fixed cookie lock deadlock, this test now passes and it\ndetects double-locking and double-unlocking of mutexes.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1405462198
  },
  {
    "id": "aa6884845168e3ddc43f0d7f2c8f40bb947d2506",
    "files": [
      "lib/url.c"
    ],
    "message": "cookie: avoid mutex deadlock\n\n... by removing the extra mutex locks around th call to\nCurl_flush_cookies() which takes care of the locking itself already.\n\nBug: http://curl.haxx.se/mail/lib-2014-02/0184.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1405461056
  },
  {
    "id": "763c51780c0830983ee75d66d516d65911b0e96a",
    "files": [
      "RELEASE-NOTES",
      "lib/netrc.c",
      "configure.ac"
    ],
    "message": "netrc: fixed thread safety problem by using getpwuid_r if available\n\nThe old way using getpwuid could cause problems in programs that enable\nreading from netrc files simultaneously in multiple threads.\n\nReported-by: David Woodhouse",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1405204042
  },
  {
    "id": "aaaf9e50ec8aec5144bcb5204b6ea80ec13384a6",
    "files": [
      "lib/curl_ntlm_wb.c"
    ],
    "message": "ntlm_wb: Fixed buffer size not being large enough for NTLMv2 sessions\n\nBug: http://curl.haxx.se/mail/lib-2014-07/0103.html\nReported-by: David Woodhouse",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1405173407
  },
  {
    "id": "45c93dad1d5e6564c14ee51acb3cc3562d1c1fb9",
    "files": [
      "src/tool_urlglob.c",
      "tests/unit/unit1395.c"
    ],
    "message": "Fixed some \"statement not reached\" warnings",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1405122326
  },
  {
    "id": "efc71583e7b6abb8e3b9bf37b003c6115c39f9d6",
    "files": [
      "lib/vtls/gtls.c"
    ],
    "message": "gnutls: fixed a couple of uninitialized variable references",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1405121472
  },
  {
    "id": "1cef8f0bc3de6374ffb2f573dc825c01bf7f9636",
    "files": [
      "lib/url.c"
    ],
    "message": "url.c: Fixed memory leak on OOM\n\nThis showed itself on some systems with torture failures\nin tests 1060 and 1061",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1404942912
  },
  {
    "id": "907520c4b93616bddea15757bbf0bfb45cde8101",
    "files": [
      "lib/url.c",
      "lib/multi.c"
    ],
    "message": "progress callback: skip last callback update on errors\n\nWhen an error has been detected, skip the final forced call to the\nprogress callback by making sure to pass the current return code\nvariable in the Curl_done() call in the CURLM_STATE_DONE state.\n\nThis avoids the \"extra\" callback that could occur even if you returned\nerror from the progress callback.\n\nBug: http://curl.haxx.se/mail/lib-2014-06/0062.html\nReported by: Jonathan Cardoso Machado",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1404338005
  },
  {
    "id": "bde0d89c3d4a1fa284ad67299f43e5f2f7acad59",
    "files": [
      "lib/getinfo.c"
    ],
    "message": "getinfo: HTTP CONNECT code not reset between transfers\n\nhttpproxycode is not reset in Curl_initinfo, so a 407 is not reset even\nif curl_easy_reset is called between transfers.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1380",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1402433091
  },
  {
    "id": "c50ce859187cabecee5470a95a51c35bf73d3c47",
    "files": [
      "docs/INTERNALS",
      "lib/vtls/openssl.c"
    ],
    "message": "Curl_ossl_init: call OPENSSL_config for initing engines\n\nBug: http://curl.haxx.se/mail/lib-2014-06/0003.html\nReported-by: \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0424\u0430\u043b\u044c\u043a\u043e",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1401826538
  },
  {
    "id": "62a26ec6962944383704c2b2a77fdb062200e814",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "curl_sasl: Fixed copy/paste error of now.tv_sec in commit eefeb73af4",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1401747315
  },
  {
    "id": "aa6be2ef13d68c69cddcd5af28d321ef4901ca2a",
    "files": [
      "lib/curl_sasl_sspi.c"
    ],
    "message": "curl_sasl_sspi: Fixed corrupt hostname in DIGEST-MD5 SPN generation",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1401615352
  },
  {
    "id": "fb4937a31185a967f874da1c1f679de7d0f9c16a",
    "files": [
      "lib/select.c"
    ],
    "message": "select: with winsock, avoid passing unsupported arguments to select()\n\n\"Any two of the parameters, readfds, writefds, or exceptfds, can be\ngiven as null. At least one must be non-null, and any non-null\ndescriptor set must contain at least one handle to a socket.\"\n\nhttp://msdn.microsoft.com/en-ca/library/windows/desktop/ms740141(v=vs.85).aspx\n\nWhen using select(), cURL doesn't adhere to this (WinSock-specific)\nrule, and can ask to monitor empty fd_sets, which leads to select()\nreturning WSAEINVAL (i.e. EINVAL) and connections failing in mysterious\nways as a result (at least when using the curl_multi_socket_action()\ninterface).\n\nBug: http://curl.haxx.se/mail/lib-2014-05/0278.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1401227908
  },
  {
    "id": "1b89456509c1ae3907bd65d9bc2114423ee4e790",
    "files": [
      "lib/url.c",
      "configure.ac"
    ],
    "message": "url-parser: only use if_nametoindex if detected by configure\n\nThe previous #ifdef detection wasn't good enough.\n\nBug: http://curl.haxx.se/mail/lib-2014-05/0260.html\nReported-by: Chris Young",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1401135015
  },
  {
    "id": "ac6da721a3740500cc0764947385eb1c22116b83",
    "files": [
      "lib/url.c"
    ],
    "message": "curl_easy_reset: reset the URL\n\nMake sure that the URL is reset and cleared.\n\nBug: http://curl.haxx.se/mail/lib-2014-05/0235.html\nReported-by: Jonathan Cardoso Machado",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1400951171
  },
  {
    "id": "99114faf8281e13492e857c935f51d3fad6f22dc",
    "files": [
      "lib/http2.h",
      "lib/http2.c",
      "lib/http.c"
    ],
    "message": "http2: make connection re-use work\n\nHttp2 connections would wrongly get closed after each individual\nrequest.\n\nCo-authored-by: Tatsuhiro Tsujikawa\nBug: http://curl.haxx.se/bug/view.cgi?id=1374",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1400597424
  },
  {
    "id": "5a067c4b39cb93fed9f8f11cb4fbd66514327b50",
    "files": [
      "lib/vtls/axtls.c"
    ],
    "message": "axtls: Fixed too long source line",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1400320488
  },
  {
    "id": "68f0166a92cff3660993645e9ad278b26d295832",
    "files": [
      "lib/http.c"
    ],
    "message": "HTTP: CREDSPERREQUEST is for HTTP too\n\nCommit 517b06d657ace (in 7.36.0) that brought the CREDSPERREQUEST flag\nonly set it for HTTPS, making HTTP less good at doing connection re-use\nthan it should be. Now set it for HTTP as well.\n\nSimple test case\n\n\"curl -v -u foo:bar localhost --next -u bar:foo localhos\"\n\nBug: http://curl.haxx.se/mail/lib-2014-05/0127.html\nReported-by: Kamil Dudka",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1400189311
  },
  {
    "id": "53a5b95c215860e3c392b011f2645e2bdd70246c",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "CURLINFO_SSL_VERIFYRESULT: assign at first connect call\n\nThe variable wasn't assigned at all until step3 which would lead to a\nfailed connect never assigning the variable and thus returning a bad\nvalue.\n\nReported-by: Larry Lin\nBug: http://curl.haxx.se/mail/lib-2014-04/0203.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1400184120
  },
  {
    "id": "84bd19ffd4374fd7b4fbe5a0ee0ecbf263d52ede",
    "files": [
      "lib/connect.c",
      "tests/unit/unit1303.c",
      "lib/progress.h",
      "lib/urldata.h",
      "lib/progress.c",
      "lib/multi.c"
    ],
    "message": "timers: fix timer regression involving redirects / reconnects\n\nIn commit 0b3750b5c23c25f (released in 7.36.0) we fixed a timeout issue\nbut instead broke the timings.\n\nTo fix this, I introduce a new timestamp to use for the timeouts and\nrestored the previous timestamp and timestamp position so that the old\ntimer functionality is restored.\n\nIn addition to that, that change also broke connection timeouts for when\nmore than one connect was used (as it would then count the total time\nfrom the first connect and not for the most recent one). Now\nCurl_timeleft() has been modified so that it checks against different\nstart times depending on which timeout it checks.\n\nTest 1303 is updated accordingly.\n\nBug: http://curl.haxx.se/mail/lib-2014-05/0147.html\nReported-by: Ryan Braud",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1400182099
  },
  {
    "id": "52d16c84d21ceb670914b56275b579535b271550",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: unbreak PKCS12 support\n\nRegression introduced in ce362e8eb9c (7.31.0)\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1371\nReported-by: Dmitry",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1399892810
  },
  {
    "id": "8342b6e1dc3fde9e91a75c349f2c9514b902d127",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: Fixed missing qop in the client's challenge-response message\n\nWhilst the qop directive isn't required to be present in a client's\nresponse, as servers should assume a qop of \"auth\" if it isn't\nspecified, some may return authentication failure if it is missing.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1399816108
  },
  {
    "id": "22ee67a1cafafa9942dd28339542d91c0cdb134d",
    "files": [
      "tests/libtest/lib1506.c"
    ],
    "message": "lib1506: make sure the transfers are not within the same ms\n\nJust to make sure the test is properly repeatable.\n\nBug: http://curl.haxx.se/mail/lib-2014-05/0081.html\nReported-by: Henrik",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1399647042
  },
  {
    "id": "5376ed2474be308031f0ba064c4db1d44d60da44",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool_operate.c: Fixed TAB is white space from commit 5b8ae0a985",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1399644891
  },
  {
    "id": "ec5fde24de5ddd1910730f0cbac5e77820b26eb9",
    "files": [
      "RELEASE-NOTES",
      "lib/http.c"
    ],
    "message": "http: avoid auth failure on a duplicated header\n\n... 'WWW-Authenticate: Negotiate' received from server\n\nReported by: David Woodhouse\nBug: https://bugzilla.redhat.com/1093348",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1399635844
  },
  {
    "id": "1343756742463488c63453723b2bfe002e45c47f",
    "files": [
      "docs/examples/cacertinmem.c"
    ],
    "message": "cacertinmem: fix memory leak\n\nWhile \"just\" an example it still isn't nice to leak memory.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1368\nFixed-by: Marko",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1399635201
  },
  {
    "id": "5f68fa48974f64286a7aba3f0fb80970745f993e",
    "files": [
      "src/tool_help.c"
    ],
    "message": "tool_help: Fixed missing --login-options option\n\n...and removed ;OPTIONS from --user as that functionality was removed\nin 7.34.0.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1399480067
  },
  {
    "id": "5de8d84098db1bd24e7fffefbe14e81f2a05995a",
    "files": [
      "lib/url.c"
    ],
    "message": "fix_hostname: strip off a single trailing dot from host name\n\nPrimarily for SNI, we need the host name without a trailing dot.\n\"https://www.example.com.\" resolves fine but fails on SNI unless the dot\nis removed.\n\nReported-by: Leon Winter\nBug: http://curl.haxx.se/mail/lib-2014-04/0161.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1399358651
  },
  {
    "id": "37f484276d863347df2616ead1524bffc2257098",
    "files": [
      "lib/multi.c"
    ],
    "message": "curl_multi_cleanup: ignore SIGPIPE better\n\nWhen looping and closing each individual connection left open, the\nSIGPIPE ignoring was not done and could thus lead to death by signal 13.\n\nBug: http://thread.gmane.org/gmane.comp.version-control.git/238242",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1399286866
  },
  {
    "id": "a18a2ba0bb5358513a095dbe87df18d8d5c3f7d8",
    "files": [
      "lib/vtls/curl_schannel.c"
    ],
    "message": "schannel: don't use the connect-timeout during send\n\nAs there's a default connection timeout and this wrongly used the\nconnection timeout during a transfer after the connection is completed,\nthis function would trigger timeouts during transfers erroneously.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1352\nFigured-out-by: Radu Simionescu",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1399241437
  },
  {
    "id": "c3031073457c9406fe79dcd40cc503c8eb22bea5",
    "files": [
      "tests/libtest/lib500.c"
    ],
    "message": "test585: Fixed NULL pointer dereference in fopen",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1398934830
  },
  {
    "id": "970ce28c12ddcf7ca0b3edd1446e34ea9cfb5cd1",
    "files": [
      "tests/unit/unit1395.c"
    ],
    "message": "unit1395: Fixed null pointer dereference on torture test",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1398698086
  },
  {
    "id": "710f14edba4491a4ac9222a7e3103b51fd30dbe0",
    "files": [
      "lib/urldata.h",
      "lib/url.c",
      "lib/ftp.c",
      "lib/http2.c",
      "lib/http.c",
      "lib/transfer.c",
      "lib/imap.c",
      "lib/ldap.c",
      "lib/pop3.c",
      "lib/sendf.c",
      "lib/smtp.c"
    ],
    "message": "handler: make 'protocol' always specified as a single bit\n\nThis makes the findprotocol() function work as intended so that libcurl\ncan properly be restricted to not support HTTP while still supporting\nHTTPS - since the HTTPS handler previously set both the HTTP and HTTPS\nbits in the protocol field.\n\nThis fixes --proto and --proto-redir for most SSL protocols.\n\nThis is done by adding a few new convenience defines that groups HTTP\nand HTTPS, FTP and FTPS etc that should then be used when the code wants\nto check for both protocols at once. PROTO_FAMILY_[protocol] style.\n\nBug: https://github.com/bagder/curl/pull/97\nReported-by: drizzt",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1398285361
  },
  {
    "id": "386ed2d5904566cbc455a50ee7a57d70385e1f02",
    "files": [
      "lib/vtls/gtls.c"
    ],
    "message": "gtls: fix NULL pointer dereference\n\ngnutls_x509_crt_import() must not be called with a NULL certificate\n\nBug: http://curl.haxx.se/mail/lib-2014-04/0145.html\nReported-by: Damian Dixon",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1398201871
  },
  {
    "id": "5b463e97fa5ceaf058a3197ab89e15fcb4dd9160",
    "files": [
      "lib/easy.c"
    ],
    "message": "curl_global_init_mem: bump initialized even if already initialized\n\nAs this makes curl_global_init_mem() behave the same way as\ncurl_global_init() already does in that aspect - the same number of\ncurl_global_cleanup() calls is then required to again decrease the\ncounter and then eventually do the cleanup.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1362\nReported-by: Tristan",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1398200894
  },
  {
    "id": "c1d61587895fdc084b31345996c0e30591caffbb",
    "files": [
      "tests/libtest/lib1527.c",
      "tests/libtest/lib1526.c"
    ],
    "message": "tests: Fixed torture test for tests 1526 & 1527",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1398199437
  },
  {
    "id": "6a03f6368fb3cb64fc29fcdcef543ac8990e33c0",
    "files": [
      "tests/server/sockfilt.c"
    ],
    "message": "sockfilt.c: fixed getting stuck waiting for MinGW stdin pipe",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1398180161
  },
  {
    "id": "e2c14bde22503f63e64b38701d04cbc72be9a221",
    "files": [
      "lib/url.c"
    ],
    "message": "url.c: Fixed typo in comment",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1397839886
  },
  {
    "id": "2c6b41e98a566486877938cfeaba4c946388485a",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed untagged response detection when no data after command\n\nShould a command return untagged responses that contained no data then\nthe imap_matchresp() function would not detect them as valid responses,\nas it wasn't taking the CRLF characters into account at the end of each\nline.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1397829717
  },
  {
    "id": "73b7a03c3fe3c3407493f8f7efbb86d8e2eca0b4",
    "files": [
      "lib/strerror.c"
    ],
    "message": "strerror: fix comment about vxworks' strerror_r buffer size\n\nBug: http://curl.haxx.se/mail/lib-2014-04/0063.html\nReported-by: Jeroen Koekkoek",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1396818788
  },
  {
    "id": "42937f87e65554ec4b887a5bd0b34abdbf2e0977",
    "files": [
      "tests/data/test1411",
      "tests/data/test88",
      "lib/http.c",
      "tests/data/test1001",
      "tests/data/Makefile.am",
      "tests/data/test155",
      "tests/data/test1002"
    ],
    "message": "HTTP: don't send Content-Length: 0 _and_ Expect: 100-continue\n\nWithout request body there's no point in asking for 100-continue.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1349\nReported-by: JimS",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1396619195
  },
  {
    "id": "c81021f74796a391be739665fec64431a66325c4",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp: in passive data connect wait for happy eyeballs sockets\n\nWhen doing passive FTP, the multi state function needs to extract and\nuse the happy eyeballs sockets to wait for to check for completion!\n\nBug: http://curl.haxx.se/mail/lib-2014-02/0135.html (ruined)\nReported-by: Alan",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1396550299
  },
  {
    "id": "dd9ce1b86cde2a906b38742f92bfccef2b8d18ee",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed login denied with a RFC-821 based server\n\nIn addition to commit fe260b75e7 fixed the same issue for RFC-821 based\nSMTP servers and allow the credientials to be given to curl even though\nthey are not used with the server.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1396333219
  },
  {
    "id": "ef813c709749d02d8dee17f5215239909b2fe968",
    "files": [
      "lib/vtls/gtls.c",
      "lib/urldata.h",
      "lib/vtls/openssl.c",
      "lib/vtls/nss.c",
      "lib/http.c"
    ],
    "message": "http2: remove _DRAFT09 from the NPN_HTTP2 enum\n\nWe're progressing throught drafts so there's no point in having a fixed\none in a symbol that'll survive.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1396248024
  },
  {
    "id": "fe260b75e74fed56573d133dd64d2424660743cb",
    "files": [
      "lib/smtp.h",
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed login denied when server doesn't support AUTH capability\n\nSpecifying user credentials when the SMTP server doesn't support\nauthentication would cause curl to display \"No known authentication\nmechanisms supported!\" and return CURLE_LOGIN_DENIED.\n\nReported-by: Tom Sparrow\nBug: http://curl.haxx.se/mail/lib-2014-03/0173.html",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1396030887
  },
  {
    "id": "5019c780958c3a8dbe64123aa90e6eaff1b84cfa",
    "files": [
      "lib/hostcheck.c"
    ],
    "message": "Curl_cert_hostcheck: reject IP address wildcard matches\n\nThere are server certificates used with IP address in the CN field, but\nwe MUST not allow wild cart certs for hostnames given as IP addresses\nonly. Therefore we must make Curl_cert_hostcheck() fail such attempts.\n\nBug: http://curl.haxx.se/docs/adv_20140326B.html\nReported-by: Richard Moore",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1395784897
  },
  {
    "id": "517b06d657aceb11a234b05cc891170c367ab80d",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "lib/http.c"
    ],
    "message": "url: Fixed connection re-use when using different log-in credentials\n\nIn addition to FTP, other connection based protocols such as IMAP, POP3,\nSMTP, SCP, SFTP and LDAP require a new connection when different log-in\ncredentials are specified. Fixed the detection logic to include these\nother protocols.\n\nBug: http://curl.haxx.se/docs/adv_20140326A.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1395784897
  },
  {
    "id": "3ebfaf6a0399b6adeb7def7c322586c449a72af4",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool_operate: Fixed uninitialised variable under some error situations\n\nFor example when a URL is not specified or the headers file fails to\nopen.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1395572655
  },
  {
    "id": "4ff71183b999761b07d54dd44743a4d59b2dad84",
    "files": [
      "lib/rtsp.c"
    ],
    "message": "rtsp: parse \"Session:\" header properly\n\nThe parser skipped the initial letter, which presumably often is\nwhitespace but doesn't have to be.\n\nReported-by: Mike Hasselberg\nBug: http://curl.haxx.se/mail/lib-2014-03/0134.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1395312747
  },
  {
    "id": "930b81387b8e343b35ebbefb521b237bc0018707",
    "files": [
      "lib/connect.c"
    ],
    "message": "trynextip: don't store 'ai' on failed connects...\n\nIt leads to the \"next family\" tries starting from the wrong point and thus\nfails!\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1337\nReported-by: ricker",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1395243252
  },
  {
    "id": "5017d5ada87916bf4113b0e9f439939ba89b78ef",
    "files": [
      "docs/INTERNALS",
      "lib/vtls/polarssl.c"
    ],
    "message": "polarssl: now require 1.3.0+\n\nAlso fixed a function name change in the version requirement bump",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1395085686
  },
  {
    "id": "e591165f94c2c58706d827c5a153828cc1b2dc03",
    "files": [
      "lib/ssh.c"
    ],
    "message": "ssh: Fixed a style warning\n\nAlso, combined a couple of #ifdef sections",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1394109562
  },
  {
    "id": "0b3750b5c23c25f1bcf4ed95edf8928ce4fd06cc",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_runsingle: move timestamp into INIT\n\nSetting the TIMER_STARTSINGLE timestamp first in CONNECT has the\ndrawback that for actions that go back to the CONNECT state, the time\nstamp is reset and for the multi_socket API there's no corresponding\nCurl_expire() then so the timeout logic gets wrong!\n\nReported-by: Brad Spencer\nBug: http://curl.haxx.se/mail/lib-2014-02/0036.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1393860904
  },
  {
    "id": "68920b6c113f7e3dd873d4b2d98f712c187b3765",
    "files": [
      "src/tool_operate.c",
      "src/tool_easysrc.c"
    ],
    "message": "tool: Fixed libcurl source output for multiple operations\n\nCorrectly output libcurl source code that includes multiply operations\nas specified by --next. Note that each operation evaluates to a single\ncurl_easy_perform() in source code form.\n\nAlso note that the output could be optimised a little so global config\noptions are only output once rather than per operation as is presently\nthe case.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1393753458
  },
  {
    "id": "1f077181234525832e0fcae38f7ff4f344f4b010",
    "files": [
      "lib/transfer.c"
    ],
    "message": "transfer.c: Fixed non-HTTP2 builds from commit cde0cf7c5e",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1393629696
  },
  {
    "id": "cde0cf7c5ede69c68cb00cba3d1a6ccc27c24bc9",
    "files": [
      "lib/http2.c",
      "lib/transfer.c"
    ],
    "message": "Fix bug that HTTP/2 hangs if whole response body is read with headers\n\nFor HTTP/2, we may read up everything including responde body with\nheader fields in Curl_http_readwrite_headers. If no content-length is\nprovided, curl waits for the connection close, which we emulate it\nusing conn->proto.httpc.closed = TRUE. The thing is if we read\neverything, then http2_recv won't be called and we cannot signal the\nHTTP/2 stream has closed. As a workaround, we return nonzero from\ndata_pending to call http2_recv.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1393626519
  },
  {
    "id": "bd248a0b8020dde767dca1a46a727c89ae14ee5e",
    "files": [
      "src/tool_main.c"
    ],
    "message": "tool_main: Fixed a memory leak on main_init error",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1393621092
  },
  {
    "id": "6512e93be1d60eb9879676665c032f34e6940c70",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool: Fixed incorrect return code with --version from commit c10bf9bb36",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1393157619
  },
  {
    "id": "ee23d13a79b185f117580773be9c5171097f8311",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool: Fixed incorrect return code when setting HTTP request fails\n\nDuring initialisation SetHTTPrequest() may fail and cURL would return\nPARAM_BAD_USE, which is equivalent to CURLE_NOT_BUILT_IN in cURL error\nterms.\n\nInstead, return CURLE_FAILED_INIT as we do for other functions that may\nfail during initialisation.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1393092873
  },
  {
    "id": "a660c0dbe6a81317c64d6652ddc66658e2752d2e",
    "files": [
      "lib/easy.c"
    ],
    "message": "easy: Fixed a memory leak on OOM condition",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1393080119
  },
  {
    "id": "873178a6577ff20c659621034b0b201d249f5eb7",
    "files": [
      "tests/libtest/lib1515.c"
    ],
    "message": "lib1515.c: Fixed #include path in commit 647f83e809",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1392842196
  },
  {
    "id": "0d6225ad0d5d0d441d78604e0d95e89dfedb4062",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP: skip reading the dir when NOBODY=1\n\nWhen asking for an SFTP directory with NOBODY set, no directory contents\nshould be retrieved.\n\nBug: http://curl.haxx.se/mail/lib-2014-02/0155.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1392802828
  },
  {
    "id": "d765099813f58153cb859279c743e6494d179341",
    "files": [
      "lib/url.c",
      "tests/data/test1418",
      "tests/data/Makefile.am",
      "tests/data/test1419"
    ],
    "message": "ConnectionExists: re-use connections better\n\nWhen allowing NTLM, the re-use connection logic was too focused on\nfinding an existing NTLM connection to use and didn't properly allow\nre-use of other ones. This made the logic not re-use perfectly re-usable\nconnections.\n\nAdded test case 1418 and 1419 to verify.\n\nRegression brought in 8ae35102c (curl 7.35.0)\n\nReported-by: Jeff King\nBug: http://thread.gmane.org/gmane.comp.version-control.git/242213",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1392557402
  },
  {
    "id": "1813a77b024d03b59fe5b591a5c5ecced02a9e66",
    "files": [
      "lib/dict.c"
    ],
    "message": "dict: fix memory leak in OOM exit path\n\nBug: https://github.com/bagder/curl/pull/90",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1392362501
  },
  {
    "id": "d3d871cb4fe1512b689bb29cb49473cfcf91c684",
    "files": [
      "lib/escape.c"
    ],
    "message": "Curl_urldecode: don't allow NULL as receiver\n\nFor a function that returns a decoded version of a string, it seems\nreally strange to allow a NULL pointer to get passed in which then\nprevents the decoded data from being returned!\n\nThis functionality was not documented anywhere either.\n\nIf anyone would use it that way, that memory would've been leaked.\n\nBug: https://github.com/bagder/curl/pull/90\nReported-by: Arvid Norberg",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1392332260
  },
  {
    "id": "378af08c99299683eb728fd8f9d3d3ab05f73ec0",
    "files": [
      "lib/url.c"
    ],
    "message": "ConnectionExists: reusing possible HTTP+NTLM connections better\n\nMake sure that the special NTLM magic we do is for HTTP+NTLM only since\nthat's where the authenticated connection is a weird non-standard\nparadigm.\n\nRegression brought in 8ae35102c (curl 7.35.0)\n\nBug: http://curl.haxx.se/mail/lib-2014-02/0100.html\nReported-by: Dan Fandrich",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1392330338
  },
  {
    "id": "0ab97ba0090f2609760c33000181f08757336a48",
    "files": [
      "lib/http_chunks.c"
    ],
    "message": "chunked decoder: track overflows correctly\n\nThe code didn't properly check the return codes to detect overflows so\nit could trigger incorrectly. Like on mingw32.\n\nRegression introduced in 345891edba (curl 7.35.0)\n\nBug: http://curl.haxx.se/mail/lib-2014-02/0097.html\nReported-by: LM",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1392212146
  },
  {
    "id": "85a4df8b793d1bc53e23368ce06a6c2f141a1bbf",
    "files": [
      "lib/formdata.c"
    ],
    "message": "formdata: Fixed memory leak on OOM condition",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1391855623
  },
  {
    "id": "9597f7dfbc95564b0c19b7d7226cbab4e0144aaf",
    "files": [
      "lib/formdata.c",
      "tests/data/test1133"
    ],
    "message": "formpost: use semicolon in multipart/mixed\n\nNot comma, which is an inconsistency and a mistake probably inherited\nfrom the examples section of RFC1867.\n\nThis bug has been present since the day curl started to support\nmultipart formposts, back in the 90s.\n\nReported-by: Rob Davies\nBug: http://curl.haxx.se/bug/view.cgi?id=1333",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1391762616
  },
  {
    "id": "4a8c87727339428837ecfa9a468520fd89148589",
    "files": [
      "lib/ssh.c"
    ],
    "message": "ssh: Fixed a NULL pointer dereference on OOM condition",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1391727407
  },
  {
    "id": "1ebf22cc0eaea3c8513d2bc23937e4388681f3b8",
    "files": [
      "lib/transfer.c"
    ],
    "message": "100-continue: fix timeout condition\n\nWhen using the multi socket interface, libcurl calls the\ncurl_multi_timer_callback asking to be woken up after\nCURL_TIMEOUT_EXPECT_100 milliseconds.\n\nAfter the timeout has expired, calling curl_multi_socket_action with\nCURL_SOCKET_TIMEOUT as sockfd leads libcurl to check expired\ntimeouts. When handling the 100-continue one, the following check in\nCurl_readwrite() fails if exactly CURL_TIMEOUT_EXPECT_100 milliseconds\npassed since the timeout has been set!\n\nIt seems logical to consider that having waited for exactly\nCURL_TIMEOUT_EXPECT_100 ms is enough.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1334",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1391725302
  },
  {
    "id": "1505e4612b59507c2f77274300376c61526e670c",
    "files": [
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.inc",
      "tests/libtest/lib1515.c",
      "tests/data/test1515"
    ],
    "message": "tests: add test for bug #1303 (dns cache timeout)\n\nTest-case 1515 reproduces bug #1303, where libcurl\nwould incorrectly prune DNS entries added via\nCURLOPT_RESOLVE after the DNS_CACHE_TIMEOUT had\nexpired.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1391724214
  },
  {
    "id": "0f213fdca1652b115998dd8cf0d0e3f260500594",
    "files": [
      "lib/pipeline.c"
    ],
    "message": "pipeline: Fixed a NULL pointer dereference on OOM",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1391123136
  },
  {
    "id": "c631a54bb60b2bbaf5085a679ce140330158d513",
    "files": [
      "lib/multi.c"
    ],
    "message": "ftp: fixed a memory leak on wildcard error path",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1391116503
  },
  {
    "id": "768151449b386488ac8fe869f48bf2930123d601",
    "files": [
      "lib/url.c"
    ],
    "message": "netrc: Fixed a memory leak in an OOM condition",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1391116503
  },
  {
    "id": "97857de80eea0b3028036c6796c2f485f4caf7d9",
    "files": [
      "lib/curl_ntlm.c"
    ],
    "message": "ntlm: Fixed a memory leak when using NTLM with a proxy server",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1391115566
  },
  {
    "id": "665c160f0a4635565b44704ca281d2a03e715d6d",
    "files": [
      "RELEASE-NOTES",
      "lib/vtls/nss.c"
    ],
    "message": "nss: do not use the NSS_ENABLE_ECC define\n\nIt is not provided by NSS public headers.\n\nBug: https://bugzilla.redhat.com/1058776",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1391000241
  },
  {
    "id": "1a20f592376cc0071505e935db35d75b08fb35aa",
    "files": [
      "lib/url.c"
    ],
    "message": "oauth2: Fixed a memory leak in an OOM condition",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1390949704
  },
  {
    "id": "31860ab8c83b35b21f331c85e4535b08b13dc8f9",
    "files": [
      "lib/hostip.c"
    ],
    "message": "hostip: don't remove DNS entries that are in use\n\nhostcache_timestamp_remove() should remove old *unused* entries from the\nhost cache, but it never checked whether the entry was actually in\nuse. This complements commit 030a2b8cb.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1327",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1390944348
  },
  {
    "id": "bcb19883a8e422f3e32a740a3cd68c2d34bff100",
    "files": [
      "lib/tftp.c"
    ],
    "message": "TFTP: fix crash on time-out\n\ntftp_done() can get called with its TFTP state pointer still being NULL\non an early time-out, which caused a segfault when dereferenced.\n\nReported-by: Glenn Sheridan\nBug: http://curl.haxx.se/mail/lib-2014-01/0246.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1390943836
  },
  {
    "id": "49b63cf30d4242b51bd49295f9f20cfbfb641a7d",
    "files": [
      "tests/server/sockfilt.c"
    ],
    "message": "sockfilt.c: fixed and simplified Windows select function\n\nSince the previous complex select function with initial support for\nnon-socket file descriptors, did not actually work correctly for\nConsole handles, this change simplifies the whole procedure by using\nan internal waiting thread for the stdin console handle.\n\nThe previous implementation made it continuously trigger for the stdin\nhandle if it was being redirected to a parent process instead of\nan actual Console input window.\n\nThis approach supports actual Console input handles as well as\nanonymous Pipe handles which are used during input redirection.\n\nIt depends on the fact that ReadFile supports trying to read zero bytes\nwhich makes it wait for the handle to become ready for reading.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1390694310
  },
  {
    "id": "b4b28c7001f04ccd06363915734933bbc90c5466",
    "files": [
      "lib/netrc.c"
    ],
    "message": "netrc: Fixed a memory and file descriptor leak on OOM",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1390596768
  },
  {
    "id": "da9864fb7236338dfbb48befd3e4facd4478dec0",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: Fixed a memory leak on OOM condition",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1390519328
  },
  {
    "id": "852a018e78c4976e3cf07212e8022546edb2c120",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP: stat remote file also when CURLOPT_NOBODY is 1\n\nMake it possible to call\ncurl_easy_getinfo(curl, CURLINFO_CONTENT_LENGTH_DOWNLOAD, &filesize)\nand related functions on remote sftp:// files, without downloading them.\n\nReported-by: Yingwei Liu\nBug: http://curl.haxx.se/mail/lib-2014-01/0139.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1390255075
  },
  {
    "id": "39f7e80a52c3b23b36015dcf0d3655af43a70f49",
    "files": [
      "lib/vtls/gtls.c"
    ],
    "message": "disable GnuTLS insecure ciphers\n\nMake GnuTLS old and new consistent, specify the desired protocol, cipher\nand certificate type in always in both modes. Disable insecure ciphers\nas reported by howsmyssl.com. Honor not only --sslv3, but also the\n--tlsv1[.N] switches.\n\nRelated Bug: http://curl.haxx.se/bug/view.cgi?id=1323",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1390213975
  },
  {
    "id": "33b8960dc88d8d0a5bfef92f891515b9a3b9727d",
    "files": [
      "src/tool_paramhlp.c",
      "src/tool_paramhlp.h"
    ],
    "message": "tool: Fixed incorrect return code if password prompting runs out of memory\n\nDue to the changes in commit 3c929ff9f6ea and lack of subsequent\nupdates, curl could return a CURLE_FTP_ACCEPT_FAILED error if\ncheckpasswd() ran out of memory in versions 7.33.0 and 7.34.0.\n\nUpdated the function declaration and return code to return\nCURLE_OUT_OF_MEMORY and CURLE_OK where appropriate.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1390148779
  },
  {
    "id": "aba98991a50d7a4f2deb8fc3f9ddc5628a207da5",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "tool: Fixed incorrect return code if command line parser runs out of memory\n\nIn the rare instance where getparameter() may return PARAM_NO_MEM whilst\nparsing a URL, cURL would return this error code, which is equivalent to\nCURLE_FTP_ACCEPT_FAILED in cURL error codes terms.\n\nInstead, return CURLE_FAILED_INIT and output the failure reason as per\nthe other usage of getparameter().",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1390134694
  },
  {
    "id": "ecaf2f02f1df70f0bbcbbbf48914bfc83c8f2a56",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie: max-age fixes\n\n1 - allow >31 bit max-age values\n\n2 - don't overflow on extremely large max-age values when we add the\nvalue to the current time\n\n3 - make sure max-age takes precedence over expires as dictated by\nRFC6265\n\nBug: http://curl.haxx.se/mail/lib-2014-01/0130.html\nReported-by: Chen Prog",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1389945447
  },
  {
    "id": "c7a76bb056f31e1cf4766dd219d9ef5cb4e3463d",
    "files": [
      "lib/curl_sspi.c",
      "lib/connect.c"
    ],
    "message": "win32: Fixed use of deprecated function 'GetVersionInfoEx' for VC12\n\nStarting with Visual Studio 2013 (VC12) and Windows 8.1 the\nGetVersionInfoEx() function has been marked as deprecated and it's\nreturn value atered. Updated connect.c and curl_sspi.c to use\nVerifyVersionInfo() where possible, which has been available since\nWindows 2000.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1389817261
  },
  {
    "id": "3b5c75ef3d609584daef44ebbf2a592a966cbd6b",
    "files": [
      "lib/vtls/openssl.c",
      "lib/vtls/openssl.h"
    ],
    "message": "OpenSSL: deselect weak ciphers by default\n\nBy default even recent versions of OpenSSL support and accept both\n\"export strength\" ciphers, small-bitsize ciphers as well as downright\ndeprecated ones.\n\nThis change sets a default cipher set that avoids the worst ciphers, and\nsubsequently makes https://www.howsmyssl.com/a/check no longer grade\ncurl/OpenSSL connects as 'Bad'.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1323\nReported-by: Jeff Hodges",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1389482041
  },
  {
    "id": "980659a2caa2856078c8a860b9b95f659c5cc2c1",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_socket: remind app if timeout didn't run\n\nBACKGROUND:\n\nWe have learned that on some systems timeout timers are inaccurate and\nmight occasionally fire off too early. To make the multi_socket API work\nwith this, we made libcurl execute timeout actions a bit early too if\nthey are within our MULTI_TIMEOUT_INACCURACY. (added in commit\n2c72732ebf, present since 7.21.0)\n\nSwitching everything to the multi API made this inaccuracy problem\nslightly more notable as now everyone can be affected.\n\nRecently (commit 21091549c02) we tweaked that inaccuracy value to make\ntimeouts more accurate and made it platform specific. We also figured\nout that we have code at places that check for fixed timeout values so\nthey MUST NOT run too early as then they will not trigger at all (see\ncommit be28223f35 and a691e044705) - so there are definitately problems\nwith running timeouts before they're supposed to run. (We've handled\nthat so far by adding the inaccuracy margin to those specific timeouts.)\n\nThe libcurl multi_socket API tells the application with a callback that\na timeout expires in N milliseconds (and it explicitly will not tell it\nagain for the same timeout), and the application is then supposed to\ncall libcurl when that timeout expires. When libcurl subsequently gets\ncalled with curl_multi_socket_action(...CURL_SOCKET_TIMEOUT...), it\nknows that the application thinks the timeout expired - and alas, if it\nis within the inaccuracy level libcurl will run code handling that\nhandle.\n\nIf the application says CURL_SOCKET_TIMEOUT to libcurl and _isn't_\nwithin the inaccuracy level, libcurl will not consider the timeout\nexpired and it will not tell the application again since the timeout\nvalue is still the same.\n\nNOW:\n\nThis change introduces a modified behavior here. If the application says\nCURL_SOCKET_TIMEOUT and libcurl finds no timeout code to run, it will\ninform the application about the timeout value - *again* even if it is\nthe same timeout that it already told about before (although libcurl\nwill of course tell it the updated time so that it'll still get the\ncorrect remaining time). This way, we will not risk that the application\nbelieves it has done its job and libcurl thinks the time hasn't come yet\nto run any code and both just sit waiting. This also allows us to\ndecrease the MULTI_TIMEOUT_INACCURACY margin, but that will be handled\nin a separate commit.\n\nA repeated timeout update to the application risk that the timeout will\nthen fire again immediately and we have what basically is a busy-loop\nuntil the time is fine even for libcurl. If that becomes a problem, we\nneed to address it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1389358645
  },
  {
    "id": "21aa79f46399c39c1c64b9f53270cb41aa310f17",
    "files": [
      "lib/vtls/curl_darwinssl.c"
    ],
    "message": "darwinssl: un-break Leopard build after PKCS#12 change\n\nIt turns out errSecDecode wasn't defined in Leopard's headers. So\nwe use the enum's value instead.\n\nBug: http://curl.haxx.se/mail/lib-2013-12/0150.html\nReported by: Abram Pousada",
    "committer": {
      "email": "nickzman@gmail.com",
      "name": "Nick Zitzmann"
    },
    "date": 1389311609
  },
  {
    "id": "28933f9d304657ab8341380d00f9ecbe86cb9e6f",
    "files": [
      "lib/connect.c"
    ],
    "message": "Curl_updateconninfo: don't do anything for UDP \"connections\"\n\ngetpeername() doesn't work for UDP sockets since they're not connected\n\nReported-by: Priyanka Shah\nBug: http://curl.haxx.se/mail/archive-2014-01/0016.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1389221025
  },
  {
    "id": "2d435c7fb5b7691e8ca1f3052e1eb5bcd8a4ea27",
    "files": [
      "lib/connect.c"
    ],
    "message": "trynextip: fix build for non-IPV6 capable systems\n\nAF_INET6 may not exist then\n\nPatched-by: Iida Yosiaki\nBug: http://curl.haxx.se/bug/view.cgi?id=1322",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1389170498
  },
  {
    "id": "8ae35102c43d8d06572c3a1292eb6e27e663c78d",
    "files": [
      "lib/url.c"
    ],
    "message": "ConnectionExists: fix NTLM check for new connection\n\nWhen the requested authentication bitmask includes NTLM, we cannot\nre-use a connection for another username/password as we then risk\nre-using NTLM (connection-based auth).\n\nThis has the unfortunate downside that if you include NTLM as a possible\nauth, you cannot re-use connections for other usernames/passwords even\nif NTLM doesn't end up the auth type used.\n\nReported-by: Paras S\nPatched-by: Paras S\nBug: http://curl.haxx.se/mail/lib-2014-01/0046.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1389084520
  },
  {
    "id": "602d28a210ee47a8a2c2f1e0bbd9fb633637272b",
    "files": [
      "lib/ftplistparser.c"
    ],
    "message": "FTP parselist: fix \"total\" parser\n\nA regression introduced in 7f3b87d8782eae1 (present in the 7.21.4 release)\nbroke the total parser. Now skip the whitespace and the digits.\n\nReported-by: Justin Maggard\nBug: http://curl.haxx.se/mail/lib-2014-01/0019.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1388792323
  },
  {
    "id": "bf24b64e835d8f8c9e5da8136fec9b4f251837b8",
    "files": [
      "lib/multi.c"
    ],
    "message": "progresscallback: make CURLE_ABORTED_BY_CALLBACK get returned better\n\nWhen the progress callback returned 1 at a very early state, the code\nwould not make CURLE_ABORTED_BY_CALLBACK get returned but the process\nwould still be interrupted. In the HTTP case, this would then cause a\nCURLE_GOT_NOTHING to erroneously get returned instead.\n\nReported-by: Petr Novak\nBug: http://curl.haxx.se/bug/view.cgi?id=1318",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1388754599
  },
  {
    "id": "3529162405fdf867c345c651a238fd8072abfb23",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "openssl: allow explicit sslv2 selection\n\nIf OpenSSL is built to support SSLv2 this brings back the ability to\nexplicitly select that as a protocol level.\n\nReported-by: Steve Holme\nBug: http://curl.haxx.se/mail/lib-2014-01/0013.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1388746369
  },
  {
    "id": "61288cbdef890af8ea169fdd10d56f557d419995",
    "files": [
      "lib/curl_sasl.c",
      "lib/curl_ntlm.c"
    ],
    "message": "vtls/nssg.h: fixed include references to moved file",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1388705525
  },
  {
    "id": "4bb74005298bb0c517360582b90efafd540bf8f1",
    "files": [
      "lib/vtls/openssl.c"
    ],
    "message": "OpenSSL: Fix forcing SSLv3 connections\n\nSome feedback provided by byte_bucket on IRC pointed out that commit\ndb11750cfa5b1 wasn\u2019t really correct because it allows for \u201cupgrading\u201d to a\nnewer protocol when it should be only allowing for SSLv3.\n\nThis change fixes that.\n\nWhen SSLv3 connection is forced, don't allow SSL negotiations for newer\nversions.  Feedback provided by byte_bucket in #curl.  This behavior is\nalso consistent with the other force flags like --tlsv1.1 which doesn't\nallow for TLSv1.2 negotiation, etc\n\nFeedback-by: byte_bucket\nBug: http://curl.haxx.se/bug/view.cgi?id=1319",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1388702493
  },
  {
    "id": "34365e4b03bac2ef7aca22511b8332c03e991f62",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed line length warning",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1388492193
  },
  {
    "id": "4e1ece2e44f432c2614f2090155c0aaf2226ea80",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: Try all addresses in first connection attempt\n\nFixes a bug when all addresses in the first family fail immediately, due\nto \"Network unreachable\" for example, curl would hang and never try the\nnext address family.\n\nIterate through all address families when to trying establish the first\nconnection attempt.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1315\nReported-by: Michal G\u00f3rny and Anthony G. Basile",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1388236676
  },
  {
    "id": "f2d234a4dd9bcc5760d92697546fea14b5897a0e",
    "files": [
      "lib/sendf.c"
    ],
    "message": "FILE: Fixed sending of data would always return CURLE_WRITE_ERROR\n\nIntroduced in commit 2a4ee0d2215556 sending of data via the FILE\nprotocol would always return CURLE_WRITE_ERROR regardless of whether\nCURL_WRITEFUNC_PAUSE was returned from the callback function or not.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1388141911
  },
  {
    "id": "2a4ee0d221555686b4a8eae87e54a19e128f7271",
    "files": [
      "lib/sendf.c",
      "docs/libcurl/curl_easy_pause.3",
      "lib/transfer.c"
    ],
    "message": "FILE: we don't support paused transfers using this protocol\n\nMake sure that we detect such attempts and return a proper error code\ninstead of silently handling this in problematic ways.\n\nUpdated the documentation to mention this limitation.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1286",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1388098234
  },
  {
    "id": "9aa6e4357a9e9257a56808ac407639cfeaf11ac9",
    "files": [
      "lib/vtls/gskit.c",
      "lib/vtls/axtls.c",
      "lib/vtls/openssl.c",
      "lib/vtls/polarssl.c",
      "lib/vtls/curl_darwinssl.c",
      "lib/vtls/nss.c",
      "lib/vtls/qssl.c",
      "lib/vtls/curl_schannel.c",
      "lib/vtls/gtls.c",
      "lib/vtls/cyassl.c",
      "lib/x509asn1.c"
    ],
    "message": "vtls: Fixed up include of vtls.h",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1388093151
  },
  {
    "id": "e8b57d1e849c80652b762130f38beeb0d431b23f",
    "files": [
      "lib/curl_threads.h",
      "lib/curl_threads.c"
    ],
    "message": "threaded resolver: Use pthread_t * for curl_thread_t\n\n... since pthread_t may be non-scalar and/or may represent a real thread\nwith scalar 0.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1314",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1387927708
  },
  {
    "id": "7fd490732acdccc2c0f490a31a3828fa7a284f63",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed auth preference not being honored when CAPABILITY not supported\n\nIf a user indicated they preferred to authenticate using a SASL\nmechanism, but SASL authentication wasn't supported by the server, curl\nwould always fall back to clear text when CAPABILITY wasn't supported,\neven though the user didn't want to use this.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387925433
  },
  {
    "id": "0c762f1c92505b1d749f36388ff98406ff07dea0",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed auth preference not being honored when CAPA not supported\n\nIf a user indicated they preferred to authenticate using APOP or a SASL\nmechanism, but neither were supported by the server, curl would always\nfall back to clear text when CAPA wasn't supported, even though the\nuser didn't want to use this.\n\nThis also fixes the auto build failure caused by commit 6f2d5f0562f64a.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387925376
  },
  {
    "id": "6f2d5f0562f64a95407869a1fe365e652b0a5a8d",
    "files": [
      "RELEASE-NOTES",
      "lib/pop3.c",
      "tests/ftpserver.pl"
    ],
    "message": "pop3: Fixed APOP being determined by CAPA response rather than by timestamp\n\nThis commit replaces that of 9f260b5d6610f3 because according to RFC-2449,\nsection 6, there is no APOP capability \"...even though APOP is an\noptional command in [POP3].  Clients discover server support of APOP by\nthe presence in the greeting banner of an initial challenge enclosed in\nangle brackets.\"",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387902895
  },
  {
    "id": "2715d7f948c8eb7cd3cba38f3dff6d4148e7cfaf",
    "files": [
      "lib/multi.c"
    ],
    "message": "FILE: don't wait due to CURLOPT_MAX_RECV_SPEED_LARGE\n\nThe FILE:// code doesn't support this option - and it doesn't make sense\nto support it as long as it works as it does since then it'd only block\neven longer.\n\nBut: setting CURLOPT_MAX_RECV_SPEED_LARGE would make the transfer first\nget done and then libcurl would wait until the average speed would get\nlow enough. This happened because the transfer happens completely in the\nDO state for FILE:// but then it would still unconditionally continue in\nto the PERFORM state where the speed check is made.\n\nStarting now, the code will skip from DO_DONE to DONE immediately if no\nsocket is set to be recv()ed or send()ed to.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1312\nReported-by: Mohammad AlSaleh",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1387752254
  },
  {
    "id": "cf2051764c5acd745fb4693e9be78e89fb5dd0b5",
    "files": [
      "lib/imap.c",
      "lib/pop3.c",
      "lib/smtp.c"
    ],
    "message": "email: Fixed segfault introduced in commit 195b63f99c2fe3",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387671412
  },
  {
    "id": "812c5ace759d04c2f0513f7ffe58f32673da2514",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed APOP timestamp detection from commit 1cfb436a2f1795",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387570679
  },
  {
    "id": "9f260b5d6610f3845e811146e4197700a6cc7b6b",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed selection of APOP when server replies with an invalid timestamp\n\nAlthough highlighted by a bug in commit 1cfb436a2f1795, APOP\nauthentication could be chosen if the server was to reply with an empty\nor missing timestamp in the server greeting and APOP was given in the\ncapability list by the server.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387551105
  },
  {
    "id": "045297671100a1361e0fb99f4a71a2cc696382b0",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed processing of more than one response when sent in same packet\n\nAdded a loop to pop3_statemach_act() in which Curl_pp_readresp() is\ncalled until the cache is drained. Without this multiple responses\nreceived in a single packet could result in a hang or delay.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387524049
  },
  {
    "id": "1dc43de0dccc2ea7da6dddb7b98f8d7dcf323914",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gtls: respect *VERIFYHOST independently of *VERIFYPEER\n\nSecurity flaw CVE-2013-6422\n\nThis is conceptually the same problem and fix that 3c3622b6 brought to the\nOpenSSL backend and that resulted in CVE-2013-4545.\n\nThis version of the problem was independently introduced to the GnuTLS\nbackend with commit 59cf93cc, present in the code since the libcurl\n7.21.4 release.\n\nAdvisory: http://curl.haxx.se/docs/adv_20131217.html\nBug: http://curl.haxx.se/mail/lib-2013-11/0214.html\nReported-by: Marc Deslauriers",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1387230451
  },
  {
    "id": "be28223f350ebd5a07de86d28b98a129952ccc60",
    "files": [
      "lib/multiif.h",
      "lib/transfer.c"
    ],
    "message": "multi: add timer inaccuracy margin to timeout/connecttimeout\n\nSince all systems have inaccuracy in the timeout handling it is\nimperative that we add an inaccuracy margin to the general timeout and\nconnecttimeout handling with the multi interface. This way, when the\ntimeout fires we should be fairly sure that it has passed the timeout\nvalue and will be suitably detected.\n\nFor cases where the timeout fire before the actual timeout, we would\notherwise consume the timeout action and still not run the timeout code\nsince the condition wasn't met.\n\nReported-by: He Qin\nBug: http://curl.haxx.se/bug/view.cgi?id=1298",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1387144421
  },
  {
    "id": "169fedbdce93ecf14befb6e0e1ce6a2d480252a3",
    "files": [
      "packages/OS400/curl.inc.in",
      "packages/OS400/README.OS400",
      "docs/libcurl/curl_easy_setopt.3",
      "packages/OS400/ccsidcurl.c",
      "src/tool_getparam.c",
      "docs/libcurl/symbols-in-versions",
      "include/curl/typecheck-gcc.h",
      "include/curl/curl.h",
      "src/tool_cfgable.h",
      "tests/data/test83",
      "lib/url.c",
      "src/tool_operate.c"
    ],
    "message": "login options: remove the ;[options] support from CURLOPT_USERPWD\n\nTo avoid the regression when users pass in passwords containing semi-\ncolons, we now drop the ability to set the login options with the same\noptions. Support for login options in CURLOPT_USERPWD was added in\n7.31.0.\n\nTest case 83 was modified to verify that colons and semi-colons can be\nused as part of the password when using -u (CURLOPT_USERPWD).\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1311\nReported-by: Petr Bahula\nAssisted-by: Steve Holme\nSigned-off-by: Daniel Stenberg <daniel@haxx.se>",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1387057237
  },
  {
    "id": "32b9c30e6705ca2b96b836cd0a8380b6a23478ff",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed exclude of clear text when using auth=* in commit 75cd7fd66762bb\n\nIt is not 100% clear whether * should include clear text LOGIN or not\nfrom RFC-5092, however, including it is then consistent with current\nPOP3 behaviour where clear text, APOP or SASL may be chosen.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1387023857
  },
  {
    "id": "75cd7fd66762bbfb73830553c8229aa0182f8987",
    "files": [
      "lib/imap.c",
      "lib/imap.h"
    ],
    "message": "imap: Fixed incorrect fallback to clear text authentication\n\nIf a specific SASL authentication mechanism was requested by the user\nas part of the login options but wasn't supported by the server then\ncurl would fallback to clear text, when it shouldn't, rather than\nreporting \"No known authentication mechanisms supported\" as the POP3\nand SMTP protocols do.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1386976543
  },
  {
    "id": "c4f46e97ca6c0f495d7c81d808fbd414deba1457",
    "files": [
      "lib/tftp.c"
    ],
    "message": "TFTP: let tftp_multi_statemach()'s return codes through\n\nIt would otherwise always clobber the return code with new function\ncalls and it couldn't return timeout etc.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1310",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1386427988
  },
  {
    "id": "ef118c13ba11a1dc2123270bad95351dd25743c1",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "digest: fix CURLAUTH_DIGEST_IE\n\nThe URI that is passed in as part of the Authorization: header needs to\nbe cut off at '?' if CURLAUTH_DIGEST_IE is set. Previously the code only\ndid when calculating the MD5sum.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1308\nPatched-by: Sergey Tatarincev",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1386194897
  },
  {
    "id": "1cf71bd76e4a330e5b7824014c2605e4bfe1a0a5",
    "files": [
      "lib/connect.c"
    ],
    "message": "Curl_is_connected: use proxy name in error message when proxy is used\n\n(bug introduced in 255826c4, never present in a release)\n\nReported-by: Dima Tisnek\nBug: http://curl.haxx.se/mail/lib-2013-12/0006.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1386193897
  },
  {
    "id": "7fc9325a52a6dad1f8b859a3269472ffc125edd0",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c"
    ],
    "message": "nss: allow to use TLS > 1.0 if built against recent NSS\n\nBug: http://curl.haxx.se/mail/lib-2013-11/0162.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1385992813
  },
  {
    "id": "0db811b69b2d5a18f8122d94db4e520909fd992b",
    "files": [
      "src/tool_parsecfg.c",
      "docs/curl.1"
    ],
    "message": "parseconfig: dash options can't specified with colon or equals\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1297\nReported-by: Michael Osipov",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1385734628
  },
  {
    "id": "0dd6522036daa8468c55c4a0c6b70d1c510e879a",
    "files": [
      "src/tool_urlglob.c"
    ],
    "message": "globbing: curl glob counter mismatch with {} list use\n\nThe \"fixed string\" function wrongly bumped the \"urlnum\" counter which\nmade curl output the total number of URLs wrong when using\n{one,two,three} lists in globs.\n\nReported-by: Michael-O\nBug: http://curl.haxx.se/bug/view.cgi?id=1305",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1385677891
  },
  {
    "id": "b2a55c81061a9f5efcd16a49064410bc1a627720",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: Try next ip directly after immediate connect fail\n\nThis fixes a rare Happy Eyeballs bug where if the first IP family runs\nout of addresses before the second-family-timer fires, and the second\nIP family's first connect fails immediately, no further IPs of the\nsecond family are attempted.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1385587603
  },
  {
    "id": "030a2b8cb8c4f1d03af6f6e6a3aa3a5a1db5f5a7",
    "files": [
      "lib/hostip.c"
    ],
    "message": "hostip: don't prune DNS cache entries that are in use\n\nWhen adding entries to the DNS cache with CURLOPT_RESOLVE, they are\nmarked 'inuse' forever to prevent them from ever being removed in normal\noperations. Still, the code that pruned out-of-date DNS entries didn't\ncare for the 'inuse' struct field and pruned it anyway!\n\nReported-by: Romulo A. Ceccon\nBug: http://curl.haxx.se/bug/view.cgi?id=1303",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1385334623
  },
  {
    "id": "8191800a0c8ff7b262535cbf1311d93ada2ee0c4",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed space being sent in non --mail-rcpt based requests\n\nCommands such as NOOP, RSET and HELP would be sent with a space at the\nend of the command, for example: \"NOOP \".",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1384706342
  },
  {
    "id": "b27dc009cfb887eddbcf3f2d8b80f79852cb3ef1",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp:Fixed memory leak from commit dac01ff6d788b2\n\nThe buffer allocated by smtp_parse_custom_request() was not freed.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1384678821
  },
  {
    "id": "eedca5055e992fa9b035541e9dbff053c693415a",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed broken RCPT TO from commit 0ea4a80bb23666",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1384554056
  },
  {
    "id": "168aa59705390326c549ed1a8d2878fd22786d04",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed trailing whitespace",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1384548184
  },
  {
    "id": "4a9fe268374456312afeecfb2497fd0e8ee2fbbf",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed handling of multiline server greeting responses\n\nIncorrectly processed multiline server greeting responses as \"wanted\"\ncontinue responses in smtp_endofresp(), from commit f16c0de4e9bbe3,\nwhich in turn broke the SMTP server detection in the test suite,\nbecause the EHLO command would not be sent.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1384519837
  },
  {
    "id": "796333bc5eb34d53843a1da1c173d62e186b5fdb",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed processing of more than one response when sent in same packet\n\nAdded a loop to smtp_statemach_act() in which Curl_pp_readresp() is\ncalled until the cache is drained. Without this multiple responses\nreceived in a single packet could result in a hang or delay.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1384512863
  },
  {
    "id": "bf77101e5c132572a7abeeec1ae8b3b0174d2831",
    "files": [
      "docs/libcurl/curl_easy_setopt.3",
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: PKCS#12 import feature now requires Lion or later\n\nIt turns out that some of the constants necessary to make this feature\nwork are missing from Snow Leopard's Security framework even though\nthey are defined in the headers.\n\nBug: http://curl.haxx.se/mail/lib-2013-11/0076.html\nReported by: myriachan",
    "committer": {
      "email": "nickzman@gmail.com",
      "name": "Nick Zitzmann"
    },
    "date": 1384309084
  },
  {
    "id": "0074c9f5d12e84ed877647e78fcf77460a9270e5",
    "files": [
      "lib/curl_ntlm_wb.c"
    ],
    "message": "winbind: Fixed ntlm_auth expecting eol following commit e17c1b25bc33eb",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1383595942
  },
  {
    "id": "5094bb53f4a02726fb2aa93d0614e20430004be5",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: Fixed \"Whut?\" no server connection failures\n\nIntroduced in commit 7d7df831981fee curl would loop displaying \"Whut?\"\nif it was trying to connect to an address and port that didn't have\nanything listening on it.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1383478032
  },
  {
    "id": "9a1755264f2e8e373c8fe867c88cf7df83211d66",
    "files": [
      "tests/server/getpart.c"
    ],
    "message": "getpart: Fixed base64 encoded parts following commit e17c1b25bc33eb",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1383411600
  },
  {
    "id": "255826c40f9316dbd0319853a791bc8079c5dd20",
    "files": [
      "lib/connect.c"
    ],
    "message": "bugfix: Don't block waiting for socket1 connect.\n\nThis patch fixes a bug in Happy Eyeballs where curl would wait for a\nconnect response from socket1 before checking socket2.\n\nAlso, it updates error messages for failed connections, showing the ip\naddresses that failed rather than just the host name repeatedly.\n\nBug: http://curl.haxx.se/mail/lib-2013-10/0236.html\nReported-by: Paul Marks",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1383083527
  },
  {
    "id": "2766262a68688c1dd8143f9c4be84b46c408b70a",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed response code parsing for bad AUTH continuation responses\n\nThis workaround had been previously been implemented for IMAP and POP3\nbut not SMTP. Some of the recent test case additions implemented this\nbehaviour to emulate a bad server and the SMTP code didn't cope with it.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1382782171
  },
  {
    "id": "650036633ffdc95c8c2181ce85582bbf3939582e",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: Fixed memory leak in OAUTH2 message creation",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1382570219
  },
  {
    "id": "ce61510127ea60d6f7fb66bf2092c9a4728d3fe1",
    "files": [
      "lib/imap.c",
      "lib/pop3.c",
      "lib/smtp.c"
    ],
    "message": "email: Fixed QUIT / LOGOUT being sent when SSL connect fails",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1382120900
  },
  {
    "id": "87861c9b0e81558c8db1f188063233c0e5893688",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "SSL: Fixed OpenSSL builds prior to v1.0.1\n\nCommit ad34a2d5c87c7f relies on definitions that are only present in\nOpenSSL v1.0.1 and up. This quick fix allows the builds that use\nolder versions of OpenSSL to continue building.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1381880963
  },
  {
    "id": "ad34a2d5c87c7f4b14e8dded34569395de0d8c5b",
    "files": [
      "packages/OS400/curl.inc.in",
      "lib/nss.c",
      "lib/curl_darwinssl.c",
      "lib/axtls.c",
      "lib/ssluse.c",
      "lib/cyassl.c",
      "docs/libcurl/curl_easy_setopt.3",
      "src/tool_getparam.c",
      "docs/libcurl/symbols-in-versions",
      "include/curl/curl.h",
      "src/tool_setopt.c",
      "lib/gskit.c",
      "lib/qssl.c",
      "lib/curl_schannel.c"
    ],
    "message": "SSL: protocol version can be specified more precisely\n\nCURL_SSLVERSION_TLSv1_0, CURL_SSLVERSION_TLSv1_1,\nCURL_SSLVERSION_TLSv1_2 enum values are added to force exact TLS version\n(CURL_SSLVERSION_TLSv1 means TLS 1.x).\n\naxTLS:\naxTLS only supports TLS 1.0 and 1.1 but it cannot be set that only one\nof these should be used, so we don't allow the new enum values.\n\ndarwinssl:\nAdded support for the new enum values.\n\nSChannel:\nAdded support for the new enum values.\n\nCyaSSL:\nAdded support for the new enum values.\nBug: The original CURL_SSLVERSION_TLSv1 value enables only TLS 1.0 (it\ndid the same before this commit), because CyaSSL cannot be configured to\nuse TLS 1.0-1.2.\n\nGSKit:\nGSKit doesn't seem to support TLS 1.1 and TLS 1.2, so we do not allow\nthose values.\nBugfix: There was a typo that caused wrong SSL versions to be passed to\nGSKit.\n\nNSS:\nTLS minor version cannot be set, so we don't allow the new enum values.\n\nQsoSSL:\nTLS minor version cannot be set, so we don't allow the new enum values.\n\nOpenSSL:\nAdded support for the new enum values.\nBugfix: The original CURL_SSLVERSION_TLSv1 value enabled only TLS 1.0,\nnow it enables 1.0-1.2.\n\nCommand-line tool:\nAdded command line options for the new values.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1381861607
  },
  {
    "id": "3c3622b66221d89509cffaa693fc7dcd5c5b96cf",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "OpenSSL: acknowledge CURLOPT_SSL_VERIFYHOST without VERIFYPEER\n\nSetting only CURLOPT_SSL_VERIFYHOST without CURLOPT_SSL_VERIFYPEER set\nshould still verify that the host name fields in the server certificate\nis fine or return failure.\n\nBug: http://curl.haxx.se/mail/lib-2013-10/0002.html\nReported-by: Ishan SinghLevett",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1380721202
  },
  {
    "id": "9215cee4c6c3cc15b30e50bec98cbbc9f7a62663",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "openssl: use correct port number in error message\n\nIn ossl_connect_step2() when the \"Unknown SSL protocol error\" occurs, it\nwould output the local port number instead of the remote one which\nshowed when doing SSL over a proxy (but with the correct remote host\nname). As libcurl only speaks SSL to the remote we know it is the remote\nport.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1281\nReported-by: Gordon Marler",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1379790060
  },
  {
    "id": "fbcefc0ce0cbe14c5f75d8c4ca2be9cdfce3e4d3",
    "files": [
      "RELEASE-NOTES",
      "lib/imap.c"
    ],
    "message": "imap: Fixed response check for NOOP command",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1379151868
  },
  {
    "id": "c243d45aadb502301e5e92d6f87af1d434ce98b4",
    "files": [
      "src/tool_operate.c",
      "src/tool_cfgable.h",
      "src/tool_getparam.c"
    ],
    "message": "curl: Fixed usage of DNS options when not using c-ares resolver\n\nCommit 32352ed6adddcb introduced various DNS options, however, these\nwould cause curl to exit with CURLE_NOT_BUILT_IN when c-ares wasn't\nbeing used as the backend resolver even if the options weren't set\nby the user.\n\nAdditionally corrected some minor coding style errors from the same\ncommit.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1379094611
  },
  {
    "id": "f3c9749a4031d6f08523e973b4367750714508a3",
    "files": [
      "RELEASE-NOTES",
      "lib/imap.c"
    ],
    "message": "imap: Fixed response check for LSUB and UID commands",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1378926921
  },
  {
    "id": "c639d725a37c91fb49bb3a689cb2596fad3a0645",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES"
    ],
    "message": "url: handle abortion by read/write callbacks, too\n\nOtherwise, the FTP protocol would unnecessarily hang 60 seconds if\naborted in the CURLOPT_HEADERFUNCTION callback.\n\nReported by: Tomas Mlcoch\nBug: https://bugzilla.redhat.com/1005686",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1378725784
  },
  {
    "id": "e20e48cbf2a93c0fba7b0018f37de2cacd4df19f",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed calculation of transfer when partial FETCH received\n\nThe transfer size would be calculated incorrectly if the email contained\nwithin the FETCH response, had been partially received by the pingpong\nlayer. As such the following, example output, would be seen if the\namount remaining was smaller than the amount received:\n\n* Excess found in a non pipelined read: excess = 1394, size = 262,\n  maxdownload = 262, bytecount = 1374\n* transfer closed with -1112 bytes remaining to read\n\nBug: http://curl.haxx.se/mail/lib-2013-08/0170.html\nReported-by: John Dunn",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1378708838
  },
  {
    "id": "3dc6fc42bfc61b86d5cb4632bdd3c2f47fb357af",
    "files": [
      "lib/ldap.c"
    ],
    "message": "LDAP: fix bad free() when URL parsing failed\n\nWhen an error occurs parsing an LDAP URL, The ludp->lud_attrs[i] entries\ncould be freed even though they sometimes point to data within an\nallocated area.\n\nThis change introduces a lud_attrs_dup[] array for the duplicated string\npointers, and it removes the unused lud_exts array.\n\nBug: http://curl.haxx.se/mail/lib-2013-08/0209.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1378467169
  },
  {
    "id": "9e8ced98906b50dfa5864f2e609ec603e5342c0e",
    "files": [
      "lib/imap.c",
      "lib/smtp.c"
    ],
    "message": "imap/smtp: Fixed incorrect SASL mechanism selection with XOAUTH2 servers\n\nXOAUTH2 would be selected in preference to LOGIN and PLAIN if the IMAP\nor SMTP server advertised support for it even though a user's password\nwas supplied but bearer token wasn't.\n\nModified the selection logic so that XOAUTH2 will only be selected if\nthe server supports it and A) The curl user/libcurl programmer has\nspecifically asked for XOAUTH via the ;AUTH=XOAUTH login option or 2)\nThe bearer token is specified. Obviously if XOAUTH is asked for via\nthe login option but no token is specified the user will receive a\nauthentication failure which makes more sense than no known\nauthentication mechanisms supported!",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1378326421
  },
  {
    "id": "f3849a7b84f90101ceb1145c69a97ac3048b1fd9",
    "files": [
      "RELEASE-NOTES",
      "lib/imap.c"
    ],
    "message": "imap: Fixed response check for EXPUNGE command",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1377942589
  },
  {
    "id": "c4a7ca038e26a57df952b4ea560f9b718a5ebd1d",
    "files": [
      "lib/ftp.c"
    ],
    "message": "FTP: fix getsock during DO_MORE state\n\n... when doing upload it would return the wrong values at times. This\ncommit attempts to cleanup the mess.\n\nBug: http://curl.haxx.se/mail/lib-2013-08/0109.html\nReported-by: Mike Mio",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1377810571
  },
  {
    "id": "22adb46a32beee185165c3dba444c3e6d660fb8f",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: move on from STATE_DONE faster\n\nMake sure we always return CURLM_CALL_MULTI_PERFORM when we reach\nCURLM_STATE_DONE since the state is transient and it can very well\ncontinue executing as there is nothing to wait for.\n\nBug: http://curl.haxx.se/mail/lib-2013-08/0211.html\nReported-by: Yi Huang",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1377204925
  },
  {
    "id": "4bea91fc677359f3dcedb05a431258b6cd5d98f3",
    "files": [
      "lib/tftp.c",
      "tests/data/Makefile.am",
      "tests/data/test1238"
    ],
    "message": "TFTP: make the CURLOPT_LOW_SPEED* options work\n\n... this also makes sure that the progess callback gets called more\noften during TFTP transfers.\n\nAdded test 1238 to verify.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1269\nReported-by: Jo3",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1377204147
  },
  {
    "id": "2f1a0bc0bf36c5ad0f8755d9c7553e1f5729af43",
    "files": [
      "lib/url.c",
      "lib/urldata.h"
    ],
    "message": "url: handle arbitrary-length username and password before '@'\n\nlibcurl quietly truncates usernames, passwords, and options from\nbefore an '@' sign in a URL to 255 (= MAX_CURL_PASSWORD_LENGTH - 1)\ncharacters to fit in fixed-size buffers on the stack.  Allocate a\nbuffer large enough to fit the parsed fields on the fly instead to\nsupport longer passwords.\n\nAfter this change, there are no more uses of MAX_CURL_OPTIONS_LENGTH\nleft, so stop defining that constant while at it.  The hardcoded max\nusername and password length constants, on the other hand, are still\nused in HTTP proxy credential handling (which this patch doesn't\ntouch).\n\nReported-by: Colby Ranger",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1376990198
  },
  {
    "id": "15f76bf7bb92b315799541b0e5127c8d22a50733",
    "files": [
      "lib/url.c"
    ],
    "message": "Curl_setopt: handle arbitrary-length username and password\n\nlibcurl truncates usernames, passwords, and options set with\ncurl_easy_setopt to 255 (= MAX_CURL_PASSWORD_LENGTH - 1) characters.\nThis doesn't affect the return value from curl_easy_setopt(), so from\nthe caller's point of view, there is no sign anything strange has\nhappened, except that authentication fails.\n\nFor example:\n\n  # Prepare a long (300-char) password.\n  s=0123456789; s=$s$s$s$s$s$s$s$s$s$s; s=$s$s$s;\n  # Start a server.\n  nc -l -p 8888 | tee out & pid=$!\n  # Tell curl to pass the password to the server.\n  curl --user me:$s http://localhost:8888 & sleep 1; kill $pid\n  # Extract the password.\n  userpass=$(\n\tawk '/Authorization: Basic/ {print $3}' <out |\n\ttr -d '\\r' |\n\tbase64 -d\n  )\n  password=${userpass#me:}\n  echo ${#password}\n\nExpected result: 300\nActual result: 255\n\nThe fix is simple: allocate appropriately sized buffers on the heap\ninstead of trying to squeeze the provided values into fixed-size\non-stack buffers.\n\nBug: http://bugs.debian.org/719856\nReported-by: Colby Ranger",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1376990198
  },
  {
    "id": "c56f9797e7feb7c2dc93bc389d4b85cc75220d77",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: allow arbitrarily long username and password\n\nUse appropriately sized buffers on the heap instead of fixed-size\nbuffers on the stack, to allow for longer usernames and passwords.\n\nCallers never pass anything longer than MAX_CURL_USER_LENGTH (resp.\nMAX_CURL_PASSWORD_LENGTH), so no functional change inteded yet.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1376990198
  },
  {
    "id": "9281be36d5206f02336236a7c90020449109816e",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed response check for SEARCH command\n\nAdding this line allows libcurl to return the server response when\nperforming a search command via a custom request.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1376904194
  },
  {
    "id": "f15a88f2b25ee44d8c8d3bdcf2508fdf50f8b868",
    "files": [
      "src/tool_urlglob.c",
      "tests/data/test1236",
      "tests/data/Makefile.am"
    ],
    "message": "glob: error out on range overflow\n\nThe new multiply() function detects range value overflows. 32bit\nmachines will overflow on a 32bit boundary while 64bit hosts support\nranges up to the full 64 bit range.\n\nAdded test 1236 to verify.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1267\nReported-by: Will Dietz",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1376646904
  },
  {
    "id": "5ca96cb84410270e233c92bf1b2583cba40c3fad",
    "files": [
      "src/tool_urlglob.h",
      "tests/data/test1235",
      "src/tool_operate.c",
      "tests/data/test87",
      "src/tool_urlglob.c",
      "tests/data/Makefile.am",
      "tests/data/test1234"
    ],
    "message": "urlglob: better detect unclosed braces, empty lists and overflows\n\nA rather big overhaul and cleanup.\n\n1 - curl wouldn't properly detect and reject globbing that ended with an\nopen brace if there were brackets or braces before it. Like \"{}{\" or\n\"[0-1]{\"\n\n2 - curl wouldn't properly reject empty lists so that \"{}{}\" would\nresult in curl getting (nil) strings in the output.\n\n3 - By using strtoul() instead of sscanf() the code will now detected\nover and underflows. It now also better parses the step argument to only\naccept positive numbers and only step counters that is smaller than the\ndelta between the maximum and minimum numbers.\n\n4 - By switching to unsigned longs instead of signed ints for the\ncounters, the max values for []-ranges are now very large (on 64bit\nmachines).\n\n5 - Bumped the maximum number of globs in a single URL to 100 (from 10)\n\n6 - Simplified the code somewhat and now it stores fixed strings as\nsingle- entry lists. That's also one of the reasons why I did (5) as now\nall strings between \"globs\" will take a slot in the array.\n\nAdded test 1234 and 1235 to verify. Updated test 87.\n\nThis commit fixes three separate bug reports.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1264\nBug: http://curl.haxx.se/bug/view.cgi?id=1265\nBug: http://curl.haxx.se/bug/view.cgi?id=1266\nReported-by: Will Dietz",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1376646728
  },
  {
    "id": "f584312e81e2636d6452b69628ff2c3cd4f17f90",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp_domore_getsock: when passive mode, the second conn is already there\n\nThis makes the socket callback get called with the proper bitmask as\notherwise the application could be left hanging waiting for reading on\nan upload connection!\n\nBug: http://curl.haxx.se/mail/lib-2013-08/0043.html\nReported-by: Bill Doyle",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1376512224
  },
  {
    "id": "d2b36e466afd69b6e2b202aca21db3bd2e48b190",
    "files": [
      "tests/data/test1512",
      "tests/libtest/lib1512.c",
      "lib/hostip.c",
      "tests/libtest/Makefile.inc",
      "tests/data/Makefile.am",
      "lib/multi.c",
      "lib/hostip.h"
    ],
    "message": "global dns cache: didn't work [regression]\n\nCURLOPT_DNS_USE_GLOBAL_CACHE broke in commit c43127414d89ccb (been\nbroken since the libcurl 7.29.0 release). While this option has been\ndocumented as deprecated for almost a decade and nobody even reported\nthis bug, it should remain functional.\n\nAdded test case 1512 to verify",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1375972126
  },
  {
    "id": "0ddc678927eaa127efc457535858c19e791a5339",
    "files": [
      "lib/formdata.c",
      "tests/data/test587",
      "tests/data/test554"
    ],
    "message": "formadd: wrong pointer for file name when CURLFORM_BUFFERPTR used\n\nThe internal function that's used to detect known file extensions for\nthe default Content-Type got the the wrong pointer passed in when\nCURLFORM_BUFFER + CURLFORM_BUFFERPTR were used. This had the effect that\nstrlen() would be used which could lead to an out-of-bounds read (and\nthus segfault). In most cases it would only lead to it not finding or\nusing the correct default content-type.\n\nIt also showed that test 554 and test 587 were testing for the\nprevious/wrong behavior and now they're updated as well.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1262\nReported-by: Konstantin Isakov",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1375651956
  },
  {
    "id": "1691a31cab33ef1d6a186bd08e5f8cf7661e34c1",
    "files": [
      "src/tool_cb_prg.h",
      "src/tool_cb_prg.c"
    ],
    "message": "curl: make --progress-bar update the line less frequently\n\nAlso, use memset() instead of a lame loop.\n\nThe previous logic that tried to avoid too many updates were very\nineffective for really fast transfers, as then it could easily end up\ndoing hundreds of updates per second that would make a significant\nimpact in transfer performance!\n\nBug: http://curl.haxx.se/mail/archive-2013-07/0031.html\nReported-by: Marc Doughty",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1375270860
  },
  {
    "id": "537ffc4c69a3cf4962147070231bd9270faf9710",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: fix build error in crypto authentication under Snow Leopard\n\nIt turns out Snow Leopard not only has SecItemCopyMatching() defined in\na header not included by the omnibus header, but it won't work for our\npurposes, because searching for SecIdentityRef objects wasn't added\nto that API until Lion. So we now use the old SecKeychainSearch API\ninstead if the user is building under, or running under, Snow Leopard.\n\nBug: http://sourceforge.net/p/curl/bugs/1255/\nReported by: Edward Rudd",
    "committer": {
      "email": "nickzman@gmail.com",
      "name": "Nick Zitzmann"
    },
    "date": 1375237538
  },
  {
    "id": "c3e721054822b6f2d099abb186c91518bc29be2c",
    "files": [
      "lib/md5.c",
      "src/tool_metalink.c"
    ],
    "message": "md5 & metalink: use better build macros on Apple operating systems\n\nPreviously we used __MAC_10_X and __IPHONE_X to mark digest-generating\ncode that was specific to OS X and iOS. Now we use\n__MAC_OS_X_VERSION_MAX_ALLOWED and __IPHONE_OS_VERSION_MAX_ALLOWED\ninstead of those macros.\n\nBug: http://sourceforge.net/p/curl/bugs/1255/\nReported by: Edward Rudd",
    "committer": {
      "email": "nickzman@gmail.com",
      "name": "Nick Zitzmann"
    },
    "date": 1375237220
  },
  {
    "id": "b5478a0e033e70478f1c935719bf2e29fda02526",
    "files": [
      "lib/easy.c",
      "docs/libcurl/curl_easy_pause.3"
    ],
    "message": "curl_easy_pause: on unpause, trigger mulit-socket handling\n\nWhen the multi-socket API is used, we need the handle to be checked\nagain when it gets unpaused.\n\nBug: http://curl.haxx.se/mail/lib-2013-07/0239.html\nReported-by: Justin Karneges",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1375101428
  },
  {
    "id": "db2deba6b4b0e447781ff0e2bdee2aec0a283c97",
    "files": [
      "lib/formdata.c"
    ],
    "message": "curl_formadd: fix file upload on VMS\n\nFor the standard VMS text file formats, VMS needs to read the file to\nget the actual file size.\n\nFor the standard VMS binary file formats, VMS needs a special format of\nfopen() call so that it stops reading at the logical end of file instead\nof at the end of the blocks allocated to the file.\n\nI structured the patch this way as I was not sure about changing the\nstructures or parameters to the routines, but would prefer to only call\nthe stat() function once and pass the information to where the fopen()\ncall is made.\n\nBug: https://sourceforge.net/p/curl/bugs/758/",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1375096148
  },
  {
    "id": "41fb6443ceeda65c09dbe0e1fd7591269e4966a9",
    "files": [
      "lib/formdata.c"
    ],
    "message": "formadd: CURLFORM_FILECONTENT wrongly rejected some option combos\n\nThe code for CURLFORM_FILECONTENT had its check for duplicate options\nwrong so that it would reject CURLFORM_PTRNAME if used in combination\nwith it (but not CURLFORM_COPYNAME)! The flags field used for this\npurpose cannot be interpreted that broadly.\n\nBug: http://curl.haxx.se/mail/lib-2013-07/0258.html\nReported-by: Byrial Jensen",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1374875101
  },
  {
    "id": "5880db8abd656413e1dc54881d347edaf78f1399",
    "files": [
      "src/tool_operate.c"
    ],
    "message": "curl: fix upload of a zip file in OpenVMS\n\nTwo fixes:\n\n1. Force output file format to be stream-lf so that partial downloads\ncan be continued.\n\nThis should have minor impact as if the file does not exist, it was\ncreated with stream-lf format.  The only time this was an issue is if\nthere was already an existing file with a different format.\n\n2. Fix file uploads are now fixed.\n\n   a. VMS binary files such as ZIP archives are now uploaded\n      correctly.\n\n   b. VMS text files are read once to get the correct size\n      and then converted to line-feed terminated records as\n      they are read into curl.\n\nThe default VMS text formats do not contain either line-feed or\ncarriage-return terminated records.  Those delimiters are added by the\noperating system file read calls if the application requests them.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=496",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1374525005
  },
  {
    "id": "d529f3882b9bca2c3eb32295dd6b2609d0c9b51f",
    "files": [
      "lib/easy.c"
    ],
    "message": "curl_easy_perform: gradually increase the delay time\n\nInstead of going 50,100,150 etc millisecond delay time when nothing has\nbeen found to do or wait for, we now start lower and double each loop as\nin 4,8,16,32 etc.\n\nThis lowers the minimum wait without sacrifizing the longer wait too\nmuch with unnecessary CPU cycles burnt.\n\nBug: http://curl.haxx.se/mail/lib-2013-07/0103.html\nReported-by: Andreas Malzahn",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1374269237
  },
  {
    "id": "e2e92486a740e9a5b984ae9ff8c74e9d50dd35d7",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp_do_more: consider DO_MORE complete when server connects back\n\nIn the case of an active connection when ftp_do_more() detects that the\nserver has connected back, it must make sure to mark it as complete so\nthat the multi_runsingle() function will detect this and move on to the\nnext state.\n\nBug: http://curl.haxx.se/mail/lib-2013-07/0115.html\nReported-by: Clemens Gruber",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1374267750
  },
  {
    "id": "009d2336fe23329dc19af4bf958be412c1072f15",
    "files": [
      "tests/libtest/lib506.c"
    ],
    "message": "lib506.c: Fixed possible use of uninitialized variables",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1372707735
  },
  {
    "id": "abca89aaa0fb208cfaf4ead6692014c4e553388a",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES"
    ],
    "message": "url: restore the functionality of 'curl -u :'\n\nThis commit fixes a regression introduced in\nfddb7b44a79d78e05043e1c97e069308b6b85f79.\n\nReported by: Markus Moeller\nBug: http://curl.haxx.se/mail/archive-2013-06/0052.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1372615994
  },
  {
    "id": "365c5ba39591fab2e60bf4f0e67d9dcf79ecc506",
    "files": [
      "lib/formdata.c",
      "lib/sslgen.h",
      "lib/curl_rand.c",
      "lib/nssg.h",
      "tests/data/test587",
      "lib/easy.c",
      "lib/sslgen.c",
      "tests/data/test554",
      "tests/data/test158",
      "lib/curl_darwinssl.h",
      "lib/ssluse.h",
      "lib/gtls.h",
      "lib/curl_sasl.c",
      "lib/curl_rand.h",
      "lib/Makefile.inc",
      "tests/data/test277"
    ],
    "message": "formpost: better random boundaries\n\nWhen doing multi-part formposts, libcurl used a pseudo-random value that\nwas seeded with time(). This turns out to be bad for users who formpost\ndata that is provided with users who then can guess how the boundary\nstring will look like and then they can forge a different formpost part\nand trick the receiver.\n\nMy advice to such implementors is (still even after this change) to not\nrely on the boundary strings being cryptographically strong. Fix your\ncode and logic to not depend on them that much!\n\nI moved the Curl_rand() function into the sslgen.c source file now to be\nable to take advantage of the SSL library's random function if it\nprovides one. If not, try to use the RANDOM_FILE for seeding and as a\nlast resort keep the old logic, just modified to also add microseconds\nwhich makes it harder to properly guess the exact seed.\n\nThe formboundary() function in formdata.c is now using 64 bit entropy\nfor the boundary and therefore the string of dashes was reduced by 4\nletters and there are 16 hex digits following it. The total length is\nthus still the same.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1251\nReported-by: \"Floris\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1372146949
  },
  {
    "id": "ad47d8e263939a813683ca6a3662e7745428716c",
    "files": [
      "lib/asyn-ares.c"
    ],
    "message": "c-ares: improve error message on failed resolve\n\nWhen the c-ares based resolver backend failed to resolve a name, it\ntried to show the name that failed from existing structs. This caused\nthe wrong output and shown hostname when for example --interface\n[hostname] was used and that name resolving failed.\n\nNow we use the hostname used in the actual resolve attempt in the error\nmessage as well.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1191\nReported-by: Kim Vandry",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1372011938
  },
  {
    "id": "8a7a277c086199b37c07a8e01165168037866f3e",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "ossl_recv: check for an OpenSSL error, don't assume\n\nWhen we recently started to treat a zero return code from SSL_read() as\nan error we also got false positives - which primarily looks to be\nbecause the OpenSSL documentation is wrong and a zero return code is not\nat all an error case in many situations.\n\nNow ossl_recv() will check with ERR_get_error() to see if there is a\nstored error and only then consider it to be a true error if SSL_read()\nreturned zero.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1249\nReported-by: Nach M. S.\nPatch-by: Nach M. S.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371981921
  },
  {
    "id": "7d80ed64e4351556d69dbfac73f5f579d5a9ebb2",
    "files": [
      "lib/easy.c"
    ],
    "message": "SIGPIPE: ignored while inside the library\n\n... and restore the ordinary handling again when it returns. This is\ndone for curl_easy_perform() and curl_easy_cleanup() only for now - and\nonly when built to use OpenSSL as backend as this is the known culprit\nfor the spurious SIGPIPEs people have received.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1180\nReported by: Llu\u00eds Batlle i Rossell",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371933306
  },
  {
    "id": "7877619f856a04af0519e92780b1d6674a8ff3f7",
    "files": [
      "tests/unit/Makefile.inc",
      "tests/unit/unit1395.c",
      "tests/data/test1231",
      "lib/url.c",
      "tests/data/test1395",
      "tests/data/Makefile.am",
      "lib/Makefile.inc",
      "lib/dotdot.h",
      "lib/dotdot.c"
    ],
    "message": "dotdot: introducing dot file path cleanup\n\nRFC3986 details how a path part passed in as part of a URI should be\n\"cleaned\" from dot sequences before getting used. The described\nalgorithm is now implemented in lib/dotdot.c with the accompanied test\ncase in test 1395.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1200\nReported-by: Alex Vinnik",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371903307
  },
  {
    "id": "192c4f788d48f82c03e9cef40013f34370e90737",
    "files": [
      "lib/escape.c"
    ],
    "message": "Curl_urldecode: no peeking beyond end of input buffer\n\nSecurity problem: CVE-2013-2174\n\nIf a program would give a string like \"%FF\" to curl_easy_unescape() but\nask for it to decode only the first byte, it would still parse and\ndecode the full hex sequence. The function then not only read beyond the\nallowed buffer but it would also deduct the *unsigned* counter variable\nfor how many more bytes there's left to read in the buffer by two,\nmaking the counter wrap. Continuing this, the function would go on\nreading beyond the buffer and soon writing beyond the allocated target\nbuffer...\n\nBug: http://curl.haxx.se/docs/adv_20130622.html\nReported-by: Timo Sirainen",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371892895
  },
  {
    "id": "88c5c63ffc3312a8c8471b48a44ec5f50420f2e3",
    "files": [
      "lib/connect.c",
      "lib/multi.c",
      "lib/multiif.h"
    ],
    "message": "multi_socket: react on socket close immediately\n\nAs a remedy to the problem when a socket gets closed and a new one is\nopened with the same file descriptor number and as a result\nmulti.c:singlesocket() doesn't detect the difference, the new function\nCurl_multi_closed() gets told when a socket is closed so that it can be\nremoved from the socket hash. When the old one has been removed, a new\nsocket should be detected fine by the singlesocket() on next invoke.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1248\nReported-by: Erik Johansson",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371760612
  },
  {
    "id": "7ac3e9f1ba7c96d32a46c72edb5819c4a342a31f",
    "files": [
      "lib/url.c"
    ],
    "message": "CURLOPT_COOKIELIST: take cookie share lock\n\nWhen performing COOKIELIST operations the cookie lock needs to be taken\nfor the cases where the cookies are shared among multiple handles!\n\nVerified by Benjamin Gilbert's updated test 506\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1215\nReported-by: Benjamin Gilbert",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371504545
  },
  {
    "id": "03a3dd9ee39e2ca4eea101360ae976e13586c01a",
    "files": [
      "tests/data/test506",
      "tests/libtest/lib506.c"
    ],
    "message": "test506: verify that CURLOPT_COOKIELIST takes share lock\n\nIt doesn't right now: http://curl.haxx.se/bug/view.cgi?id=1215",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371504515
  },
  {
    "id": "0feeab7802dd2a6465d22d153d8d36b2cca99b96",
    "files": [
      "lib/easy.c"
    ],
    "message": "curl_easy_perform: avoid busy-looping\n\nWhen curl_multi_wait() finds no file descriptor to wait for, it returns\ninstantly and this must be handled gracefully within curl_easy_perform()\nor cause a busy-loop. Starting now, repeated fast returns without any\nfile descriptors is detected and a gradually increasing sleep will be\nused (up to a max of 1000 milliseconds) before continuing the loop.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1238\nReported-by: Miguel Angel",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1371144432
  },
  {
    "id": "529a2e91109e68bcb40d3ecdb0a6651f4ff58de6",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "Curl_output_digest: support auth-int for empty entity body\n\nBy always returning the md5 for an empty body when auth-int is asked\nfor, libcurl now at least sometimes does the right thing.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1235\nPatched-by: Nach M. S.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1370902093
  },
  {
    "id": "21091549c02743ff2cda7d4f1d725556f7c4db20",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_socket: reduce timeout inaccuracy margin\n\nAllow less room for \"triggered too early\" mistakes by applications /\ntimers on non-windows platforms. Starting now, we assume that a timeout\ncall is never made earlier than 3 milliseconds before the actual\ntimeout. This greatly improves timeout accuracy on Linux.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1228\nReported-by: Hang Su",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1370901749
  },
  {
    "id": "7b97f03f09537fb488cbeda28767aa478618745c",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "cert_stuff: avoid double free in the PKCS12 code\n\nIn the pkcs12 code, we get a list of x509 records returned from\nPKCS12_parse but when iterating over the list and passing each to\nSSL_CTX_add_extra_chain_cert() we didn't also properly remove them from\nthe \"stack\", which made them get freed twice (both in sk_X509_pop_free()\nand then later in SSL_CTX_free).\n\nThis isn't really documented anywhere...\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1236\nReported-by: Nikaiw",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1370900568
  },
  {
    "id": "87cf677eca55abee88f0a9dced9e6fa570143873",
    "files": [
      "tests/libtest/lib1500.c"
    ],
    "message": "lib1500: remove bad check\n\nAfter curl_multi_wait() returns, this test checked that we got exactly\none file descriptor told to read from, but we cannot be sure that is\ntrue. curl_multi_wait() will sometimes return earlier without any file\ndescriptor to handle, just just because it is a suitable time to call\n*perform().\n\nThis problem showed up with commit 29bf0598.\n\nBug: http://curl.haxx.se/mail/lib-2013-06/0029.html\nReported-by: Fabian Keil",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1370550134
  },
  {
    "id": "0bf5ce77aabe7307e41db13a0d03a63517fdc366",
    "files": [
      "lib/multi.c"
    ],
    "message": "curl_multi_wait: only use internal timer if not -1\n\ncommit 29bf0598aad5 introduced a problem when the \"internal\" timeout is\nprefered to the given if shorter, as it didn't consider the case where\n-1 was returned. Now the internal timeout is only considered if not -1.\n\nReported-by: Tor Arntsen\nBug: http://curl.haxx.se/mail/lib-2013-06/0015.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1370344960
  },
  {
    "id": "29bf0598aad58d9da5dd8c5358f5175dae49026d",
    "files": [
      "lib/multi.c",
      "docs/libcurl/curl_multi_wait.3"
    ],
    "message": "curl_multi_wait: reduce timeout if the multi handle wants to\n\nIf the multi handle's pending timeout is less than what is passed into\nthis function, it will now opt to use the shorter time anyway since it\nis a very good hint that the handle wants to process something in a\nshorter time than what otherwise would happen.\n\ncurl_multi_wait.3 was updated accordingly to clarify\n\nThis is the reason for bug #1224\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1224\nReported-by: Andrii Moiseiev",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1370284028
  },
  {
    "id": "ac419bf562c4196f819edd124be82da96f81ba95",
    "files": [
      "lib/http_digest.c",
      "tests/data/Makefile.am",
      "tests/data/test1229"
    ],
    "message": "Digest auth: escape user names with \\ or \" in them\n\nWhen sending the HTTP Authorization: header for digest, the user name\nneeds to be escaped if it contains a double-quote or backslash.\n\nTest 1229 was added to verify\n\nReported and fixed by: Nach M. S\nBug: http://curl.haxx.se/bug/view.cgi?id=1230",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1369676712
  },
  {
    "id": "85b9dc80232d1d7d48ee4dea6db5a2263ee68efd",
    "files": [
      "lib/cookie.c"
    ],
    "message": "Curl_cookie_add: handle IPv6 hosts\n\n1 - don't skip host names with a colon in them in an attempt to bail out\non HTTP headers in the cookie file parser. It was only a shortcut anyway\nand trying to parse a file with HTTP headers will still be handled, only\nslightly slower.\n\n2 - don't skip domain names based on number of dots. The original\nnetscape cookie spec had this oddity mentioned and while our code\ndecreased the check to only check for two, the existing cookie spec has\nno such dot counting required.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1221\nReported-by: Stefan Neis",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1369171739
  },
  {
    "id": "04f52e9b4db01bcbf672c9c69303a4e4ad0d0fb9",
    "files": [
      "tests/data/test1228",
      "tests/data/Makefile.am",
      "tests/data/test8",
      "lib/cookie.c",
      "tests/data/test46"
    ],
    "message": "cookies: only consider full path matches\n\nI found a bug which cURL sends cookies to the path not to aim at.\nFor example:\n- cURL sends a request to http://example.fake/hoge/\n- server returns cookie which with path=/hoge;\n  the point is there is NOT the '/' end of path string.\n- cURL sends a request to http://example.fake/hogege/ with the cookie.\n\nThe reason for this old \"feature\" is because that behavior is what is\ndescribed in the original netscape cookie spec:\nhttp://curl.haxx.se/rfc/cookie_spec.html\n\nThe current cookie spec (RFC6265) clarifies the situation:\nhttp://tools.ietf.org/html/rfc6265#section-5.2.4",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1368910488
  },
  {
    "id": "01a2abedd7e3a2075de70979003302313570c58c",
    "files": [
      "lib/nss.c"
    ],
    "message": "nss: give PR_INTERVAL_NO_WAIT instead of -1 to PR_Recv/PR_Send\n\nReported by: David Strauss\nBug: http://curl.haxx.se/mail/lib-2013-05/0088.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1368091395
  },
  {
    "id": "bdb396ef2af421a50e69e9ef47cfa891fc937fcc",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "servercert: allow empty subject\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1220\nPatch by: John Gardiner Myers",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1367960521
  },
  {
    "id": "35874298e420aa53fde28982d86d5051aa92279a",
    "files": [
      "lib/urldata.h",
      "lib/curl_schannel.c"
    ],
    "message": "curl_schannel.c: Fixed invalid memory access during SSL shutdown",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1367769457
  },
  {
    "id": "99b40451836dfea2d5dce2ada4fab15b2ab5bfb2",
    "files": [
      "tests/data/test904",
      "tests/data/test901",
      "tests/data/test908",
      "tests/data/test903",
      "tests/data/test909",
      "tests/data/test1406",
      "tests/data/test905",
      "lib/smtp.c",
      "tests/data/test906",
      "tests/data/test907",
      "tests/data/test900",
      "lib/smtp.h",
      "tests/data/test902",
      "tests/data/test1320"
    ],
    "message": "smtp: Fixed sending of double CRLF caused by first in EOB\n\nIf the mail sent during the transfer contains a terminating <CRLF> then\nwe should not send the first <CRLF> of the EOB as specified in RFC-5321.\n\nAdditionally don't send the <CRLF> if there is \"no mail data\" as the\nDATA command already includes it.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1367658033
  },
  {
    "id": "1c435295b867f99dc76a095b9ca992fdd57583e8",
    "files": [
      "lib/connect.c"
    ],
    "message": "bindlocal: move brace out of #ifdef\n\nThe code within #ifdef HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID wrongly had two\nclosing braces when it should only have one, so builds without that\ndefine would fail.\n\nBug: http://curl.haxx.se/mail/lib-2013-05/0000.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1367410727
  },
  {
    "id": "b52cf5d2cd9f65e1615fcfcbd35187843ea6abc5",
    "files": [
      "RELEASE-NOTES",
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed unknown percentage complete in progress bar\n\nThe curl command line utility would display the the completed progress\nbar with a percentage of zero as the progress routines didn't know the\nsize of the transfer.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1367271266
  },
  {
    "id": "70e30f6caa5ca33fdcaa605a62b133ac1e3ad213",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Added support for disabling the SASL initial response\n\nUpdated the default behaviour of sending the client's initial response in the AUTH\ncommand to not send it and added support for CURLOPT_SASL_IR to allow the user to\nspecify including the response.\n\nRelated Bug: http://curl.haxx.se/mail/lib-2012-03/0114.html\nReported-by: Gokhan Sengun",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1367060955
  },
  {
    "id": "0523152ad6e9d558c31bf176e8103038430badb3",
    "files": [
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test712",
      "tests/data/test711"
    ],
    "message": "ftp_state_pasv_resp: connect through proxy also when set by env\n\nWhen connecting back to an FTP server after having sent PASV/EPSV,\nlibcurl sometimes didn't use the proxy properly even though the proxy\nwas used for the initial connect.\n\nThe function wrongly checked for the CURLOPT_PROXY variable to be set,\nwhich made it act wrongly if the proxy information was set with an\nenvironment variable.\n\nAdded test case 711 to verify (based on 707 which uses --socks5). Also\nadded test712 to verify another variation of setting the proxy: with\n--proxy socks5://\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1218\nReported-by: Zekun Ni",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1366987765
  },
  {
    "id": "b37b5233cab96b5b1f2ab7f6e0b9c3df77320bba",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES"
    ],
    "message": "url: initialize speed-check data for file:// protocol\n\n... in order to prevent an artificial timeout event based on stale\nspeed-check data from a previous network transfer.  This commit fixes\na regression caused by 9dd85bced56f6951107f69e581c872c1e7e3e58e.\n\nBug: https://bugzilla.redhat.com/906031",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1366983502
  },
  {
    "id": "c49ed0b6c0fad21b77fe8d17d7b5bef182c5ecdf",
    "files": [
      "lib/getinfo.c"
    ],
    "message": "getinfo.c: reset timecond when clearing session-info variables\n\nBug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=705783\nReported-by: Ludovico Cavedon <cavedon@debian.org>",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1366663412
  },
  {
    "id": "ddac43b38e3fd923b71554126652b05e034d6900",
    "files": [
      "lib/url.c"
    ],
    "message": "url: Fixed missing length check in parse_proxy()\n\nCommit 11332577b3cb removed the length check that was performed by the\nold scanf() code.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1366565373
  },
  {
    "id": "416ecc15845c4e6bf7ea6359d9c63adec3385f5b",
    "files": [
      "lib/url.c"
    ],
    "message": "url: Fixed crash when no username or password supplied for proxy\n\nFixed an issue in parse_proxy(), introduced in commit 11332577b3cb,\nwhere an empty username or password (For example: http://:@example.com)\nwould cause a crash.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1366559719
  },
  {
    "id": "fe880475ed3c7e51e32e19112252c79e921cc31b",
    "files": [
      "lib/url.c"
    ],
    "message": "url: Fixed memory leak in setstropt_userpwd()\n\nsetstropt_userpwd() was calling setstropt() in commit fddb7b44a79d to\nset each of the login details which would duplicate the strings and\nsubsequently cause a memory leak.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1366479613
  },
  {
    "id": "ca8f17a303d6acb0badd15dd030b87664d576745",
    "files": [
      "src/tool_paramhlp.c"
    ],
    "message": "tool_paramhlp: Fixed options being included in username\n\nFix to prevent the options from being displayed when curl requests the\nuser's password if the following command line is specified:\n\n--user username;options",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1366445781
  },
  {
    "id": "c5ba0c2f5446532798ff68b598326f5f994616c1",
    "files": [
      "tests/ftpserver.pl",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test1219",
      "tests/FILEFORMAT"
    ],
    "message": "FTP: handle a 230 welcome response\n\n...instead of the 220 we otherwise expect.\n\nMade the ftpserver.pl support sending a custom \"welcome\" and then\ncreated test 1219 to verify this fix with such a 230 welcome.\n\nBug: http://curl.haxx.se/mail/lib-2013-02/0102.html\nReported by: Anders Havn",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1365803977
  },
  {
    "id": "61d259f95045c2ec029d4234af80b00d91fec080",
    "files": [
      "tests/data/test106",
      "tests/data/test1225",
      "tests/data/test1226",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test1227",
      "tests/data/test1224"
    ],
    "message": "FTP: access files in root dir correctly\n\nAccessing a file with an absolute path in the root dir but with no\ndirectory specified was not handled correctly. This fix comes with four\nnew test cases that verify it.\n\nBug: http://curl.haxx.se/mail/lib-2013-04/0142.html\nReported by: Sam Deane",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1365799393
  },
  {
    "id": "2eb8dcf26cb37f09cffe26909a646e702dbcab66",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie: fix tailmatching to prevent cross-domain leakage\n\nCookies set for 'example.com' could accidentaly also be sent by libcurl\nto the 'bexample.com' (ie with a prefix to the first domain name).\n\nThis is a security vulnerabilty, CVE-2013-1944.\n\nBug: http://curl.haxx.se/docs/adv_20130412.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1365717132
  },
  {
    "id": "e0fb2d86c9f789131588a7cc93e9e881d601cecd",
    "files": [
      "lib/ftp.c"
    ],
    "message": "FTP: handle \"rubbish\" in front of directory name in 257 responses\n\nWhen doing PWD, there's a 257 response which apparently some servers\nprefix with a comment before the path instead of after it as is\notherwise the norm.\n\nFailing to parse this, several otherwise legitimate use cases break.\n\nBug: http://curl.haxx.se/mail/lib-2013-04/0113.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1365538713
  },
  {
    "id": "6b8c36954f9215b157c30681ca54f0a1235e2ed8",
    "files": [
      "lib/if2ip.c"
    ],
    "message": "if2ip.c: Fixed another warning: unused parameter 'remote_scope'",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365361490
  },
  {
    "id": "25f08de4d65a26c6aa8db5afd6e0a363060fe709",
    "files": [
      "lib/http_negotiate.c"
    ],
    "message": "http_negotiate.c: Fixed passing argument from incompatible pointer type",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365285979
  },
  {
    "id": "4e2ed01a2e7e6995ce96d93ede5f800aea8d1698",
    "files": [
      "tests/server/sockfilt.c"
    ],
    "message": "sockfilt.c: Fixed detection of client-side connection close\n\nWINSOCK only:\nSince FD_CLOSE is only signaled once, it may trigger at the same\ntime as FD_READ. Data actually being available makes it impossible\nto detect that the connection was closed by checking that recv returns\nzero. Another recv attempt could block the connection if it was\nnot closed. This workaround abuses exceptfds in conjunction with\nreadfds to signal that the connection has actually closed.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365282590
  },
  {
    "id": "ae4558dbb479f09ea01164b1a0d4ac54ec88b29c",
    "files": [
      "lib/curl_schannel.c"
    ],
    "message": "curl_schannel.c: Fixed memory leak if connection was not successful",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365274527
  },
  {
    "id": "ee7669ba3adeec052d999d9b415bb34caaa1e94b",
    "files": [
      "lib/if2ip.c"
    ],
    "message": "if2ip.c: Fixed warning: unused parameter 'remote_scope'",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365273013
  },
  {
    "id": "57aeabcc1a20ff8ed1d725ef0309d0d8f64194d8",
    "files": [
      "lib/ftp.c"
    ],
    "message": "FTP: wait on both connections during active STOR state\n\nWhen doing PORT and upload (STOR), this function needs to extract the\nfile descriptor for both connections so that it will respond immediately\nwhen the server eventually connects back.\n\nThis flaw caused active connections to become unnecessary slow but they\nwould still often work due to the normal polling on a timeout. The bug\nalso would not occur if the server connected back very fast, like when\ntesting on local networks.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1183\nReported by: Daniel Theron",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1365261698
  },
  {
    "id": "090b55c100be4364ac035b5a1b7440cf94e71904",
    "files": [
      "lib/if2ip.c",
      "lib/connect.c",
      "lib/ftp.c",
      "lib/if2ip.h"
    ],
    "message": "connect: treat an interface bindlocal() problem as a non-fatal error\n\nI am using curl_easy_setopt(CURLOPT_INTERFACE, \"if!something\") to force\ntransfers to use a particular interface but the transfer fails with\nCURLE_INTERFACE_FAILED, \"Failed binding local connection end\" if the\ninterface I specify has no IPv6 address. The cause is as follows:\n\nThe remote hostname resolves successfully and has an IPv6 address and an\nIPv4 address.\n\ncURL attempts to connect to the IPv6 address first.\n\nbindlocal (in lib/connect.c) fails because Curl_if2ip cannot find an\nIPv6 address on the interface.\n\nThis is a fatal error in singleipconnect()\n\nThis change will make cURL try the next IP address in the list.\n\nAlso included are two changes related to IPv6 address scope:\n\n- Filter the choice of address in Curl_if2ip to only consider addresses\nwith the same scope ID as the connection address (mismatched scope for\nlocal and remote address does not result in a working connection).\n\n- bindlocal was ignoring the scope ID of addresses returned by\nCurl_if2ip . Now it uses them.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1189",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1365259918
  },
  {
    "id": "a181e7b084b67112084d6cbce166a1ac1ffaecd4",
    "files": [
      "tests/server/tftpd.c"
    ],
    "message": "tftpd.c: Fixed sread timeout on Windows by setting it manually",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365251996
  },
  {
    "id": "5e722b2d09087bf85325720867f06ad33a1dc71b",
    "files": [
      "tests/server/sockfilt.c"
    ],
    "message": "sockfilt.c: Fixed handling of multiple fds being signaled",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1365161597
  },
  {
    "id": "e87e76e2dc108efb1cae87df496416f49c55fca0",
    "files": [
      "tests/libtest/lib1510.c",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.inc",
      "lib/easy.c",
      "tests/data/test1510"
    ],
    "message": "easy: Fix the broken CURLOPT_MAXCONNECTS option\n\nCopy the CURLOPT_MAXCONNECTS option to CURLMOPT_MAXCONNECTS in\ncurl_easy_perform().\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1212\nReported-by: Steven Gu",
    "committer": {
      "email": "linus@haxx.se",
      "name": "Linus Nielsen Feltzing"
    },
    "date": 1365064419
  },
  {
    "id": "43e045fc3e8430b2d2f3a1fc1354f3ecd54b09ab",
    "files": [
      "lib/connect.c"
    ],
    "message": "SO_SNDBUF: don't set SNDBUF for win32 versions vista or later\n\nThe Microsoft knowledge-base article\nhttp://support.microsoft.com/kb/823764 describes how to use SNDBUF to\novercome a performance shortcoming in winsock, but it doesn't apply to\nWindows Vista and later versions. If the described SNDBUF magic is\napplied when running on those more recent Windows versions, it seems to\ninstead have the reversed effect in many cases and thus make libcurl\nperform less good on those systems.\n\nThis fix thus adds a run-time version-check that does the SNDBUF magic\nconditionally depending if it is deemed necessary or not.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1188\nReported by: Andrew Kurushin\nTested by: Christian H\u00e4gele",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1364895065
  },
  {
    "id": "c4d7c1514f73759cfb334b099aee9bfa4288852f",
    "files": [
      "lib/connect.c"
    ],
    "message": "tcpkeepalive: support TCP_KEEPIDLE/TCP_KEEPINTVL on win32\n\nPatch by: Robert Wruck\nBug: http://curl.haxx.se/bug/view.cgi?id=1209",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1364764636
  },
  {
    "id": "ca62ac69bbda381b3ba3a7b8bca63e82e84743ab",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp_sendquote: use PPSENDF, not FTPSENDF\n\nThe last remaining code piece that still used FTPSENDF now uses PPSENDF.\nIn the problematic case, a PREQUOTE series was done on a re-used\nconnection when Curl_pp_init() hadn't been called so it had messed up\npointers. The init call is done properly from Curl_pp_sendf() so this\nchange fixes this particular crash.\n\nBug: http://curl.haxx.se/mail/lib-2013-03/0319.html\nReported by: Sam Deane",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1364588385
  },
  {
    "id": "1e29d275c643ef6aab7948f0f55a7a9397e56b42",
    "files": [
      "tests/data/test503",
      "tests/data/test275",
      "tests/server/sws.c",
      "tests/data/Makefile.am",
      "tests/data/test83",
      "tests/data/test209",
      "tests/data/test1319",
      "tests/data/test1021",
      "tests/data/test1316",
      "tests/data/test94",
      "tests/data/test95",
      "tests/data/test1509",
      "tests/data/test302",
      "tests/data/test1320",
      "tests/data/test287",
      "tests/data/test265",
      "tests/data/test1061",
      "tests/data/test1097",
      "tests/data/test80",
      "tests/libtest/lib1509.c",
      "tests/data/test217",
      "tests/libtest/Makefile.inc",
      "tests/data/test1060",
      "tests/data/test206",
      "tests/data/test213",
      "tests/data/test1059",
      "tests/data/test1078",
      "tests/data/test1008",
      "tests/FILEFORMAT",
      "tests/data/test1321"
    ],
    "message": "test1509: verify proxy header response headers count\n\nModified sws to support and use custom CONNECT responses instead of the\npreviously naive hard-coded version. Made the HTTP test server able to\nextract test case number from the host name in a CONNECT request by\nfinding the number after the last dot. It makes 'machine.moo.123' use\ntest case 123.\n\nAdapted a larger amount of tests to the new <connect> style.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1204\nReported by: Martin Jansen",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1364394646
  },
  {
    "id": "bc6037ed3ec029b9f1372f708521fcada4a74af7",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "Curl_proxyCONNECT: count received headers\n\nProxy servers tend to add their own headers at the beginning of\nresponses. The size of these headers was not taken into account by\nCURLINFO_HEADER_SIZE before this change.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1204",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1364077201
  },
  {
    "id": "d1d0ee075f3da05771399d0c05eb7ea9e01c5ec3",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "Curl_proxyCONNECT: clear 'rewindaftersend' on success\n\nAfter having done a POST over a CONNECT request, the 'rewindaftersend'\nboolean could be holding the previous value which could lead to badness.\n\nThis should be tested for in a new test case!\n\nBug: https://groups.google.com/d/msg/msysgit/B31LNftR4BI/KhRTz0iuGmUJ",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1363643620
  },
  {
    "id": "b3440f490f80b78733412d48e6c23a9cc71033ca",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed incorrect initial response generation for SASL AUTHENTICATE\n\nFixed incorrect initial response generation for the NTLM and LOGIN SASL\nauthentication mechanisms when the SASL-IR was detected.\n\nIntroduced in commit: 6da7dc026c14.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1363479642
  },
  {
    "id": "e4b733e3f1a771bd1017cdcfb355fcb9caffe646",
    "files": [
      "tests/data/test1214",
      "lib/url.c",
      "tests/data/Makefile.am",
      "tests/data/test1213",
      "tests/server/sws.c",
      "tests/FILEFORMAT"
    ],
    "message": "HTTP proxy: insert slash in URL if missing\n\ncurl has been accepting URLs using slightly wrong syntax for a long\ntime, such as when completely missing as slash \"http://example.org\" or\nmissing a slash when a query part is given\n\"http://example.org?q=foobar\".\n\ncurl would translate these into a legitimate HTTP request to servers,\nalthough as was shown in bug #1206 it was not adjusted properly in the\ncases where a HTTP proxy was used.\n\nTest 1213 and 1214 were added to the test suite to verify this fix.\n\nThe test HTTP server was adjusted to allow us to specify test number in\nthe host name only without using any slashes in a given URL.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1206\nReported by: ScottJi",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1363353496
  },
  {
    "id": "e450f66a02d8ec296755e1bfd48bb03d5fcf5d1f",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed continuous wait when using --ftp-list\n\nDon't initiate a transfer when using --ftp-list.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1363097425
  },
  {
    "id": "57ccdfa8d2bb6275388223f4676cd623ebd01697",
    "files": [
      "docs/libcurl/curl_global_init.3",
      "include/curl/curl.h",
      "lib/select.c",
      "RELEASE-NOTES",
      "lib/easy.c",
      "lib/select.h",
      "docs/libcurl/symbols-in-versions"
    ],
    "message": "curl_global_init: accept the CURL_GLOBAL_ACK_EINTR flag\n\nThe flag can be used in pycurl-based applications where using the multi\ninterface would not be acceptable because of the performance lost caused\nby implementing the select() loop in python.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1168\nDownstream Bug: https://bugzilla.redhat.com/919127",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1363082300
  },
  {
    "id": "64b2d2d77e112f1519995b54cb0806e1f2e4a9f6",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_runsingle: avoid NULL dereference\n\nWhen Curl_do() returns failure, the connection pointer could be NULL so\nthe code path following needs to that that into account.\n\nBug: http://curl.haxx.se/mail/lib-2013-03/0062.html\nReported by: Eric Hu",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1362864435
  },
  {
    "id": "1f41772bef4da112d2e3988e791cdd3920d3ae49",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed handling of untagged responses for the STORE custom command\n\nAdded an exception, for the STORE command, to the untagged response\nprocessor in imap_endofresp() as servers will back respones containing\nthe FETCH keyword instead.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362777516
  },
  {
    "id": "170ae51c474928f29eab98e5f10aef7fe8c7f32a",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed SELECT not being performed for custom requests",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362696979
  },
  {
    "id": "26eaa8383001219e7cd14a153dff95ea9274be6e",
    "files": [
      "lib/formdata.c"
    ],
    "message": "AddFormData: prevent only directories from being posted\n\nCommit f4cc54cb4746ae5a6d (shipped as part of the 7.29.0 release) was a\nbug fix that introduced a regression in that while trying to avoid\nallowing directory names, it also forbade \"special\" files like character\ndevices and more. like \"/dev/null\" as was used by Oliver who reported\nthis regression.\n\nReported by: Oliver Gond\u017ea\nBug: http://curl.haxx.se/mail/archive-2013-02/0040.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1362408730
  },
  {
    "id": "fadf33c78ac7bdfc6790350de9a0dfc8bcdb030b",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: fix infinite loop if server disconnected abruptly\n\nIf the server hung up the connection without sending a closure alert,\nthen we'd keep probing the socket for data even though it's dead. Now\nwe're ready for this situation.\n\nBug: http://curl.haxx.se/mail/lib-2013-03/0014.html\nReported by: Aki Koskinen",
    "committer": {
      "email": "nickzman@gmail.com",
      "name": "Nick Zitzmann"
    },
    "date": 1362373870
  },
  {
    "id": "b1ebf4bda110dda64b89bffcf7286dda908d3689",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed typo in variable assignment",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362316439
  },
  {
    "id": "284ea5f924f002038b0dcfd5b2ca3ff1e238a818",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed custom request handling in imap_done()\n\nFixed imap_done() so that neither the FINAL states are not entered when\na custom command has been performed.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362316236
  },
  {
    "id": "711065e4df72a3a6c8828eac30750a95d8d556d0",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed unnecessary parent structure reference\n\nUpdated pop3 code following recent imap changes.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362309024
  },
  {
    "id": "be51a4635350547e7e4d886ab3ff28cddc72a82b",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed accidentally lossing the result code\n\nAccidentally lost the result code in imap_state_capability() and\nimap_state_login() with commit b06a78622609.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362092968
  },
  {
    "id": "025ba6e9bec2d102c4abfd5a47aa9d9587e9566b",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed error code returned for invalid FETCH response\n\nIf the FETCH command does not result in an untagged response the the\nUID is probably invalid. As such do not return CURLE_OK.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1362085213
  },
  {
    "id": "e63c33d88d8c6fda91b11afe44e18fdb05b94c17",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed incorrect comparison for STARTTLS in imap_endofresp()\n\nCorrected the comparison type in addition to commit 1dac29fa83a9.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361785403
  },
  {
    "id": "8a468ef2225d77e195459e44a14d391a651ed5ae",
    "files": [
      "lib/smtp.h",
      "lib/smtp.c"
    ],
    "message": "smtp: Moved the per-request variables to the per-request data structure\n\nMoved the rcpt variable from the per-connection struct smtp_conn to the\nnew per-request struct and fixed references accordingly.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361648362
  },
  {
    "id": "29a4a16db8dbf060ef193ff9d673d69449ec079f",
    "files": [
      "lib/pop3.h",
      "lib/pop3.c"
    ],
    "message": "pop3: Moved the per-request variables to the per-request data structure\n\nMoved the mailbox and custom request variables from the per-connection\nstruct pop3_conn to the new per-request struct and fixed references\naccordingly.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361636138
  },
  {
    "id": "4cfc7f951c7cbd596849a1b942bc676132f97e15",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed escaping of mailbox names\n\nUsed imap_atom() to escape mailbox names in imap_select().",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361634153
  },
  {
    "id": "2476b34b95596ec16aab09c85133bc7eddd8ca53",
    "files": [
      "lib/imap.c",
      "lib/urldata.h",
      "lib/imap.h"
    ],
    "message": "imap: Introduced a custom IMAP structure for per-request data\n\nCreated a new IMAP structure and changed the type of the imap proto\nvariable in connectdata from FTP* to the new IMAP*.\n\nMoved the mailbox variable from the per-connection struct imap_conn to\nthe new per-request struct and fixed references accordingly.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361618822
  },
  {
    "id": "65644b833532a0cedc2c92ef1fd89c7f21a97906",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed memory leak when performing multiple selects\n\nMoved the clean-up of the mailbox variable from imap_disconnect() to\nimap_done() as this variable is allocated in the do phase, yet would\nhave only been freed only once if multiple selects where preformed\non a single connection.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361575773
  },
  {
    "id": "296b9a5af0c0de3f5b3d78a85a6ace8cdc9647f1",
    "files": [
      "lib/pingpong.c"
    ],
    "message": "Fixed checking the socket if there is data waiting in the cache\n\nUse Curl_pp_moredata() in Curl_pp_multi_statemach() to check if there is\nmore data to be received, rather than the socket state, as a task could\nhang waiting for more data from the socket itself.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361564605
  },
  {
    "id": "1dac29fa83a9ed1285faa7e06d42c7b4ffd98a62",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap.c: Fixed an incorrect variable reference\n\nFixed an incorrect variable reference which was introduced in commit\na1701eea289f as a result of a copy and paste from SMTP/POP3.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1361563122
  },
  {
    "id": "4f328b85c3c037b98bf317d4e3f702f9cb22c28e",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed a trailing whitespace\n\nRemove tailing whitespace introduced in commit 7ed689d24a4e.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360872363
  },
  {
    "id": "92a537a2bb05e719eec1db49d6822a07a0da7f08",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed blocking SSL connect when connecting via POP3S\n\nA call to Curl_ssl_connect() was accidentally left in when the SSL/TLS\nconnection layer was reworked in 7.29. Not only would this cause the\nconnection to block but had the additional overhead of calling the\nnon-blocking connect a little bit later.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360866052
  },
  {
    "id": "358c5c0745a4c47f910189095f3832163b4708c4",
    "files": [
      "lib/config-os400.h",
      "lib/config-tpf.h",
      "lib/config-symbian.h",
      "lib/socks.c",
      "configure.ac",
      "lib/if2ip.c",
      "lib/config-riscos.h",
      "lib/config-dos.h",
      "m4/curl-functions.m4",
      "lib/config-vxworks.h",
      "lib/strequal.c",
      "lib/strequal.h"
    ],
    "message": "strlcat: remove function\n\nThis function was only used twice, both in places where performance\nisn't crucial (socks + if2ip). Removing the use of this function removes\nthe need to have our private version for systems without it == reduced\namount of code.\n\nAlso, in the SOCKS case it is clearly better to fail gracefully rather\nthan to truncate the results.\n\nThis work was triggered by a bug report on the strcal prototype in\nstrequal.h.\n\nstrlcat was added in commit db70cd28 in February 2001!\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1192\nReported by: Jeremy Huddleston",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1360834905
  },
  {
    "id": "d713e9a20700a784a9f2cb7b5941a223c704e86e",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Corrected a whitespace issue from previous commit\n\nFixed a small whitespace issue that crept in there in commit\n508cdf4da4d7.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360710314
  },
  {
    "id": "e6c1e773d9e506ead2a9fd5fc0f31dceca5e2784",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "sasl: Fixed null pointer reference when decoding empty digest challenge\n\nFixed a null pointer reference when an empty challenge is passed to the\nCurl_sasl_create_digest_md5_message() function.\n\nBug: http://sourceforge.net/p/curl/bugs/1193/\nReported by: Saran Neti",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360707644
  },
  {
    "id": "5cd85db9faadc25d997f16880a1451b9d5cc28a2",
    "files": [
      "lib/url.c",
      "tests/data/Makefile.am",
      "tests/data/test1212"
    ],
    "message": "SOCKS: fix socks proxy when noproxy matched\n\nTest 1212 added to verify\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1190",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1360609852
  },
  {
    "id": "18d1ea45282508825b74ebf6704db812797e553a",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed memory leak following commit f6010d9a0359",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360528356
  },
  {
    "id": "92f7606f29b70451b2f7c5a033459b895055856c",
    "files": [
      "tests/data/test805",
      "tests/data/test806",
      "lib/smtp.c",
      "tests/data/test807"
    ],
    "message": "smtp: Fixed an issue when processing EHLO failure responses (Part 3)\n\nFollow up fix to commit 62bd21746443 to cater for servers that don't\nrespond with a 250 in their EHLO responses. Additionally updated the\nSMTP tests to respond with a 250 response code as per RFC5321.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360436475
  },
  {
    "id": "fd52530b50baf8e1d21cb081a3a4bb9f25feeec1",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed SASL authentication capability detection\n\nFixed the SASL capability detection to include the space character\nbefore the authentication mechanism list. Otherwise a capability such\nas SASLSOMETHING would be interpreted as enabling SASL and potentially\ntrying to identify SOMETHING as a mechanism.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360430222
  },
  {
    "id": "572f7864b27ba133b99e256c248dea6c93b0b7c7",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed incorrect return value from pop3_endofresp()\n\nCorrected an incorrect return value when -ERR is received from the\nserver - introduced in commit b5bb61ee697b (June 2012).",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360423410
  },
  {
    "id": "62bd21746443f631e7b47f675aa80b3f0786a805",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed an issue when processing EHLO failure responses (Part 2)\n\nFollow up fix to commit 23d17190ee32 as EHLO capabilities can exist\nwithin a positive response line.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360420340
  },
  {
    "id": "f0bfc0fbd7b06b1a54d3379b6da4f708fd0837a1",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed an issue with missing capabilities after the AUTH line\n\nFollow up to commit 40f9bb787f05 to fix missing capabilities after an\nAUTH line.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360419982
  },
  {
    "id": "23d17190ee3273b0718e0ca62f73bacf257088cf",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed an issue when processing EHLO failure responses\n\nFixed a small issue where smtp_endofresp() would look for capabilities\nin the description part of a failure response. In theory a server\nshouldn't respond with SIZE or AUTH in an EHLO command's failure\nresponse but if it did then capabilities would be unnecessarily set\nbefore eventually failing.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1360369345
  },
  {
    "id": "72688317adcedb9508fd2189e6c6d3945e06a004",
    "files": [
      "lib/url.c",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.inc",
      "tests/libtest/lib1507.c",
      "tests/data/test1507"
    ],
    "message": "DONE: consider callback-aborted transfers premature\n\nThis bug report properly identified that when doing SMTP and aborting\nthe transfer with a callback, it must be considered aborted prematurely\nby the code to avoid QUIT etc to be attempted as that would cause a\nhang.\n\nThe new test case 1507 verifies this behavior.\n\nReported by: Patricia Muscalu\nBug: http://curl.haxx.se/bug/view.cgi?id=1184",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1360328221
  },
  {
    "id": "f206d6c055d1008f0edb6d5d5920f0f300b9983a",
    "files": [
      "lib/curl_sasl.c"
    ],
    "message": "Curl_sasl_create_digest_md5_message: fix buffer overflow\n\nWhen negotiating SASL DIGEST-MD5 authentication, the function\nCurl_sasl_create_digest_md5_message() uses the data provided from the\nserver without doing the proper length checks and that data is then\nappended to a local fixed-size buffer on the stack.\n\nThis vulnerability can be exploited by someone who is in control of a\nserver that a libcurl based program is accessing with POP3, SMTP or\nIMAP. For applications that accept user provided URLs, it is also\nthinkable that a malicious user would feed an application with a URL to\na server hosting code targetting this flaw.\n\nBug: http://curl.haxx.se/docs/adv_20130206.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1360145193
  },
  {
    "id": "cb3e6dfa3511e75334f70f53370ce3f1d711c904",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "Curl_proxyCONNECT: return once CONNECT is sent\n\nBy doing this unconditionally, we infer a simpler and more defined\nbehavior. This also has the upside that test 1021 no longer fails for me\neven if I run with valgrind.\n\nAlso fixed some wrong comments.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1360101960
  },
  {
    "id": "bb7c2ee37c46e6f1d75a4c4ba5e37209e4b9bf7b",
    "files": [
      "lib/curl_schannel.c"
    ],
    "message": "schannel: Removed extended error connection setup flag\n\nAccording KB975858 this flag may cause problems on Windows 7 and\nWindows Server 2008 R2 systems. Extended error information is not\ncurrently used by libcurl and therefore not a requirement.\n\nThe flag may improve the SSL-connection shutdown in case of an\nerror. This means it might be a good improvement in the future.\n\nFixes bug/issue #1187 - thanks for the report",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1360098165
  },
  {
    "id": "163a1dca5fc708f99db9e6a67d368e29f90e345e",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: Fix bug where packets were sometimes transmitted twice\n\nThere was a bug where, if SSLWrite() returned errSSLWouldBlock but did\nsucceed in transmitting at least something, then we'd incorrectly\nresend the packet. Now we never take errSSLWouldBlock as a sign that\nnothing was transferred to/from the server.\n\nBug: http://curl.haxx.se/mail/lib-2013-01/0295.html\nReported by: Bruno de Carvalho",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1359446759
  },
  {
    "id": "5243b18f3d3a9f73d48e13b84e763bd2a151b7f3",
    "files": [
      "docs/examples/simple.c"
    ],
    "message": "Fixed simple.c to work again unchanged.\n\nAdded CURLOPT_FOLLOWLOCATION since example.com is now redirected.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1359330136
  },
  {
    "id": "0e5e720c1901b203fa6ef578ad137847796f71c8",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed unnecessary state change if starttls fails\n\nThe state machine should only be changed to SMTP_STARTTLS when the\nSTARTTLS command has been successfully sent to the server.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1359283461
  },
  {
    "id": "3dbf11d0a1f6986331d3a49a78c138f78693efa9",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed unnecessary state change if starttls fails\n\nThe state machine should only be changed to POP3_STARTTLS when the\nSTLS command has been successfully sent to the server.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1359283352
  },
  {
    "id": "499e30c4bb185b3a52414ef716543b329ba46a2e",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap.c: Fixed unnecessary state change if starttls fails\n\nThe state machine should only be changed to IMAP_STARTTLS when the\nSTARTTLS command has been successfully sent to the server.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1359283270
  },
  {
    "id": "f8ba1273af2b9760d373ed012b081fda29f6169d",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed failure detection during TLS upgrade\n\nsmtp_state_upgrade_tls() would attempt to incorrectly complete the\nupgrade to smtps and start the EHLO command if\nCurl_ssl_connect_nonblocking() returned a failure code and if ssldone\nwas set to TRUE. This would only happen when a non-blocking API hadn't\nbeen provided by the SSL implementation and curlssl_connect() was\ncalled underneath.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1359059263
  },
  {
    "id": "8b275718e225c67bf21e078775f005d56f122589",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed failure detection during TLS upgrade\n\npop3_state_upgrade_tls() would attempt to incorrectly complete the\nupgrade to pop3s and start the CAPA command if\nCurl_ssl_connect_nonblocking() returned a failure code and if ssldone\nwas set to TRUE. This would only happen when a non-blocking API hadn't\nbeen provided by the SSL implementation and curlssl_connect() was\ncalled underneath.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1359059079
  },
  {
    "id": "379d63ecc7e361fcfea5ef40881307b497e0c625",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap.c: Fixed failure detection during TLS upgrade\n\nimap_state_upgrade_tls() would attempt to incorrectly complete the\nupgrade to imaps and start the CAPABILITY command if\nCurl_ssl_connect_nonblocking() returned a failure code and if ssldone\nwas set to TRUE. This would only happen when a non-blocking API hadn't\nbeen provided by the SSL implementation and curlssl_connect() was\ncalled underneath.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1359058940
  },
  {
    "id": "2698520aef593cbd746a64f79021a4c8d7c83d65",
    "files": [
      "lib/formdata.c",
      "docs/curl.1",
      "tests/data/Makefile.am",
      "tests/data/test39",
      "src/tool_formparse.c",
      "tests/data/test1133",
      "tests/getpart.pm"
    ],
    "message": "formpost: support quotes, commas and semicolon in file names\n\n- document the double-quote and backslash need be escaped if quoting.\n- libcurl formdata escape double-quote in filename by backslash.\n- curl formparse can parse filename both contains '\"' and ',' or ';'.\n- curl now can uploading file with ',' or ';' in filename.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1171",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1358865809
  },
  {
    "id": "f4cc54cb4746ae5a6d63438aae811f6543b13774",
    "files": [
      "lib/formdata.c"
    ],
    "message": "formadd: reject trying to read a directory where a file is expected\n\nBug: http://curl.haxx.se/mail/archive-2013-01/0017.html\nReported by: Ulrich Doehner",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1358633292
  },
  {
    "id": "7b5be79908ee5171553ffb37813eb75e9be91a53",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed a problem with pop3s connections not connecting properly\n\nFixed an issue where Curl_ssl_connect_nonblocking() wouldn't complete\ncorrectly and the ssldone flag wouldn't be set to true for pop3s based\nconnections.\n\nBug introduced in commit: 4ffb8a6398ed.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1358546119
  },
  {
    "id": "9fd88abb7032346e88636165e688232e36f5c336",
    "files": [
      "lib/url.c"
    ],
    "message": "url.c: fix HTTP CONNECT tunnel establishment upon delayed response\n\nFixes initial proxy response being processed by the tunneled protocol\nhandler instead of the HTTP wrapper handler. This issue would trigger\nupon delayed CONNECT response from the proxy.\n\nAdditionally fixes a multi interface code-path in which connections\nwould not time out properly.\n\nThis does not fix known bug #39.\n\nURL: http://curl.haxx.se/mail/lib-2013-01/0191.html",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1358438839
  },
  {
    "id": "b36f1d26f830453ebaa17238f9bd1e396f618720",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c"
    ],
    "message": "nss: clear session cache if a client cert from file is used\n\nThis commit fixes a regression introduced in 052a08ff.\n\nNSS caches certs/keys returned by the SSL_GetClientAuthDataHook callback\nand if we connect second time to the same server, the cached cert/key\npair is used.  If we use multiple client certificates for different\npaths on the same server, we need to clear the session cache to force\nNSS to call the hook again.  The commit 052a08ff prevented the session\ncache from being cleared if a client certificate from file was used.\n\nThe condition is now fixed to cover both cases: consssl->client_nickname\nis not NULL if a client certificate from the NSS database is used and\nconnssl->obj_clicert is not NULL if a client certificate from file is\nused.\n\nReview by: Kai Engert",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1357898351
  },
  {
    "id": "e2bcd2ab9e5ad894a57756fa660d2a07b69171f4",
    "files": [
      "src/tool_main.c"
    ],
    "message": "curl: ignore SIGPIPE\n\nThis is a work-around for bug #1180 which is really libcurl's inability\nto ignore SIGPIPE in a few cases. With this work-around at least curl\nwon't suffer from it!\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1180\nReported by: Llu\u00eds Batlle i Rossell",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1357683241
  },
  {
    "id": "561b551deb4254b27250ee6dd2be40b35502a7ae",
    "files": [
      "tests/server/sockfilt.c"
    ],
    "message": "tests/server/sockfilt.c: Fixed integer comparison warning",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1357541274
  },
  {
    "id": "494b8664dabf5abd0d1f0eb3995e92736f351dee",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed default authentication detection\n\nFixed an issue where a server may positively respond to the CAPA command\nbut not list clear text as a valid authentication type.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1357513589
  },
  {
    "id": "11f55a9672d3b5d3eaa5d15d5a67618fb640c153",
    "files": [
      "tests/server/sockfilt.c"
    ],
    "message": "tests/server/sockfilt.c: Fixed support for listening sockets\n\nThis commit fixes support for sockets that are ready to accept\na new connection and have previously been put into listening mode.\n\nIt also includes changes which are the result of investigation\nregarding Windows STDIN. These changes are the preparation for further\nimprovements regarding support for reading data from STDIN on Windows.\n\nOpen issue: WaitForMultipleObjectsEx does not support PIPE handles\nwhich are returned by GetStdHandle while running without a GUI.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1357507842
  },
  {
    "id": "488245f99c541258ca4b35209e17da69e52e4460",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap.c: Fixed bad state error when logging in with invalid credentials\n\nFixed a problem with the state machine when attempting to log in with\ninvalid credentials. The server would report login failure but libcurl\nwould not read the response due to inappropriate IMAP_STOP states being\nset after the login was sent.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1356808990
  },
  {
    "id": "709b3506cd9b1efae7d16fe2ae6c03b887536593",
    "files": [
      "lib/imap.c"
    ],
    "message": "imsp.c: Fixed usernames and passwords that contain escape characters\n\nFixed a problem with sending usernames and passwords that contain\nbackslash, quotation mark and space characters.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1356706170
  },
  {
    "id": "e3ed2b82e6fdc645af630a1f6a72f7d59de013d1",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: Fixed inability to disable peer verification\n\n... on Snow Leopard and Lion\n\nSnow Leopard introduced the SSLSetSessionOption() function, but it\ndoesn't disable peer verification as expected on Snow Leopard or\nLion (it works as expected in Mountain Lion). So we now use sysctl()\nto detect whether or not the user is using Snow Leopard or Lion,\nand if that's the case, then we now use the deprecated\nSSLSetEnableCertVerify() function instead to disable peer verification.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1356631765
  },
  {
    "id": "c30c557e4d2089953339fc669474091bdd505651",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SCP: relative path didn't work\n\nWhen prefixing a path with /~/ it is supposed to be used relative to the\nuser's home directory but it didn't work. Now we cut off the entire\nthree byte sequenct \"/~/\" which seems to be how OpenSSH does it.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=1173\nReported by: Balaji Parasuram",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1356097314
  },
  {
    "id": "32be348af26352bec0051adcc2f1a718361d9214",
    "files": [
      "RELEASE-NOTES",
      "tests/libtest/libntlmconnect.c"
    ],
    "message": "test2032: spurious failure caused by premature termination\n\nBug: http://curl.haxx.se/mail/lib-2012-11/0095.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1353328570
  },
  {
    "id": "409f2a041f752ef635354e1dc7b2759fcd7088d6",
    "files": [
      "tests/libtest/lib1502.c",
      "lib/hostip.c",
      "tests/data/test1502",
      "tests/libtest/Makefile.inc",
      "tests/data/Makefile.am",
      "lib/multi.c",
      "lib/hostip.h"
    ],
    "message": "fixed memory leak: CURLOPT_RESOLVE with multi interface\n\nDNS cache entries populated with CURLOPT_RESOLVE were not properly freed\nagain when done using the multi interface.\n\nTest case 1502 added to verify.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3575448\nReported by: Alex Gruz",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1353253171
  },
  {
    "id": "db4215f14a9ee2aca01315fa8cf100915284b15d",
    "files": [
      "lib/tftp.c"
    ],
    "message": "tftp_rx: code style cleanup\n\nFixed checksrc warnings",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1353099617
  },
  {
    "id": "076e1fa3486225aaec50e091784cd2f74cbcff5d",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp: EPSV-disable fix over SOCKS\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3586338",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1352757627
  },
  {
    "id": "49c37e6c1c11962102edb44ef36bce4b1b21af53",
    "files": [
      "RELEASE-NOTES",
      "src/tool_metalink.c"
    ],
    "message": "tool_metalink: allow to use hash algorithms provided by NSS\n\nFixes bug #3578163:\nhttp://sourceforge.net/tracker/?func=detail&atid=100976&aid=3578163&group_id=976",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1352454174
  },
  {
    "id": "1394cad30fcac7eb21adb9158dfcfab10e9f53d4",
    "files": [
      "lib/polarssl.c",
      "lib/hostcheck.c",
      "lib/hostcheck.h",
      "lib/axtls.c",
      "lib/curl_darwinssl.c",
      "lib/ssluse.c",
      "lib/cyassl.c",
      "lib/Makefile.inc",
      "lib/curl_schannel.c"
    ],
    "message": "SSL: Several SSL-backend related fixes\n\naxTLS:\n\nThis will make the axTLS backend perform the RFC2818 checks, honoring\nthe VERIFYHOST setting similar to the OpenSSL backend.\n\nGeneric for OpenSSL and axTLS:\n\nMove the hostcheck and cert_hostcheck functions from the lib/ssluse.c\nfiles to make them genericly available for both the OpenSSL, axTLS and\nother SSL backends. They are now in the new lib/hostcheck.c file.\n\nCyaSSL:\n\nCyaSSL now also has the RFC2818 checks enabled by default. There is a\nlimitation that the verifyhost can not be enabled exclusively on the\nSubject CN field comparison. This SSL backend will thus behave like the\nNSS and the GnuTLS (meaning: RFC2818 ok, or bust). In other words:\nsetting verifyhost to 0 or 1 will disable the Subject Alt Names checks\ntoo.\n\nSchannel:\n\nUpdated the schannel information messages: Split the IP address usage\nmessage from the verifyhost setting and changed the message about\ndisabling SNI (Server Name Indication, used in HTTP virtual hosting)\ninto a message stating that the Subject Alternative Names checks are\nbeing disabled when verifyhost is set to 0 or 1. As a side effect of\nswitching off the RFC2818 related servername checks with\nSCH_CRED_NO_SERVERNAME_CHECK\n(http://msdn.microsoft.com/en-us/library/aa923430.aspx) the SNI feature\nis being disabled. This effect is not documented in MSDN, but Wireshark\noutput clearly shows the effect (details on the libcurl maillist).\n\nPolarSSL:\n\nFix the prototype change in PolarSSL of ssl_set_session() and the move\nof the peer_cert from the ssl_context to the ssl_session. Found this\nchange in the PolarSSL SVN between r1316 and r1317 where the\nPOLARSSL_VERSION_NUMBER was at 0x01010100. But to accommodate the Ubuntu\nPolarSSL version 1.1.4 the check is to discriminate between lower then\nPolarSSL version 1.2.0 and 1.2.0 and higher. Note: The PolarSSL SVN\ntrunk jumped from version 1.1.1 to 1.2.0.\n\nGeneric:\n\nAll the SSL backends are fixed and checked to work with the\nssl.verifyhost as a boolean, which is an internal API change.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1352409792
  },
  {
    "id": "487538e87a3d5e1ac5874d4522a5636713054132",
    "files": [
      "lib/http.c"
    ],
    "message": "http_perhapsrewind: consider NTLM over proxy too\n\nThe logic previously checked for a started NTLM negotiation only for\nhost and not also with proxy, leading to problems doing POSTs over a\nproxy NTLM that are larger than 2000 bytes. Now it includes proxy in the\ncheck.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3582321\nReported by: John Suprock",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1352326109
  },
  {
    "id": "473003fbdffc4a36e69d396e5164308e3800011d",
    "files": [
      "lib/url.c",
      "tests/data/test5"
    ],
    "message": "URL parser: cut off '#' fragments from URLs (better)\n\nThe existing logic only cut off the fragment from the separate 'path'\nbuffer which is used when sending HTTP to hosts. The buffer that held\nthe full URL used for proxies were not dealt with. It is now.\n\nTest case 5 was updated to use a fragment on a URL over a proxy.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3579813",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1352240277
  },
  {
    "id": "3f203037021d2f656249565e81cf0f4aa93060e9",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "OpenSSL/servercert: use correct buffer size, not size of pointer\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3579286",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1352238922
  },
  {
    "id": "b2954e66e87be7414a4508f8167ca531e653bea8",
    "files": [
      "lib/pingpong.c",
      "tests/libtest/lib1501.c",
      "tests/data/test592",
      "tests/libtest/.gitignore",
      "tests/data/test591",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test1501",
      "tests/libtest/Makefile.inc"
    ],
    "message": "FTP: prevent the multi interface from blocking\n\nAs pointed out in Bug report #3579064, curl_multi_perform() would\nwrongly use a blocking mechanism internally for some commands which\ncould lead to for example a very long block if the LIST response never\nshowed.\n\nThe solution was to make sure to properly continue to use the multi\ninterface non-blocking state machine.\n\nThe new test 1501 verifies the fix.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3579064\nReported by: Guido Berhoerster",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1352052339
  },
  {
    "id": "af121ccad8190a47a2a62594bfc01c039b68ca44",
    "files": [
      "docs/examples/evhiperfifo.c"
    ],
    "message": "evhiperfifo: fix the pointer passed to WRITEDATA\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3582407\nReported by: Oscar Norlander",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1351776058
  },
  {
    "id": "74fe1b95fb44053fdbef4b1eb9f550a3da332eda",
    "files": [
      "lib/url.c"
    ],
    "message": "tlsauthtype: deal with the string case insensitively\n\nWhen given a string as 'srp' it didn't work, but required 'SRP'.\nStarting now, the check disregards casing.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3578418\nReported by: Jeff Connelly",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1351026778
  },
  {
    "id": "d1c769877a3eab3c88b5f3f55501d3c505e247c8",
    "files": [
      "lib/asyn-ares.c"
    ],
    "message": "asyn-ares: restore working with c-ares < 1.6.1\n\nBack in those days the public ares.h header didn't include the\nares_version.h header so it needs to be included here.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3577710",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1351026398
  },
  {
    "id": "f1d2e1850819f54d1c950989614da7445bdd457f",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: un-broke iOS build, fix error on server disconnect\n\nThe iOS build was broken by a reference to a function that only existed\nunder OS X; fixed. Also fixed a hard-to-reproduce problem where, if the\nserver disconnected before libcurl got the chance to hang up first and\nSecureTransport was in use, then we'd raise an error instead of failing\ngracefully.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1350410103
  },
  {
    "id": "1a02e84589efb3f8717d50bdc78d3f369b799198",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gnutls: put reset code into else block\n\nBug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=690551",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1350339524
  },
  {
    "id": "8373ca3641ce793a868377600fb5fd7b8e8bf95a",
    "files": [
      "lib/multi.c",
      "docs/libcurl/curl_multi_wait.3"
    ],
    "message": "curl_multi_wait: no wait if no descriptors to wait for\n\nThis is a minor change in behavior after having been pointed out by Mark\nTully and discussed on the list. Initially this case would internally\ncall poll() with no sockets and a timeout which would equal a sleep for\nthat specified time.\n\nBug: http://curl.haxx.se/mail/lib-2012-10/0076.html\nReported by: Mark Tully",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1349813989
  },
  {
    "id": "a5b6f91e8d631c5750b1b883dd812576fd930c3c",
    "files": [
      "lib/curl_schannel.c"
    ],
    "message": "curl_schannel.c: Fixed caching more data than required\n\nDo not fill the decrypted data buffer with more data unless\nrequired in order to return the requested amount of data.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1349531234
  },
  {
    "id": "971f5bcedd41889dc9652aa0c583477c0b1d49c9",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_runsingle: CURLOPT_LOW_SPEED_* fix for rate limitation\n\nDuring the periods of rate limitation, the speedcheck function wasn't\ncalled and thus the values weren't updated accordingly and it would then\neasily trigger wrongly once data got transferred again.\n\nAlso, the progress callback's return code was not acknowledged in this\nstate so it could make an \"abort\" return code to get ignored and not\nhave the documented effect of aborting an ongoing transfer.\n\nBug: http://curl.haxx.se/mail/lib-2012-09/0081.html\nReported by: Jie He",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1349129780
  },
  {
    "id": "628c4e7af1a28ea2d8463a29d59a58d30eb1f710",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Curl_reconnect_request: clear pointer on failure\n\nThe Curl_reconnect_request() function could end up returning a pointer\nto a free()d struct when Curl_done() failed inside. Clearing the pointer\nunconditionally after Curl_done() avoids this risk.\n\nReported by: Ho-chi Chen\nBug: http://curl.haxx.se/mail/lib-2012-09/0188.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1348833461
  },
  {
    "id": "9b25b00fa3c0d57c9356fbdcec9883a3cdd16c93",
    "files": [
      "lib/socks.c"
    ],
    "message": "socks.c: Fixed warning: conversion to 'int' from 'long unsigned int'",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347631279
  },
  {
    "id": "1ab6c353635760e8e25bacc13ae0cab2f97f7338",
    "files": [
      "lib/ssh.c"
    ],
    "message": "ssh.c: Fixed warning: implicit conversion from enumeration type",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347626935
  },
  {
    "id": "8a2be299f4c91a87014b35bcf6b75f91ab477262",
    "files": [
      "lib/nwos.c",
      "lib/nwlib.c",
      "lib/socks.c"
    ],
    "message": "checksrc: Fixed line length and comment indentation",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347576256
  },
  {
    "id": "775cc1be66b7dd7994480bcb6d6a0fbf43620a96",
    "files": [
      "lib/url.c"
    ],
    "message": "parse_proxy: treat \"socks://x\" as a socks4 proxy\n\nSelected socks proxy in Google's Chrome browser. Resulting in the\nfollowing environment variables:\n\nNO_PROXY=localhost,127.0.0.0/8\nALL_PROXY=socks://localhost:1080/\nall_proxy=socks://localhost:1080/\nno_proxy=localhost,127.0.0.0/8\n\n... and libcurl didn't treat 'socks://' as socks but instead picked HTTP\nproxy.\n\nReported by: Scott Bailey\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3566860",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1347569858
  },
  {
    "id": "c8846c09079a564ed1f24714acbf52b398b9cce1",
    "files": [
      "tests/libtest/libntlmconnect.c"
    ],
    "message": "libntlmconnect.c: Fixed typo and conversion",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347361088
  },
  {
    "id": "f9da9a0edbb982a125f050fb47f21880bc6cec6b",
    "files": [
      "tests/libtest/libntlmconnect.c"
    ],
    "message": "libntlmconnect.c: Fixed warning: curl_easy_getinfo expects long pointer\n\nFixed tests/libtest/libntlmconnect.c:52: warning: call to\n'_curl_easy_getinfo_err_long' declared with attribute warning:\ncurl_easy_getinfo expects a pointer to long for this info",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347358745
  },
  {
    "id": "6372144be0aef3bb8aac5561941d986e1129f5ee",
    "files": [
      "tests/server/sws.c"
    ],
    "message": "sws.c: Fixed warning: 'err' may be used uninitialized in this function",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347356907
  },
  {
    "id": "ef753b710b95f1f94a7c55f5d481615e30879aa6",
    "files": [
      "tests/libtest/libntlmconnect.c"
    ],
    "message": "libntlmconnect.c: Fixed warning: comparison of signed/unsigned integer\n\nWindows does not use -1 to represent invalid sockets and the\nSOCKET type is unsigned.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347354129
  },
  {
    "id": "e6ba0487013085afc5bc1ca7d7c8a15a13367ba6",
    "files": [
      "lib/nss.c"
    ],
    "message": "nss.c: Fixed warning: 'err' may be used uninitialized in this function",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347349763
  },
  {
    "id": "71813f5e46d99ec19685a7359a40bbc3076b16c2",
    "files": [
      "src/tool_metalink.c"
    ],
    "message": "tool_metalink.c: Fixed error: 'O_BINARY' undeclared\n\nCheck for O_BINARY which is not available on every system.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347344443
  },
  {
    "id": "a6df3550cf5e28eba08a449fb820469ed316389e",
    "files": [
      "src/tool_metalink.c"
    ],
    "message": "tool_metalink.c: Fixed validation of binary files containing EOF\n\nSince Windows/MinGW threat 0x1A as the EOF character, reading binary\nfiles which contain that byte does not work using text mode.\nThe read function will only read until the first 0x1A byte. This\nmeans that the hash is not computed from the whole file and the\nfinal validation check using hash comparision fails.",
    "committer": {
      "email": "info@marc-hoersken.de",
      "name": "Marc Hoersken"
    },
    "date": 1347320578
  },
  {
    "id": "badb81769a32c263e4a1d4d161688bb67fbf940d",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: fixed for older Mac OS X versions\n\nSSL didn't work on older cats if built on a newer cat with weak-linking\nturned on to support the older cat",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1347136514
  },
  {
    "id": "2e7d2c8f7497d8eca30be1b98c9d0c80ef26e55f",
    "files": [
      "lib/socks_sspi.c",
      "lib/socks.c"
    ],
    "message": "SOCKS: truly disable it if CURL_DISABLE_PROXY is defined\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3561305\n\nPatch by: Marcel Raad",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1346957490
  },
  {
    "id": "ee3551e45e60856eb0b779aa6cd34d77f16208a5",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gnutls: do not fail on non-fatal handshake errors\n\nBug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=685402",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1346789518
  },
  {
    "id": "0a0f3c63a624b719f97147fcc2ff28a9ed643a45",
    "files": [
      "lib/smtp.h",
      "lib/smtp.c"
    ],
    "message": "SMTP: only send SIZE if supported\n\nSMTP client will send SIZE parameter in MAIL FROM command only if server\nsupports it. Without this patch server might say \"504 Command parameter\nnot implemented\" and reject the message.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3564114",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1346770481
  },
  {
    "id": "2f6e1a8cc3f4573b29d48b7bd8177dbbc4c337fd",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: Bugfix for previous commit for older cats\n\nI accidentally broke functionality for versions of OS X prior to Mountain\nLion in the previous commit. This commit fixes the problems.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1346523845
  },
  {
    "id": "7735141e73a56810daf4b0727fb932f69386ce45",
    "files": [
      "tests/data/test2032",
      "tests/libtest/libntlmconnect.c",
      "docs/KNOWN_BUGS"
    ],
    "message": "test2032: bail out after last transfer\n\nThe test would hang and get aborted with a \"ABORTING TEST, since it\nseems that it would have run forever.\" until I prevented that from\nhappening.\n\nI also fixed the data file which got broken CRLF line endings when I\nsucked down the path from Joe's repo == my fault.\n\nRemoved #37 from KNOWN_BUGS as this fix and test case verifies exactly\nthis.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1346448220
  },
  {
    "id": "a90492a08314f5148069fa14132d7dc8ca54c395",
    "files": [
      "docs/examples/https.c"
    ],
    "message": "https.c example: spell check used define\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3559845\nReported by: Olivier Berger",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1345581047
  },
  {
    "id": "d792e75f2c14757cfac9bba6690b5917873201a6",
    "files": [
      "lib/curl_darwinssl.c"
    ],
    "message": "darwinssl: add TLS 1.1 and 1.2 support, replace deprecated functions\n\nIn Mountain Lion, Apple added TLS 1.1 and 1.2, and deprecated a number\nof SecureTransport functions, some of which we were using. We now check\nto see if the replacement functions are present, and if so, we use them\ninstead.  The old functions are still present for users of older\ncats. Also fixed a build warning that started to appear under Mountain\nLion",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1345315005
  },
  {
    "id": "82b0aebef36953604aa41b13669d48b2dc8983b8",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp: active conn, place calling sockopt callback at the end of function\n\nCommit b91d29a28e170c16d65d956db79f2cd3a82372d2 introduces a bug and breaks Curl_closesocket function. sock_accepted flag for the second socket should be tagged as TRUE before the sockopt callback is called because in case the callback returns an error, Curl_closesocket function is going to call the - fclosesocket - callback for the accept()ed socket",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1345152012
  },
  {
    "id": "f208bf5a2d622ae525690dfba2ab58abd8d72264",
    "files": [
      "lib/nss.c",
      "docs/libcurl/curl_easy_setopt.3",
      "docs/curl.1"
    ],
    "message": "docs: update the links to cipher-suites supported by NSS\n\n... and make the list of cipher-suites in nss.c readable by humans.\n\nBug: http://curl.haxx.se/mail/archive-2012-08/0016.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1344522293
  },
  {
    "id": "31f39120b7803888ac5b5ed4113d112046166fb9",
    "files": [
      "lib/version.c"
    ],
    "message": "curl_version: fixed Value stored to 'len' is never read\n\nFixed this (harmless) clang-analyzer warning. Also fixed the source\nindentation level.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344430689
  },
  {
    "id": "bf6dc61967c044e2d4fb695f651a8c728c421cb6",
    "files": [
      "lib/url.c",
      "tests/data/test1011"
    ],
    "message": "verbose messages: fixed output of hostnames in re-used connections\n\nI suspect this is a regression introduced in commit 207cf150, included\nsince 7.24.0.\n\nAvoid showing '(nil)' as hostname in verbose output by making sure the\nhostname fixup function is called early enough to set the pointers that\nare used for this. The name data is set again for each request even for\nre-used connections to handle multiple hostnames over the same\nconnection (like with proxy) or that the casing etc of the host name is\nchanged between requests (which has proven to be important at least once\nin the past).\n\nTest1011 was modified to use a redirect with a re-used a connection\nsince it then showed the bug and now lo longer does. There's currently\nno easy way to have the test suite detect 'nil' texts in verbose ouputs\nso no tests will detect if this problem gets reintroduced.\n\nBug: http://curl.haxx.se/mail/lib-2012-07/0111.html\nReported by: Gisle Vanem",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344427076
  },
  {
    "id": "f0d611df9e5f606cd402a2de84f1cdd69ebc5864",
    "files": [
      "lib/transfer.c"
    ],
    "message": "retry request: only access the HTTP data if in fact HTTP\n\nWhen figuring out if the data stream needs to be rewound when the\nrequest is to be resent, we must not access the HTTP struct unless the\nprotocol used is indeed HTTP...\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3544688",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344344119
  },
  {
    "id": "73b1a965f76d0b3e03e078604fe1824875ce15c0",
    "files": [
      "src/tool_urlglob.c",
      "src/tool_urlglob.h"
    ],
    "message": "globbing: fix segfault when >9 globs were used\n\nStupid lack of range checks caused the code to overwrite local variables\nafter glob number nine. Added checks now.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3546353",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344339959
  },
  {
    "id": "42e4c34ff37c259ff26e78aab22c0bccf06d1bcb",
    "files": [
      "tests/data/DISABLED",
      "tests/server/sws.c"
    ],
    "message": "sws: close sockets properly\n\nFix a bug where closed sockets (fd -1) were left in the all_sockets\nlist, because of missing parens in a pointer arithmetic expression\n\nReenable the tests that were locking up due to this bug.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344292101
  },
  {
    "id": "9f304291bd72aae66944cd7523707e1b88c6ad7b",
    "files": [
      "src/tool_metalink.c"
    ],
    "message": "metalink: change code order to build with gnutls-nettle\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3554668\nReported by: Anthony G. Basile",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344285553
  },
  {
    "id": "986c7949c0638bebb99bd08d63216433254c2185",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gtls: fix build failure by including nettle-specific headers\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3554668\nReported by: Anthony G. Basile",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1344258265
  },
  {
    "id": "1f8518c5d9aaa369dae85620973f9b5c1add3277",
    "files": [
      "lib/file.c"
    ],
    "message": "file: use fdopen() for uploaded files if available\n\nIt eliminates noisy events when using inotify and fixes a TOCTOU issue.\n\nBug: https://bugzilla.redhat.com/844385",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1343653478
  },
  {
    "id": "f92779198d07abb18e8a5c4dd3a2e1b7c4c8726a",
    "files": [
      "lib/urldata.h",
      "lib/curl_darwinssl.c",
      "lib/http.c"
    ],
    "message": "darwinssl: fixed freeze involving the multi interface\n\nPreviously the curl_multi interface would freeze if darwinssl was\nenabled and at least one of the handles tried to connect to a Web site\nusing HTTPS. Removed the \"wouldblock\" state darwinssl was using because\nI figured out a solution for our \"would block but in which direction?\"\ndilemma.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1343251331
  },
  {
    "id": "c0f8340c7c5ead51ffc6c6297d465221181de4bd",
    "files": [
      "lib/connect.c"
    ],
    "message": "keepalive: multiply value for OS-specific units\n\nDragonFly uses milliseconds, while our API and Linux use full seconds.\n\nReported by: John Marino\nBug: http://curl.haxx.se/bug/view.cgi?id=3546257",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1342989762
  },
  {
    "id": "d317ca50ae7d8bb250431f86709e53b94f7f6ddf",
    "files": [
      "RELEASE-NOTES",
      "tests/data/test24",
      "lib/http.c"
    ],
    "message": "http: print reason phrase from HTTP status line on error\n\nBug: https://bugzilla.redhat.com/676596",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1342915963
  },
  {
    "id": "85ce195f75e16d59840e3de74bc5b2846630cabd",
    "files": [
      "lib/http.c"
    ],
    "message": "HEAD: don't force-close after response-headers\n\nA HEAD response has no body length and gets the headers like the\ncorresponding GET would so it should not get closed after the response\nbased on the same rules. This mistake caused connections that did HEAD\nto get closed too often without a valid reason.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3542731\nReported by: Eelco Dolstra",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1342044517
  },
  {
    "id": "f2b6ebed7bfcfcbe65bcadbce1c5ae7e6134c11e",
    "files": [
      "src/tool_helpers.c",
      "src/tool_getparam.h",
      "src/tool_paramhlp.c",
      "src/tool_getparam.c",
      "src/tool_paramhlp.h"
    ],
    "message": "cmdline: parse numerical options stricter\n\n1 - str2offset() no longer accepts negative numbers since offsets are by\nnature positive.\n\n2 - introduced str2unum() for the command line parser that accepts\nnumericals which are not supposed to be negative, so that it will\nproperly complain on apparent bad uses and mistakes.\n\nBug: http://curl.haxx.se/mail/archive-2012-07/0013.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1341954690
  },
  {
    "id": "904346bf88d7970b941b80a5438934da333570dd",
    "files": [
      "lib/cookie.c"
    ],
    "message": "cookie: fixed typo in comment",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1341840334
  },
  {
    "id": "ed7bfeee7aac5ffb8edc074fc704ce888f12ad0f",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "http-proxy: keep CONNECT connections alive (for NTLM)\n\nWhen doing CONNECT requests, libcurl must make sure the connection is\nalive as much as possible. NTLM requires it and it is generally good for\nother cases as well.\n\nNTLM over CONNECT requests has been broken since this regression I\nintroduced in my CONNECT cleanup commits that started with 41b02378342,\nincluded since 7.25.0.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3538625\nReported by: Marcel Raad",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1341480263
  },
  {
    "id": "dd302206ad3dc98c9dca74086850cc560739f188",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "unicode NTLM SSPI: heap corruption fixed\n\nWhen compiling libcurl with UNICODE defined and using unicode characters\nin username.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1341262794
  },
  {
    "id": "c0f2bfb2c763fdbaa1fd012033fe14b0e3c467b1",
    "files": [
      "lib/nss.c"
    ],
    "message": "nss.c: Fixed size_t conversion warnings",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1340895137
  },
  {
    "id": "3a4b28d473e7c02fe8d2e30c25861eea2d8d0d22",
    "files": [
      "lib/curl_darwinssl.h",
      "lib/sslgen.c",
      "lib/urldata.h",
      "lib/curl_darwinssl.c"
    ],
    "message": "DarwinSSL: several adjustments\n\n- Renamed st_ function prefix to darwinssl_\n- Renamed Curl_st_ function prefix to Curl_darwinssl_\n- Moved the duplicated ssl_connect_done out of the #ifdef in lib/urldata.h\n- Fixed a teensy little bug that made non-blocking connection attempts block\n- Made it so that it builds cleanly against the iOS 5.1 SDK",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1340739588
  },
  {
    "id": "a28cda3653e72a4c6bd02ce50d0336943fcf3a14",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Corrected result code for MAIL, RCPT and DATA commands\n\nBug: http://curl.haxx.se/mail/lib-2012-06/0094.html\nReported by: Dan",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1340574017
  },
  {
    "id": "aefb9196cfb60c534ce1ce31db38940f3bf4df83",
    "files": [
      "src/tool_operate.c",
      "src/tool_metalink.c"
    ],
    "message": "curl: Prefixed all Metalink related messages with \"Metalink: \"",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1340292894
  },
  {
    "id": "72a5813192a84a507d8810a142774df4c9116ba8",
    "files": [
      "lib/curl_schannel.c"
    ],
    "message": "schannel SSL: changes in schannel_connect_step2\n\nProcess extra data buffer before returning from schannel_connect_step2.\nWithout this change I've seen WinCE hang when schannel_connect_step2\nreturns and calls Curl_socket_ready.\n\nIf the encrypted handshake does not fit in the intial buffer (seen with\nlarge certificate chain), increasing the encrypted data buffer is necessary.\n\nFixed warning in curl_schannel.c line 1215.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1340146263
  },
  {
    "id": "6085ca2aeddb38e4d5f24c47bd98111b236cf384",
    "files": [
      "lib/formdata.c",
      "lib/polarssl.c",
      "lib/ssluse.c",
      "lib/socks_gssapi.c",
      "lib/http.c",
      "lib/socks_sspi.c",
      "lib/cyassl.c",
      "lib/gtls.c",
      "lib/ssh.c",
      "lib/curl_schannel.c"
    ],
    "message": "Fix bad failf() and info() usage\n\nCalls to failf() are not supposed to provide trailing newline.\nCalls to infof() must provide trailing newline.\n\nFixed 30 or so strings.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1339673525
  },
  {
    "id": "61d152384e71a152dfbcfb7c18bb5fed753c7435",
    "files": [
      "lib/curl_sspi.c"
    ],
    "message": "sspi: Fixed incompatible parameter pointer type in Curl_sspi_version",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339434037
  },
  {
    "id": "78729e76da07c7eda05e63469faaaff7eb6ab80d",
    "files": [
      "lib/curl_schannel.c"
    ],
    "message": "schannel: Fixed critical typo in conditions and added buffer length checks",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339434034
  },
  {
    "id": "15ca80c8312f91b992f3b206363a335fe4d55f3d",
    "files": [
      "lib/curl_schannel.c"
    ],
    "message": "schannel: Added special shutdown check for Windows 2000 Professional\n\nWindows 2000 Professional:  Schannel returns SEC_E_OK instead\nof SEC_I_CONTEXT_EXPIRED. If the length of the output buffer\nis zero and the first byte of the encrypted packet is 0x15,\nthe application can safely assume that the message was a\nclose_notify message and change the return value to\nSEC_I_CONTEXT_EXPIRED.\n\nConnection shutdown does not mean that there is no data to read\nCorrectly handle incomplete message and ask curl to re-read\nFixed buffer for decrypted being to small\nRe-structured read condition to be more effective\nRemoved obsolete verbose messages\nChanged memory reduction method to keep a minimum buffer of size 4096",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339434034
  },
  {
    "id": "9c94236e6cc078a0dc5a78b6e2fefc1403e5375e",
    "files": [
      "lib/connect.c",
      "lib/ftp.c"
    ],
    "message": "connect.c/ftp.c: Fixed dereferencing pointer breakin strict-aliasing\n\nFixed warning: dereferencing pointer does break strict-aliasing rules\nby using a union instead of separate pointer variables.\nInternal union sockaddr_u could probably be moved to generic header.\nThanks to Paul Howarth for the hint about using unions for this.\n\nImportant for winbuild: Separate declaration of sockaddr_u pointer.\nThe pointer variable *sock cannot be declared and initialized right\nafter the union declaration. Therefore it has to be a separate statement.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339421190
  },
  {
    "id": "3f9ab7cf5deb892cc7b8cb3f36322e072898b789",
    "files": [
      "lib/curl_ntlm_msgs.c"
    ],
    "message": "curl_ntlm_msgs.c: Fixed passwdlen not being used and recalculated",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339418843
  },
  {
    "id": "6478e1d7e5cf9a03a24f1d34eb92d4a4aad01f24",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed length of SASL check",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1339236488
  },
  {
    "id": "674e53f40ee1c5a8c3c9e2b0c8a748cae0ebe85c",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "OpenSSL: support longer certificate subject names\n\nPreviously it would use a 256 byte buffer and thus cut off very long\nsubject names. The limit is now upped to the receive buffer size, 16K.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3533045\nReported by: Anthony G. Basile",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339193214
  },
  {
    "id": "68857e40d69ef792bfcc6d7395c65305a4117c51",
    "files": [
      "RELEASE-NOTES",
      "lib/sslgen.c"
    ],
    "message": "ssl: fix duplicated SSL handshake with multi interface and proxy\n\nBug: https://bugzilla.redhat.com/788526\nReported by: Enrico Scholz",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1339190831
  },
  {
    "id": "2e48139fbf44283a07f02978095d50bdcb112b9f",
    "files": [
      "tests/libtest/lib554.c"
    ],
    "message": "lib554.c: use curl_formadd() properly\n\nThe length/size options take longs so make sure to pass on such types.\n\nReported by: Neil Bowers\nBug: http://curl.haxx.se/mail/lib-2012-06/0001.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1339103440
  },
  {
    "id": "b5bb61ee697b9a12e37c15b3bcbad33d808961d5",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed an issue with changes introduced in commit c267c53017bc\n\nBecause pop3_endofresp() is called for each line of data yet is not\npassed the line and line length, so we have to use the data pointed to\nby pp->linestart_resp which contains the whole packet, the mechanisms\nwere being detected in one call yet the function would be called for\neach line of data.\n\nUsing curl with verbose mode enabled would show that one line of data\nwould be received in response to the AUTH command, before the AUTH\n<mechanism> command was sent to the server and then the next few lines\nof the original AUTH command would be displayed before the response from\nthe AUTH <mechanism> command. This would then cause problems when\nparsing the CRAM-MD5 challenge data as extra data was contained in the\nbuffer.\n\nChanged the parsing so that each line is checked for the mechanisms\nand the function returns FALSE until the whole of the AUTH response has\nbeen processed.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1338739608
  },
  {
    "id": "69ba0da8272d7bddeef518670d4c1298b0627ad7",
    "files": [
      "RELEASE-NOTES",
      "lib/pop3.c"
    ],
    "message": "pop3: Fixed the issue of having to supply the user name for all requests\n\nPreviously it wasn't possible to connect to POP3 and not specify the\nuser name as a CURLE_ACCESS_DENIED error would be returned. This error\noccurred because USER would be sent to the server with a blank user name\nif no mailbox user was specified as the server would reply with -ERR.\n\nThis wasn't a problem prior to the 7.26.0 release but with the\nintroduction of custom commands the user and/or application developer\nmight want to issue a CAPA command without having to log in as a\nspecific mailbox user.\n\nAdditionally this fix won't send the newly introduced AUTH command if no\nuser name is specified.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1338671497
  },
  {
    "id": "72f4b534c4f57a71c458257c4ea317d557cf59f5",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c"
    ],
    "message": "nss: use human-readable error messages provided by NSS\n\nBug: http://lists.baseurl.org/pipermail/yum-devel/2012-January/009002.html",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1338197064
  },
  {
    "id": "94eb1328969b796e4ecce3a113fc6ba24c167254",
    "files": [
      "src/tool_metalink.c"
    ],
    "message": "Fixed segmentation fault when Metalink has no valid file or no resource.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1338066674
  },
  {
    "id": "ef60fdbd7367ea97446e7e2ed7ac91d411265431",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed an issue with the multi-interface always sending postdata\n\nDue to the result code being reset to CURLE_OK when smtp_dophase_done()\nwas called, postdata would incorrectly be sent to the server when the\nMAIL FROM or RCPT command was rejected.\n\nAs such, libcurl would return the wrong result code from performing the\noperation and additionally set CURLINFO_RESPONSE_CODE to be that\nreturned by the postdata command.\n\nBug: http://curl.haxx.se/mail/lib-2012-05/0108.html\nReported by: Gokhan Sengun",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1337720905
  },
  {
    "id": "7ba07c80a16cd4ce711b5ac62d3632ae4145e9a9",
    "files": [
      "lib/smtp.h",
      "lib/smtp.c"
    ],
    "message": "smtp: Fixed non-escaping of dot character at beginning of line\n\nA dot character at the beginning of a line would not be escaped to a\ndouble dot as required by RFC-2821, instead it would be deleted by the\nmail server. Please see section 4.5.2 of the RFC for more information.\n\nNote: This fix also simplifies the detection of repeated CRLF.CRLF\ncombinations, such as CRLF.CRLF.CRLF, a little rather than having to\nadvance the eob counter to 2.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1337250666
  },
  {
    "id": "72b72fe8edc7e4fadc1d2f5ff106b60aeb88d512",
    "files": [
      "lib/url.c"
    ],
    "message": "URL parse: reject numerical IPv6 addresses outside brackets\n\nRoman Mamedov spotted (in\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=670126) that curl would\nnot complain when given a URL with an IPv6 numerical address without\nbrackets. It would simply cut off the last \":[hex]\" part and thus not\nwork correctly.\n\nThat's a URL using an illegal syntax and now libcurl will instead return\na clear error code and error message detailing the error.\n\nThe above mentioned bug report claims this to be a regression but\nlibcurl does not guarantee functionality when given URLs that aren't\nfollowing the URL spec (RFC3986 mostly). I consider the fact that it\nused to handle this differently a mere coincidence.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1335215922
  },
  {
    "id": "bd9eb30ffdde211574ba62b0ef5e1b75051fffda",
    "files": [
      "lib/md5.c"
    ],
    "message": "Curl_MD5_init: fix OOM memory leak\n\nBug: http://curl.haxx.se/mail/lib-2012-04/0246.html\nReported by: Michael Mueller",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1335215260
  },
  {
    "id": "683bfa60ad0b52505947e59b03515e5f44378523",
    "files": [
      "lib/curl_sspi.c"
    ],
    "message": "Fixed 'Trailing whitespace' found by checksrc.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1335122376
  },
  {
    "id": "77172a242fc0c820f97eae39d0e3e0f265222fe6",
    "files": [
      "lib/version.c"
    ],
    "message": "Fixed 'extra tokens at end of #endif directive'.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1335121817
  },
  {
    "id": "560cd6227271752536de237e41c374d0a3e11f1d",
    "files": [
      "tests/data/Makefile.am",
      "tests/data/test1333",
      "lib/http.c"
    ],
    "message": "HTTP: empty chunked POST ended up in two zero size chunks\n\nWhen doing a chunked-encoded POST with -d (CURLOPT_POSTFIELDS) and the\nsize of the POST was zero length, it made libcurl first send a zero\nchunk and then the terminating one. This could confuse a receiver and it\nshould rather just send the terminating chunk as it does with this fix.\n\nTest case 1333 is added to verify.\n\nBug: http://curl.haxx.se/mail/archive-2012-04/0060.html\nReported by: Arnaud Compan",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1334953531
  },
  {
    "id": "5cd524df187cbb2414d518f8933894399edbf572",
    "files": [
      "lib/connect.c"
    ],
    "message": "singleipconnect: return OK even when Curl_socket() fails\n\nCommit 9109cdec11ee5a brought this regression (shipped since 7.24.0).\n\nThe singleipconnect() function must not return an error if Curl_socket()\nreturns an error. It should then simply return OK and pass a SOCKET_BAD\nback simply because that is how the user of this function expects it to\nwork and something else is not fine.\n\nReported by: Blaise Potard\nBug: http://curl.haxx.se/bug/view.cgi?id=3516508",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1334871110
  },
  {
    "id": "4d28a59fc2b21fd7cbf54e48e9c28018b991c987",
    "files": [
      "src/tool_cb_prg.c"
    ],
    "message": "-# progress meter: avoid superfluous updates and duplicate lines\n\nBy comparing if a different \"progress point\" is reached or not since the\nprevious update, the progress function callback for this now avoids many\nsuperfluous screen updates. This has the nice side-effect that it fixes\na problem that causes a second progress meter line.\n\nThe second line output happened because when we use the -# progress\nmeter, we force a newline output after the transfer in the main loop in\ncurl, but when libcurl calls the progress callback from\ncurl_easy_cleanup() it would then output the progress display\nagain. Possibly the naive newline output is wrong but this optimization\nwas suitable anyway...\n\nReported by: Daniel Theron\nBug: http://curl.haxx.se/bug/view.cgi?id=3517418",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1334616320
  },
  {
    "id": "20cb12db8df6f956b885a5215bcffd425f2d34dd",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "configure.ac"
    ],
    "message": "nss: use NSS_InitContext() to initialize NSS if available\n\nNSS_InitContext() was introduced in NSS 3.12.5 and helps to prevent\ncollisions on NSS initialization/shutdown with other libraries.\n\nBug: https://bugzilla.redhat.com/738456",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1334312376
  },
  {
    "id": "ebf315e6f399ec534dbce4741d0463c28ae858e3",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "OpenSSL: Made cert hostname check conform to RFC 6125\n\nThis change replaces RFC 2818 based hostname check in OpenSSL build with\nRFC 6125 [1] based one.\n\nThe hostname check in RFC 2818 is ambiguous and each project implements\nit in the their own way and they are slightly different. I check curl,\ngnutls, Firefox and Chrome and they are all different.\n\nI don't think there is a bug in current implementation of hostname\ncheck. But it is not as strict as the modern browsers do. Currently,\ncurl allows multiple wildcard character '*' and it matches '.'. (as\ndescribed in the comment in ssluse.c).\n\nFirefox implementation is also based on RFC 2818 but it only allows at\nmost one wildcard character and it must be in the left-most label in the\npattern and the wildcard must not be followed by any character in the\nlabel.[2] Chromium implementation is based on RFC 6125 as my patch does.\nFirefox and Chromium both require wildcard in the left-most label in the\npresented identifier.\n\nThis patch is more strict than the current implementation, so there may\nbe some cases where old curl works but new one does not. But at the same\ntime I think it is good practice to follow the modern browsers do and\nfollow the newer RFC.\n\n[1] http://tools.ietf.org/html/rfc6125#section-6.4.3\n[2] https://bugzilla.mozilla.org/show_bug.cgi?id=159483",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1333303837
  },
  {
    "id": "c44d45db86b880df5facd6b560491e03530f876e",
    "files": [
      "tests/data/test599",
      "tests/libtest/lib599.c",
      "lib/transfer.c",
      "lib/progress.h",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.inc",
      "lib/progress.c"
    ],
    "message": "HTTP: reset expected DL/UL sizes on redirects\n\nWith FOLLOWLOCATION enabled. When a 3xx page is downloaded and the\ndownload size was known (like with a Content-Length header), but the\nsubsequent URL (transfered after the 3xx page) was chunked encoded, then\nthe previous \"known download size\" would linger and cause the progress\nmeter to get incorrect information, ie the former value would remain\nbeing sent in. This could easily result in downloads that were WAY\nlarger than \"expected\" and would cause >100% outputs with the curl\ncommand line tool.\n\nTest case 599 was created and it was used to repeat the bug and then\nverify the fix.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3510057\nReported by: Michael Wallner",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1333231644
  },
  {
    "id": "602a8a565cf8661a85b74f23e14449ff04b9f543",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed body data being written when CURLOPT_NOBODY is specified\n\nBody data would be forwarded to the client application in both the RETR\nand LIST commands even if CURLOPT_NOBODY was specified.",
    "committer": {
      "email": "steve_holme@hotmail.com",
      "name": "Steve Holme"
    },
    "date": 1332547778
  },
  {
    "id": "c83de6d07625b813e3bbc31f9a0827c3a0007355",
    "files": [
      "lib/urldata.h",
      "lib/http_proxy.h",
      "lib/http_proxy.c",
      "lib/url.c",
      "lib/http.c",
      "lib/multi.c"
    ],
    "message": "CONNECT: fix multi interface regression\n\nThe refactoring of HTTP CONNECT handling in commit 41b0237834232 that\nmade it protocol independent broke it for the multi interface. This fix\nnow introduce a better state handling and moved some logic to the\nhttp_proxy.c source file.\n\nReported by: Yang Tse\nBug: http://curl.haxx.se/mail/lib-2012-03/0162.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1332371557
  },
  {
    "id": "97386c3c84251ca6a185916b28e61c100a901c1a",
    "files": [
      "lib/asyn-ares.c"
    ],
    "message": "resolve with c-ares: don't resolve IPv6 when not working\n\nIf the Curl_ipv6works() function says no, there is no reason to try AAAA\nnames even if libcurl was built with IPv6 support enabled.\n\nBug: http://curl.haxx.se/mail/lib-2012-03/0045.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1331675559
  },
  {
    "id": "e650dbde86d47fc9ded3a8328b8d765fce54078b",
    "files": [
      "lib/http.c"
    ],
    "message": "Curl_http: strip off [brackets] from ipv6-only host headers\n\nSince the host name is passed in to the cookie engine it will not work\ncorrectly if the brackets are left in the name.\n\nBug:http://curl.haxx.se/mail/lib-2012-03/0036.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1331394539
  },
  {
    "id": "79b6f4a2d37a17795e61b5ae9579f11bed9ad3cc",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "CONNECT: fix ipv6 address in the Request-Line\n\nCommit 466150bc64d fixed the Host: header with CONNECT, but I then\nforgot the preceeding request-line. Now this too uses [brackets]\nproperly if a ipv6 numerical address was given.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3493129\nReported by: \"Blacat\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1330122794
  },
  {
    "id": "2f1ad7d6e2192e64ca6a5187ecf44a80b0425389",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed an issue with writing postdata\n\nFixed a problem in smtp_done() when writing out the postdata as\nCurl_write() would periodically return zero bytes written.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1329861046
  },
  {
    "id": "035ef06bda7fbe9ae1934f9dee008b61ad623ac1",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3.c: Fixed drop of final CRLF in EOB checking\n\nCurl_pop3_write() would drop the final CRLF of a message as it was\nconsidered part of the EOB as opposed to part of the message. Whilst\nthe EOB sequence needs to be searched for by the function only the\nfinal 3 characters should be removed as per RFC-1939 section 3.\n\nReported by: Rich Gray\nBug: http://curl.haxx.se/mail/lib-2012-02/0051.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1329691694
  },
  {
    "id": "3d98aed5b351b6437a6ffffed0589f8ab02a59e0",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed an issue with the EOB checking\n\nCurl_smtp_escape_eob() would leave off final CRLFs from emails ending\nin multiple blank lines additionally leaving the smtpc->eob variable\nwith the character count in, which would cause problems for additional\nemails when sent through multiple calls to curl_easy_perform() after a\nCURLOPT_CONNECT_ONLY.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1329515239
  },
  {
    "id": "b685481d527309d595ebf3551048a9f96975dc9e",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp.c: Fixed use of angled brackets in AUTH parameter.\n\nFixed the use of angled brackets \"<>\" in the optional AUTH parameter as\nper RFC-2554 section 5. The address should not include them but an\nempty address should be replaced by them.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1329339105
  },
  {
    "id": "69406f0be7ba15a14683ef98eba4b1fe7e7f14c8",
    "files": [
      "lib/smtp.c"
    ],
    "message": "SMTP: Fixed error when using CURLOPT_CONNECT_ONLY\n\nFixed incorrect behavior in smtp_done() which would cause the end of\nblock data to be sent to the SMTP server if libcurl was operating in\nconnect only mode. This would cause the server to return an error as\ndata would not be expected which in turn caused libcurl to return\nCURLE_RECV_ERROR.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1329243148
  },
  {
    "id": "ecc93caaebe4d7c0168cedd99c3a6c42f7db9666",
    "files": [
      "lib/url.c",
      "tests/data/Makefile.am",
      "tests/data/test1329"
    ],
    "message": "parse_proxy: bail out on zero-length proxy names!\n\nThe proxy parser function strips off trailing slashes off the proxy name\nwhich could lead to a mistaken zero length proxy name which would be\ntreated as no proxy at all by subsequent functions!\n\nThis is now detected and an error is returned. Verified by the new test\n1329.\n\nReported by: Chandrakant Bagul\nBug: http://curl.haxx.se/mail/lib-2012-02/0000.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1328887580
  },
  {
    "id": "ea055407fa45c4247042e7370d463364f03c3136",
    "files": [
      "lib/url.c",
      "tests/data/test598",
      "tests/libtest/lib598.c",
      "tests/libtest/Makefile.inc"
    ],
    "message": "curl_easy_reset: reset the referer string\n\nWhen CURLOPT_REFERER has been used, curl_easy_reset() did not properly\nclear it.\n\nVerified with the new test 598\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3481551\nReported by: Michael Day",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1328652463
  },
  {
    "id": "65103efe49a733ba0a4e50c8bd1e318ed31463f4",
    "files": [
      "tests/data/Makefile.am",
      "src/tool_operate.c",
      "tests/data/test1328"
    ],
    "message": "curl tool: don't abort glob-loop due to failures\n\nWe want to continue to the next URL to try even on failures returned\nfrom libcurl. This makes -f with ranges still get subsequent URLs even\nif occasional ones return error. This was a regression as it used to\nwork and broke in the 7.23.0 release.\n\nAdded test case 1328 to verify the fix.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3481223\nReported by: Juan Barreto",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1328543537
  },
  {
    "id": "466150bc64de0caef08f22cc8a88f7922483a639",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "CONNECT: send correct Host: with IPv6 numerical address\n\nWhen the target host was given as a IPv6 numerical address, it was not\nproperly put within square brackets for the Host: header in the CONNECT\nrequest. The \"normal\" request did fine.\n\nReported by: \"zooloo\"\nBug: http://curl.haxx.se/bug/view.cgi?id=3482093",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1328046730
  },
  {
    "id": "70f71bb99f7ed9f4164430507c0b03b84c7e0258",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gnutls: enforced use of SSLv3\n\nWith advice from Nikos Mavrogiannopoulos, changed the priority string to\nadd \"actual priorities\" and favour ARCFOUR. This makes libcurl work\nbetter when enforcing SSLv3 with GnuTLS. Both in the sense that the\nlibmicrohttpd test is now working again but also that it mitigates a\nweakness in the older SSL/TLS protocols.\n\nBug: http://curl.haxx.se/mail/lib-2012-01/0225.html\nReported by: Christian Grothoff",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1327391666
  },
  {
    "id": "7883cd5af38a824e41b42c94890ea94bf4356fd3",
    "files": [
      "lib/url.c"
    ],
    "message": "URL parse: user name with ipv6 numerical address\n\nUsing a URL with embedded user name and password didn't work if the host\nwas given as a numerical IPv6 string, like ftp://user:password@[::1]/\n\nReported by: Brandon Wang\nBug: http://curl.haxx.se/mail/archive-2012-01/0047.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1327098763
  },
  {
    "id": "61d31a3caf8bced6d142c43b10e0887af744f50c",
    "files": [
      "lib/polarssl.c"
    ],
    "message": "polarssl: havege_rand is not present in version 1.1.0\n\n... it is now named havege_random!\n\nReported by: Robert Schumann\nBug: http://curl.haxx.se/mail/lib-2012-01/0178.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1326925074
  },
  {
    "id": "4563eeb9f43621f137c51c80e3335a3d281b845a",
    "files": [
      "lib/telnet.c"
    ],
    "message": "Use correct file descriptor for telnet upload.\n\nFix a bug where input was read from stdin even when a different FILE *\nhad been configured via CURLOPT_READDATA",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1326921430
  },
  {
    "id": "2cafb0e97c288d2e942a50e964e1604c692871db",
    "files": [
      "lib/openldap.c"
    ],
    "message": "OpenLDAP: fix LDAP connection phase memory leak\n\nbug: http://curl.haxx.se/bug/view.cgi?id=3474308",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1326899189
  },
  {
    "id": "a20daf90e358c1476a325ea665d533f7a27e3364",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "OpenSSL: SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG option is no longer enabled\n\nSSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG option enabling allowed successfull\ninteroperability with web server Netscape Enterprise Server 2.0.1 released\nback in 1996 more than 15 years ago.\n\nDue to CVE-2010-4180, option SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG has\nbecome ineffective as of OpenSSL 0.9.8q and 1.0.0c. In order to mitigate\nCVE-2010-4180 when using previous OpenSSL versions we no longer enable\nthis option regardless of OpenSSL version and SSL_OP_ALL definition.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1326884360
  },
  {
    "id": "6d62c5a6fcd17b3e8c65326612818b8a8b94d690",
    "files": [
      "lib/http_proxy.c"
    ],
    "message": "Curl_proxyCONNECT() trace known bug #39",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1326651715
  },
  {
    "id": "9f20379fe445d0994daa11d022270aea5ab99af6",
    "files": [
      "lib/tftp.c",
      "lib/setup.h",
      "lib/hostip4.c"
    ],
    "message": "hostip: avoid getaddrinfo when c-ares is used\n\nSome functions using getaddrinfo and gethostbyname were still\nmistakingly being used/linked even if c-ares was selected as resolver\nbackend.\n\nReported by: Arthur Murray\nBug: http://curl.haxx.se/mail/lib-2012-01/0160.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1326406399
  },
  {
    "id": "db4f69ef0630001e6d566b949d86d1739bdd85b3",
    "files": [
      "lib/imap.c",
      "lib/pop3.c"
    ],
    "message": "Fixed use of CURLUSESSL_TRY for POP3 and IMAP based connections.\n\nFixed a problem in POP3 and IMAP where a connection would fail when\nCURLUSESSL_TRY was specified for a server that didn't support\nSSL/TLS connections rather than continuing.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1325634500
  },
  {
    "id": "277022b2e48e338ca85adc4321f0cf5661df4713",
    "files": [
      "lib/imap.c",
      "lib/pop3.c",
      "lib/smtp.c"
    ],
    "message": "Fixed incorrect error code being returned in STARTTLS\n\nThe STARTTLS response code in SMTP, POP3 and IMAP would return\nCURLE_LOGIN_DENIED rather than CURLE_USE_SSL_FAILED when SSL/TLS\nwas not available on the server.\n\nReported by: Gokhan Sengun\nBug: http://curl.haxx.se/mail/lib-2012-01/0018.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1325634478
  },
  {
    "id": "7f472618deb557fafa5c757682c1530790a3cace",
    "files": [
      "lib/http_negotiate_sspi.c"
    ],
    "message": "Curl_input_negotiate: use the correct buffer for input\n\nUnfortunately we have no test cases for this and I have no SSPI build or\nserver to verify this with. The change seems simple enough though.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3466497\nReported by: Patrice Guerin",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1325453792
  },
  {
    "id": "c9a3cab6c4250ea6d4872affc6ff0ad6894a8e8c",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP dir: increase buffer size counter\n\nWhen the buffer gets realloced to hold the file name in the\nSSH_SFTP_READDIR_LINK state, the counter was not bumped accordingly.\n\nReported by: Armel Asselin\nPatch by: Armel Asselin\nBug: http://curl.haxx.se/mail/lib-2011-12/0249.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1325371935
  },
  {
    "id": "207cf15032a7e8eab71b2f4655fc5c21e5d3623d",
    "files": [
      "lib/url.c",
      "tests/data/Makefile.am",
      "tests/data/test1318"
    ],
    "message": "changed case: use new host name for subsequent HTTP requests\n\nWhen a HTTP connection is re-used for a subsequent request without\nproxy, it would always re-use the Host: header of the first request. As\nhost names are case insensitive it would make curl send another host\nname case that what the particular request used.\n\nNow it will instead always use the most recent host name to always use\nthe desired casing.\n\nAdded test case 1318 to verify.\n\nBug: http://curl.haxx.se/mail/lib-2011-12/0314.html\nReported by: Alex Vinnik",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1325324728
  },
  {
    "id": "9f7f6a62ff3bf2fcf87c9ff64c6c090c1940fd70",
    "files": [
      "RELEASE-NOTES",
      "lib/transfer.c"
    ],
    "message": "transfer: avoid unnecessary timeout event when waiting for 100-continue\n\nThe commit 9dd85bc unintentionally changed the way we compute the time\nspent waiting for 100-continue.  In particular, when using a SSL client\ncertificate, the time spent by SSL handshake was included and could\ncause the CURL_TIMEOUT_EXPECT_100 timeout to be mistakenly fired up.\n\nBug: https://bugzilla.redhat.com/767490\nReported by: Mamoru Tasaka",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1324849044
  },
  {
    "id": "99a12baa34b59b14d9b43c00e882cfe1d6b0403d",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp_do_more: don't return success until all is done\n\nftp_do_more() returns after accepting the server connect however it\nneeds to fall through and set \"*complete\" to TRUE before exit from the\nfunction.\n\nBug: http://curl.haxx.se/mail/lib-2011-12/0250.html\nReported by: Gokhan Sengun",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324681920
  },
  {
    "id": "4f8db8bf957b4e3efafa517ba14770dac7781204",
    "files": [
      "lib/url.c"
    ],
    "message": "Curl_do_more: fix typo logic\n\nIn the recent do_more fix the new logic was mistakenly checking the\npointer instead of what it points to.\n\nReported by: Gokhan Sengun\nBug: http://curl.haxx.se/mail/lib-2011-12/0250.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324681781
  },
  {
    "id": "5ac9ec7205a1df753ecd8827f63878a445c44d6a",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP mkdir: use correct permission\n\nWhen sending quote command to a SFTP server and 'mkdir' was used, it\nwould send fixed permissions and not use the CURLOPT_NEW_DIRECTORY_PERMS\nas it should.\n\nReported by: Armel\nPatch by: Armel\nBug: http://curl.haxx.se/mail/lib-2011-12/0249.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324681444
  },
  {
    "id": "2caa454dc19237588ee3696fac2d74fb86eb0d98",
    "files": [
      "lib/url.c",
      "lib/hostip.h",
      "lib/hostip.c"
    ],
    "message": "resolve: don't leak pre-populated dns entries\n\nCURLOPT_RESOLVE populates the DNS cache with entries that are marked as\neternally in use. Those entries need to be taken care of when the cache\nis killed off.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3463121\nReported by: \"tw84452852\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324647980
  },
  {
    "id": "926916e28e501da6b2dd101773650809633760c9",
    "files": [
      "lib/select.c"
    ],
    "message": "Curl_socket_check: enlarge poll struct array to 3\n\nThis function was introduced in commit 5527417afae0 and as pointed out\nby Gokhan Sengun, the array with poll structs must large enough to hold\n3 sockets since that is what the function can accept. It could be noted\nthat he had this fixed in his patch as posted in\nhttp://curl.haxx.se/mail/lib-2011-12/0179.html\n\nBug: http://curl.haxx.se/mail/lib-2011-12/0228.html\nReported by: Gokhan Sengun",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324420434
  },
  {
    "id": "e9040f2954bc1423a4b2e47883294dce088a12d5",
    "files": [
      "tests/libtest/lib500.c"
    ],
    "message": "lib500: verify timers relative each other\n\nAs commit ce896875f8 fixed a timer that accidentally had been moved in\ncode and then returned a bad timer, the lib500.c code (used in test 500\nand some others) now verifies 5 timers against each other to verify that\nthey have the correct relative values. We cannot compare against\nabsolute values as the timings will vary a lot.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324392103
  },
  {
    "id": "ce896875f89f66d8d1659d57e6d6f80c157c1071",
    "files": [
      "lib/url.c"
    ],
    "message": "timer: restore PRETRANSFER timing\n\nRegression introduced in 7.23.0 with commit 9dd85bce. The function in\nwhich the PRETRANSFER time stamp was recorded was moved in time causing\nit be stored very quickly after the start timestamp. On most systems\nshorter than 1 millisecond and thus it wouldn't even show with -w\n\"%{time_pretransfer}\" using the command line tool.\n\nBug: http://curl.haxx.se/mail/archive-2011-12/0022.html\nReported by: Toni Moreno",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1324389586
  },
  {
    "id": "6e4835c795996ee92ac1aa78733f23a089f310a5",
    "files": [
      "lib/if2ip.c",
      "lib/connect.c",
      "docs/libcurl/curl_easy_setopt.3",
      "lib/if2ip.h"
    ],
    "message": "CURLOPT_INTERFACE: avoid resolving interfaces names\n\nDo not try to resolve interfaces names via DNS by recognizing interface\nnames in a few ways.  If the interface option argument has a prefix of\n\"if!\" then treat the argument as only an interface.  Similarly, if the\ninterface argument is the name of an interface (even if it does not have\nan IP address assigned), treat it as an interface name.  Finally, if the\ninterface argument is prefixed by \"host!\" treat it as a hostname that\nmust be resolved by /etc/hosts or DNS.\n\nThese changes allow a client using the multi interfaces to avoid\nblocking on name resolution if the interface loses its IP address or\ndisappears.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1323727957
  },
  {
    "id": "1259ccf747498b7cc2c29a202645ed240fee167e",
    "files": [
      "lib/url.c"
    ],
    "message": "ConnectionExists: Fix reuse for TLS upgraded connections\n\nFixed the connection reuse detection in ConnectionExists() when\ncomparing a new connection that is non-SSL based against that of a SSL\nbased connection that has become so by being upgraded via TLS.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1323646367
  },
  {
    "id": "1cacf853da30edb8a9f6b834df43ee639a1811f2",
    "files": [
      "lib/connect.c"
    ],
    "message": "Curl_closesocket: clear sock_accepted on close\n\nAs a follow-up from commit d5b5f64bce3a8, clear the sock_accepted status\nwhen such a socket is closed to avoid a re-used connection to retain the\nstate wrongly.\n\nBug: http://curl.haxx.se/mail/lib-2011-12/0079.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1323270180
  },
  {
    "id": "347f951c3909dea589270366ea90f1af9b40f65b",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SSH: fix CURLOPT_SSH_HOST_PUBLIC_KEY_MD5\n\nWhen a 32 digit hex key is given as a hostkey md5 checksum, the code\nwould still run it against the knownhost check and not properly\nacknowledge that the md5 should then be the sole guide for.\n\nThe verbose output now includes the evaluated MD5 hostkey checksum.\n\nSome related source code comments were also updated.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3451592\nReported by: Reza Arbab",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1323120268
  },
  {
    "id": "c50dbf670f5780db7658bb15f5d24c8706202584",
    "files": [
      "lib/asyn-ares.c"
    ],
    "message": "Curl_resolver_is_resolved: differentiate between host/proxy errors\n\nAs there are different return codes for host vs proxy errors, this function\nnow properly returns the code properly depending on what was attempted to get\nresolved.\n\nBug: http://curl.haxx.se/mail/archive-2011-12/0010.html\nReported by: Jason Liu",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1323085495
  },
  {
    "id": "d5b5f64bce3a86ae39361248da6b3b207cff2cd2",
    "files": [
      "lib/urldata.h",
      "tests/data/test596",
      "lib/connect.c",
      "lib/ftp.c"
    ],
    "message": "FTP: close callback fix\n\nKeep track of which sockets that are the result of accept() calls and\nrefuse to call the closesocket callback for those sockets. Test case 596\nnow verifies that the open socket callback is called the same number of\ntimes as the closed socket callback for active FTP connections.\n\nBug: http://curl.haxx.se/mail/lib-2011-12/0018.html\nReported by: Gokhan Sengun",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1323084867
  },
  {
    "id": "adc88ca203bbb602cc9a1726669526fa7b3723ef",
    "files": [
      "lib/multi.c",
      "lib/asyn-ares.c"
    ],
    "message": "multi: handle timeouts on DNS servers by checking for new sockets\n\nIf the first name server is not available, the multi interface does\nnot invoke the socket_cb when the DNS request to the first name server\ntimesout.  Ensure that the list of sockets are always updated after\ncalling Curl_resolver_is_resolved.\n\nThis bug can be reproduced if Curl is complied with --enable_ares and\nyour code uses the multi socket interfaces and the\nCURLMOPT_SOCKETFUNCTION option.  To test try:\n  iptables -I INPUT \\\n           -s $(sed -n -e '/name/{s/.* //p;q}' /etc/resolv.conf)/32 \\\n           -j REJECT\nand then run a program which uses the multi-interface.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1322817532
  },
  {
    "id": "bdb647814ebf0b19e9e97507e3f99b3b4bbbf8be",
    "files": [
      "lib/pop3.c"
    ],
    "message": "POP3: fixed escaped dot not being striped out\n\nChanged the eob detection to work across the whole of the buffer so that\nlines that begin with a dot (which the server will have escaped) are\npassed to the client application correctly.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1322694407
  },
  {
    "id": "8f50a5c7e517dee2dbdf01c0228c1baa6f03cdc1",
    "files": [
      "lib/sslgen.c"
    ],
    "message": "SSLSESSION_SHARED: new macro to check if session is shared\n\nAdded convenience macro to use to check if a handle is using a shared\nSSL session, and fixed so that Curl_ssl_close_all() doesn't lock when\nthe session isn't shared.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1322229637
  },
  {
    "id": "28bac99674f199898f3e803fcfc4167a56a4c058",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gnutls: only translate winsock errors for old versions\n\nBugfix: https handshake fails using gnutls 3 on windows\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=3441084&group_id=976&atid=100976\n\nNew gnutls versions have an error handler that knows about Winsock\nerrors, which is why gnutls_transport_set_global_errno() was deprecated\nand then removed.\n\nThis is a correction of commit f5bb370 (blame me) which meant to\nreimplement gnutls_transport_set_global_errno(), which is not necessary.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1322084291
  },
  {
    "id": "7248439fece7d0f32cc3d52c253b3960a66ad2b3",
    "files": [
      "lib/url.c"
    ],
    "message": "protocol_connect: show verbose connect and set connect time\n\nRegression: commit b998d95b (shipped first in release 7.22.0) made the\ncondition always equal false that should reset the TIMER_CONNECT timer\nand call the Curl_verboseconnect() function.\n\nReported by: \"Captain Basil\"\nBug: http://curl.haxx.se/mail/archive-2011-11/0035.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1321914981
  },
  {
    "id": "c532604b137cae2e2814280778f914e4cd0460d1",
    "files": [
      "tests/data/test1210",
      "src/tool_operhlp.c",
      "tests/data/Makefile.am",
      "src/tool_operate.c",
      "src/tool_cb_hdr.c"
    ],
    "message": "-J -O: use -O name if no Content-Disposition header comes!\n\nA regression between 7.22.0 and 7.23.0 -- downloading a file with the\nflags -O and -J results in the content being written to stdout if and\nonly if there was no Content-Disposition header in the http response. If\nthere is a C-D header with a filename attribute, the output is correctly\nwritten.\n\nReported by: Dave Reisner\nBug: http://curl.haxx.se/mail/archive-2011-11/0030.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1321828549
  },
  {
    "id": "b9660dc4b290781ff6535dec32258ec14e6ff0b5",
    "files": [
      "src/tool_doswin.c"
    ],
    "message": "FindWin32CACert: return OK even if CA cert isn't found\n\nBug: http://curl.haxx.se/mail/lib-2011-11/0180.html\nReported by: Mark Brand",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1321549527
  },
  {
    "id": "10120e6ab545c18a89f8f23006322e2aa23fa15d",
    "files": [
      "src/tool_cb_prg.c"
    ],
    "message": "progress_cb: avoid buffer overflow\n\nThe progress bar output function would blindly use the terminal width\nwithout bounds checking. When using a very wide terminal that caused a\nbuffer overflow and segfault.\n\nWe now limit the max bar with to 255 columns, and I simplified the code\nto avoid an extra snprintf and buffer.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3435710\nReported by: Alexey Zakhlestin",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1321037869
  },
  {
    "id": "e3166df1bb3e027e20455c7b99b42779e607ccfb",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp PORT: don't hang if bind() fails\n\nWhen the user requests PORT with a specific port or port range, the code\ncould lock up in an endless loop. There's now an extra conditional that\nmakes sure to special treat the error and try the local address only\nonce so a second failure will abort the loop correctly.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3433968\nReported by: Gokhan Sengun",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1320616947
  },
  {
    "id": "2c09d21fdf16818d406db471de6e0db5d40b4ba2",
    "files": [
      "tests/libtest/lib590.c",
      "tests/data/Makefile.am",
      "tests/data/test590",
      "tests/libtest/Makefile.inc"
    ],
    "message": "test 590: verify the bug fix in 4851dafcf1\n\nThis test is created to verify Rene Bernhardt's patch which makes sure\nlibcurl properly _not_ deals with Negotiate if not asked to even if the\nproxy says it can serve it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1320596908
  },
  {
    "id": "d7934b8bd49114cbb54f7401742f7fb088e2f796",
    "files": [
      "lib/tftp.c",
      "lib/ftp.c",
      "lib/http.c",
      "lib/gopher.c",
      "lib/ldap.c",
      "lib/pop3.c",
      "lib/multi.c",
      "lib/openldap.c",
      "lib/urldata.h",
      "lib/smtp.c",
      "lib/rtsp.c",
      "lib/url.c",
      "lib/telnet.c",
      "lib/imap.c",
      "lib/curl_rtmp.c",
      "lib/dict.c",
      "lib/ssh.c",
      "lib/file.c"
    ],
    "message": "curl_multi_fdset: correct fdset with FTP PORT use\n\nAfter a PORT has been issued, and the multi handle would switch to the\nCURLM_STATE_DO_MORE state (which is unique for FTP), libcurl would\nreturn the wrong fdset to wait for when curl_multi_fdset() is\ncalled. The code would blindly assume that it was waiting for a connect\nof the second connection, while that isn't true immediately after the\nPORT command.\n\nAlso, the function multi.c:domore_getsock() was highly FTP-centric and\ntherefore ugly to keep in protocol-agnostic code. I solved this problem\nby introducing a new function pointer in the Curl_handler struct called\ndomore_getsock() which is only called during the DOMORE state for\nprotocols that set that pointer.\n\nThe new ftp.c:ftp_domore_getsock() function now returns fdset info about\nthe control connection's command/response handling while such a state is\nin use, and goes over to waiting for a writable second connection first\nonce the commands are done.\n\nThe original problem could be seen by running test 525 and checking the\ntime stamps in the FTP server log. I can verify that this fix at least\nfixes this problem.\n\nBug: http://curl.haxx.se/mail/lib-2011-10/0250.html\nReported by: Gokhan Sengun",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1319233014
  },
  {
    "id": "ff0a295cdbc9cf95db0c364ede5cca4063ba2882",
    "files": [
      "tests/data/Makefile.am",
      "tests/data/test1204",
      "lib/http.c"
    ],
    "message": "Curl_http_input_auth: handle multiple auths in WWW-Authenticate\n\nThe fix is pretty much the one Nick Zitzmann provided, just edited to do\nthe right indent levels and with test case 1204 added to verify the fix.\n\nBug: http://curl.haxx.se/mail/lib-2011-10/0190.html\nReported by: Nick Zitzmann",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1319109122
  },
  {
    "id": "4fa01661739eaa2fd91f618df660662ef3f886f8",
    "files": [
      "lib/smtp.c"
    ],
    "message": "Curl_smtp_escape_eob: first byte is index 0...\n\nFix a bug with with commit 2621dd42a4d that happened due to my last\nsecond pre-commit cleanup of the change without proper testing\nafterwards!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1319109122
  },
  {
    "id": "2621dd42a4d3e510e68f7d6a31ba325634d87ee6",
    "files": [
      "lib/smtp.c"
    ],
    "message": "Curl_smtp_escape_eob: fix EOB escaping\n\nAs the EOB string can come byte by byte over a series of writes we must\nmatch byte-wise.\n\nBug: http://curl.haxx.se/mail/lib-2011-10/0172.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1319062389
  },
  {
    "id": "ecbb08cea3cd67406c49572eeb4f456dfc94cca2",
    "files": [
      "lib/connect.c"
    ],
    "message": "singleipconnect: unstick the ipv6-connection boolean\n\nPreviously the bit was set before the connection was found working so if\nit would first fail to an ipv6 address and then connect fine to a IPv4\naddress the variable would still be TRUE.\n\nReported by: Thomas L. Shinnick\nBug: http://curl.haxx.se/bug/view.cgi?id=3421912",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1318885978
  },
  {
    "id": "491c5a497cc4cab0a488a0c94eec7d518d57d304",
    "files": [
      "lib/nss.c"
    ],
    "message": "nss: avoid a SIGSEGV with immature version of NSS\n\nBug: https://bugzilla.redhat.com/733685",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1318846424
  },
  {
    "id": "b229c8ca8b34df4e1cb4fe806721b64ea242c4ae",
    "files": [
      "src/tool_operate.c",
      "src/tool_cfgable.h",
      "src/tool_getparam.c"
    ],
    "message": "--show-error: position indepdenent\n\nPreviously we required that -S/--show-error was used _after_\n-s/--silent. This was slightly confusing since we strive to make\narguments as position independent as possible.\n\nNow, you can use them in any order and the result should still be the\nsame.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3424286\nReported by: Andreas Olsson",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1318801199
  },
  {
    "id": "840eff44f2bea71acaa2a227998a97d01aacdc1f",
    "files": [
      "lib/formdata.c",
      "tests/libtest/lib554.c",
      "tests/data/test587",
      "tests/libtest/Makefile.inc"
    ],
    "message": "formdata: ack read callback abort\n\nWhen doing a multipart formpost with a read callback, and that callback\nreturns CURL_READFUNC_ABORT, that return code must be properly\npropagated back and handled accordingly. Previously it would be handled\nas a zero byte read which would cause a hang!\n\nAdded test case 587 to verify. It uses the lib554.c source code with a\nsmall ifdef.\n\nReported by: Anton Bychkov\nBug: http://curl.haxx.se/mail/lib-2011-10/0097.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1318720196
  },
  {
    "id": "1a416cd27a37dac23a36063ced06ecc99fcd41e2",
    "files": [
      "lib/connect.c"
    ],
    "message": "singleipconnect: don't clobber errno\n\nSave the errno value immediately after a connect() failure so that it\nwon't get reset to something else before we read it.\n\nBug: http://curl.haxx.se/mail/lib-2011-10/0066.html\nReported by: Frank Van Uffelen and Fabian Hiernaux",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1318715068
  },
  {
    "id": "56ed07f7df5b743b25711e742d31126ce0b79baf",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp_mail: fixed another memory leak\n\n... introduced in 7f304ab84f560c",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1317675325
  },
  {
    "id": "9dd85bced56f6951107f69e581c872c1e7e3e58e",
    "files": [
      "lib/url.c",
      "lib/multi.c"
    ],
    "message": "multi: progress function abort must close connection\n\nWhen the progress function returns to cancel the request, we must mark\nthe connection to get closed and it must do to the DONE state.\n\ndo_init() must be called as early as possible so that state variables\nfor new connections are reset early. We could otherwise see that the old\nvalues were still there when a connection was to be disconnected very\nearly and it would make it behave wrongly.\n\nBug: http://curl.haxx.se/mail/lib-2011-10/0006.html\nReported by: Vladimir Grishchenko",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1317576519
  },
  {
    "id": "3d19e1eedf73f48e03c68b8ff7e8a7ad178345ad",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_runsingle: change state on callback abort\n\nReported by: Marcin Adamski\nBug: http://curl.haxx.se/mail/lib-2011-09/0329.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1317416390
  },
  {
    "id": "2d6796aac51d8a5963f552b8fa23a2396a987913",
    "files": [
      "lib/select.c",
      "lib/multi.c",
      "docs/libcurl/curl_multi_fdset.3",
      "lib/select.h"
    ],
    "message": "curl_multi_fdset: avoid FD_SET out of bounds\n\nIf a socket is larger than FD_SETSIZE, avoid using FD_SET() on the\nplatforms where this is possible.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3413274\nReported by: Tim Starling",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1316964852
  },
  {
    "id": "745014b7267e8333777807607ba11aa1eb011d46",
    "files": [
      "src/main.c"
    ],
    "message": "POST: always set postfieldsize\n\nWhen we use binary posts and regular ones intermixed on a single command\nline, we cannot do strlen() etc on the data to figure out the length\n(when inserting '&' and more). We must therefore keep track of the post\ndata length. Then we also end up setting the libcurl option with the\nknown size, so that we don't risk that libcurl will do strlen() on the\ndata.\n\nThis has the minor side-effect that --libcurl source codes now always\nwill use CURLOPT_POSTFIELDSIZE but I don't consider that terribly\ndamaging.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3413181\nReported by: Taneli V\ufffdh\ufffdkangas",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1316901778
  },
  {
    "id": "dafa2fc9442825dc5256d65f5af7ccb6fbbb78fd",
    "files": [
      "docs/examples/synctime.c"
    ],
    "message": "Fixed scanf format for WORD = unsigned short.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1316740910
  },
  {
    "id": "fb3845a438cad9ef09eb1b0b86388ce99a726502",
    "files": [
      "src/main.c",
      "src/tool_setopt.h",
      "src/Makefile.vc6",
      "src/vc6curlsrc.dsp",
      "src/tool_libinfo.h",
      "src/tool_doswin.c",
      "src/tool_libinfo.c",
      "packages/Symbian/group/curl.mmp",
      "src/Makefile.inc"
    ],
    "message": "curl tool: reviewed code moved to tool_*.[ch] files\n\nmy_setopt and my_setopt_str no longer ignores curl_easy_setopt result.\n\nFixed some OOM handling issues.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1316719280
  },
  {
    "id": "9ecf53e1544e90aeb2e667fdbbc84f05e341cc07",
    "files": [
      "src/tool_easysrc.h",
      "src/tool_setopt.h",
      "src/Makefile.vc6",
      "src/vc6curlsrc.dsp",
      "src/tool_progress.h",
      "src/tool_setopt.c",
      "src/tool_easysrc.c",
      "src/Makefile.inc",
      "src/main.c",
      "src/tool_cfgable.h",
      "src/tool_progress.c",
      "packages/Symbian/group/curl.mmp"
    ],
    "message": "curl tool: reviewed code moved to tool_*.[ch] files\n\nmy_setopt and my_setopt_str no longer ignores curl_easy_setopt result.\n\nFixed some OOM handling issues.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1316562854
  },
  {
    "id": "42be24af893c6605b15112e50f2516828ad9e24d",
    "files": [
      "lib/curl_gethostname.c"
    ],
    "message": "Curl_gethostname: return un-qualified machine name\n\nFixed Curl_gethostname() so that it always returns the un-qualified\nmachine name rather than being dependent on the socket provider.\n\nNote: The return of getenv(\"CURL_GETHOSTNAME\") is also parsed in case\nthe developer / test harness provided a fully qualified domain name as\nit's value as well.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1316345098
  },
  {
    "id": "e882416e75f61cc2928407ed3173c5106c9b4f29",
    "files": [
      "lib/smtp.c"
    ],
    "message": "SMTP authentication: fix ordering of preferred authentication method\n\nFixed the order of the preferred SMTP authentication method to:\nAUTH CRAM-MD5, AUTH LOGIN then AUTH PLAIN.\n\nAUTH PLAIN should be the last as it slightly more insecure than AUTH LOGIN\nas the username and password are sent together - there is no handshaking\nbetween the client and server like there is with AUTH LOGIN.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1314168925
  },
  {
    "id": "b998d95b4d6de388ddc59a48714a2a1d9a43dc43",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "lib/connect.c",
      "lib/ftp.c"
    ],
    "message": "FTP: fix proxy connect race condition\n\nWhen using the multi interface, a SOCKS proxy, and a connection that\nwouldn't immediately consider itself connected (which my Linux tests do\nby default), libcurl would be tricked into doing _two_ connects to the\nSOCKS proxy when it setup the data connection and then of course the\nsecond attempt would fail miserably and cause error.\n\nThis problem is a regression that was introduced by commit\n4a42e5cdaa344755 that was introduced in the 7.21.7 release.\n\nBug: http://curl.haxx.se/mail/lib-2011-08/0199.html\nReported by: Fabian Keil",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1313703315
  },
  {
    "id": "93ba8b9560f9089379189d94edbab217f1822684",
    "files": [
      "lib/progress.c"
    ],
    "message": "Curl_pgrsStartNow: clear all flags but HIDE\n\nAs bug 3385258 pointed out but I missed up the fix for. This is another\ntake at a fix.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3392101\nReported by: Wu Yongzheng",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1313439198
  },
  {
    "id": "d6f319fb64e63f200bf5d892765c69dc66b8db8c",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c"
    ],
    "message": "nss: start with no database if the selected database is broken\n\nBug: https://bugzilla.redhat.com/728562",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1313412289
  },
  {
    "id": "44b44a751d07b42b4546e3d856a6e761f46dbf63",
    "files": [
      "lib/telnet.c"
    ],
    "message": "telnet: allow programatic use on Windows\n\nSummary of the issue can be found at:\nhttp://curl.haxx.se/mail/lib-2010-04/0367.html\n\nThat patch only updated the unix sockets code - the winsock code was not\nupdated and no longer works the same was as the unix code. This change\nupdates the windows code accordingly.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3163118",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1313357415
  },
  {
    "id": "f0c59c6c2cc584ad4bb65ec1bb9fb1644530ebfc",
    "files": [
      "lib/rtsp.c"
    ],
    "message": "RTSP: GET_PARAMETER requests have a body\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3383692",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1313341674
  },
  {
    "id": "e40c663d36af128890f878bfce780a45bf2158a5",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Curl_retry_request: check return code!\n\nCurl_readrewind() was called without checking its return code, which\ncould lead to badness.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3349227",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1313189476
  },
  {
    "id": "3293150da2aa6ba928b0f848a6b690466b227034",
    "files": [
      "lib/http_ntlm.h",
      "lib/http_ntlm.c"
    ],
    "message": "http NTLM: more adjustments in preparation of code refactoring\n\nUse preprocessor symbol NTLM_BUFSIZE to define private NTLM buffer fixed size.\n\nUse a SessionHandle 'data' pointer variable to ease refactoring.\n\nUpdate NTLM type-* message structure descriptions.\n\nFix some more spacing and typos (Steve Holme).",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1313171510
  },
  {
    "id": "7c21c1c4f981a947f9f91ff685f898d0306589f7",
    "files": [
      "tests/data/test31",
      "lib/cookie.c"
    ],
    "message": "cookie parser: handle 'secure='\n\nThere are two keywords in cookie headers that don't follow the regular\nname=value style: secure and httponly. Still we must support that they\nare written like 'secure=' and then treat them as if they were written\n'secure'. Test case 31 was much extended by Rob Ward to test this.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3349227\nReported by: \"gnombat\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312891325
  },
  {
    "id": "45d883d88df76af778ce7024912d3fdd08d13859",
    "files": [
      "lib/formdata.c",
      "tests/libtest/lib554.c",
      "TODO-RELEASE",
      "tests/data/test554"
    ],
    "message": "CURLFORM_BUFFER: insert filename as documented\n\nA regression where CURLFORM_BUFFER stopped to properly insert the file\nname part in the formpart. Bug introduced in commit f851f768578dc096.\n\nAdded CURLFORM_BUFFER use to test 554 to verify this.\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0176.html\nReported by: Henry Ludemann",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312821903
  },
  {
    "id": "3dcc0df5ccac15275f612f5c275ea320f5f41cd4",
    "files": [
      "lib/socks_sspi.c",
      "TODO-RELEASE",
      "lib/socks.h",
      "lib/socks_gssapi.c",
      "lib/socks.c"
    ],
    "message": "SOCKS: fix the connect timeout\n\nThe connect timeout logic when using SOCKS was done wrong\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0177.html\nReported by: \"Spoon Man\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312795411
  },
  {
    "id": "da3ae20da56676361e959d07956dddc641a4a6a7",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp_doing: bail out on error properly\n\nWhen a failure has been detected we must abort immdiately.\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0177.html\nReported by: \"Spoon Man\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312792989
  },
  {
    "id": "15379f0614c56281b71dfc7b07b5e63955ccd9ac",
    "files": [
      "lib/progress.c"
    ],
    "message": "Curl_pgrsStartNow: clear all bits except HIDE\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3385258\nReported by: Ben Winslow",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312748817
  },
  {
    "id": "17f343290c9888ab5f108b0e4c8f6510cff47959",
    "files": [
      "lib/url.c"
    ],
    "message": "create_conn: mark non-HTTP proxies accordingly\n\nA proxy could be marked 'httpproxy' wrongly before if set with an\nenvironment variable or with the CURLOPT_PROXY option with a socks*://\nprefix or similar.\n\nAdded test 710 to verify\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0194.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312497880
  },
  {
    "id": "5eb2396cd15cbbf73b02ad6bbcc313167330c2b5",
    "files": [
      "src/main.c"
    ],
    "message": "segfault fixed\n\nWhen using both -J and a single -O with multiple URLs, a missing init\ncould cause badness.\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0126.html and\n     http://bugzilla.redhat.com/723075\nReported by: Paul Howarth and Garrett Holmstrom",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312493155
  },
  {
    "id": "519d0c0dd2536b192a233995f4e101a2aa00e5f3",
    "files": [
      "src/main.c",
      "tests/data/Makefile.am",
      "tests/data/test1311",
      "tests/data/test1312"
    ],
    "message": "-J: support ';' in quoted file names\n\nContent-disposition headers can provide file names with semicolons which\npreviously would be cut off at that point.\n\nAdded test case 1311 and 1312 to verify -J.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3375603\nReported by: Peter Hjalmarsson",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1312472925
  },
  {
    "id": "02e59579ef2aee1a94262f96c0a001feef495895",
    "files": [
      "lib/http_ntlm.c"
    ],
    "message": "Fixed a couple of memory leaks in NTLM SSO support",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1311815290
  },
  {
    "id": "cfcca89b761aeb314b6afdc6449e4bedf6df15d6",
    "files": [
      "tests/data/test2005",
      "tests/server/fake_ntlm.c"
    ],
    "message": "Fixed test 2005 to work in out-of-tree builds\n\nAlso, set the test number in the test data file so fake_ntlm can\nbe reused in future tests.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1311709696
  },
  {
    "id": "27b8814017a19009b22e4b51aea1ae711ec20459",
    "files": [
      "lib/progress.c"
    ],
    "message": "progress: reset flags at transfer start\n\nWhen an easy handle is used to download an URI which has no\nContent-Length header (or equivalent) after downloading an URI which\ndoes, the value from the previous transfer is reused and returned by\nCURLINFO_CONTENT_LENGTH_DOWNLOAD. This is because the progress flags\n(used to determine whether such a header was received) are not reset\nbetween transfers.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3370895",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1311367858
  },
  {
    "id": "3f9b4afdfd7dd3ea16e07af98bb324b9f4277696",
    "files": [
      "tests/data/test1130",
      "tests/data/test1131",
      "tests/data/test1129",
      "lib/transfer.c",
      "tests/data/Makefile.am",
      "lib/http.c"
    ],
    "message": "http error response: stop sending when error is received\n\nWhen libcurl has said to the server that there's a POST or PUT coming\n(with a content-length and all) it has to either deliver that amount of\ndata or it needs to close the connection before trying a second request.\n\nAdds test case 1129, 1130 and 1131\n\nThe bug report is about when used with 100-continue, but the change is\nmore generic.\n\nBug: http://curl.haxx.se/mail/lib-2011-06/0191.html\nReported by: Steven Parkes",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1311113321
  },
  {
    "id": "d007c3ca76cf0587a3222279ebda0f3a8727807f",
    "files": [
      "lib/http_ntlm.c"
    ],
    "message": "sso_ntlm_initiate: unassigned variable\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0109.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1311112461
  },
  {
    "id": "6e3285d5b197fb02d41b31a2ae78a57e5993248e",
    "files": [
      "lib/curl_gssapi.c",
      "lib/curl_gssapi.h"
    ],
    "message": "curl_gssapi: Guard files with HAVE_GSSAPI.\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0074.html\nReported and fix suggested by: Ben Greear",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1310616963
  },
  {
    "id": "44b58472378097faf9632d0dd9b4e478fb3433ed",
    "files": [
      "lib/krb5.c",
      "lib/http_negotiate.c",
      "lib/gssapi.c",
      "lib/curl_gssapi.h",
      "lib/socks_gssapi.c",
      "lib/gssapi.h",
      "lib/Makefile.inc",
      "lib/curl_gssapi.c"
    ],
    "message": "gssapi: rename our files to avoid conflicts\n\ngssapi.h is used as a header name by Heimdal-style GSSAPI so it would\nconflict with a private header using that name, and while renaming the\nheader I figured we should name the .c file accordingly as well.\n\nBug: http://curl.haxx.se/mail/lib-2011-07/0071.html\nReported by: Ben Greear",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1310590494
  },
  {
    "id": "902d3dc33df617d07005755b40019890769943b1",
    "files": [
      "src/main.c"
    ],
    "message": "help output: more gnu like output\n\nFirst, the -J/--remote-header-name was wrongly sorted in the --help\noutput as pointed out in bug report #3349271.\n\nThen, I changed the format of the texts to follow the man page better in\nthat it now uses \"-A, --long\" intead of \"-A/--long\". I also made all\nadditional arguments get written as in \"-A, --long FILENAME\" instead of\nthe previous \"<filename>\" style.\n\nReported by: Herve Amblard\nBug: http://curl.haxx.se/bug/view.cgi?id=3349271",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1309723998
  },
  {
    "id": "2e2e5f247abeabc1965350f66503d35e9c07fe07",
    "files": [
      "lib/http_negotiate_sspi.c"
    ],
    "message": "get_gss_name: proxy auth without proxy set equals error\n\nPreviously it would access a NULL pointer and die.\n\nBug: http://curl.haxx.se/mail/lib-2011-06/0170.html\nReported by: Christian Hagele",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1309343257
  },
  {
    "id": "78480892cdbbc67f419d0acfdf1865043bc31f62",
    "files": [
      "tests/unit/unit1300.c"
    ],
    "message": "Fixed test 1300 to pass the memory torture test",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1308944010
  },
  {
    "id": "f851f768578dc096c561d57ba07ffd1004d504c0",
    "files": [
      "lib/formdata.c",
      "tests/libtest/lib554.c",
      "tests/data/test554"
    ],
    "message": "CURLFORM_STREAM: acknowledge CURLFORM_FILENAME\n\nThe CURLFORM_STREAM is documented to only insert a file name (and thus\nlook like a file upload) in the part if CURLFORM_FILENAME is set, but in\nreality it always inserted a filename=\"\" and if CURLFORM_FILENAME wasn't\nset, it would insert insert rubbish (or possibly crash).\n\nThis is now fixed to work as documented, and test 554 has been extended\nto verify this.\n\nReported by: Sascha Swiercy\nBug: http://curl.haxx.se/mail/lib-2011-06/0070.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1308342222
  },
  {
    "id": "0aedccc18a33a7785350d8d622ef273c727690cf",
    "files": [
      "lib/formdata.c",
      "tests/data/test1308",
      "tests/unit/unit1308.c"
    ],
    "message": "curl_formget: fix FILE * leak\n\nProperly deal with the fact that the last fread() call most probably is\na short read, and when using callbacks in fact all calls can be short\nreads. No longer consider a file read done until it returns a 0 from the\nread function.\n\nReported by: Aaron Orenstein\nBug: http://curl.haxx.se/mail/lib-2011-06/0048.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1307997120
  },
  {
    "id": "b688f2c2603df54e752dff50902305c1aa3a9364",
    "files": [
      "tests/unit/unit1309.c"
    ],
    "message": "Fixed test 1309 to pass the torture test\n\nRemoving dynamic allocations also simplifies the test.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1307776209
  },
  {
    "id": "f551aa5c1676a8a7d9b0683f047cd6f3fa1b4676",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES"
    ],
    "message": "disconnect: wipe out the keeps_speed time stamp\n\nWhen closing a connection, the speedchecker's timestamp is now deleted\nso that it cannot accidentally be used by a fresh connection on the same\nhandle when examining the transfer speed.\n\nBug: https://bugzilla.redhat.com/679709",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1307485421
  },
  {
    "id": "017ee34bbad9885e524f735401be7ad859cdbd84",
    "files": [
      "lib/url.c"
    ],
    "message": "create_conn: only switch protocol handler if necessary\n\nWhen switching to HTTP because a HTTP proxy is being used, the existing\nhandler is now checked if it already is \"compatible\". This allows the https\nhandler remain while other non-http handlers will be redirected.\n\nBug: http://curl.haxx.se/mail/lib-2011-05/0214.html\nReported by: Jerome Robert",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1306331858
  },
  {
    "id": "d4e000906ac4ef243258a5c9a819a7cde247d16a",
    "files": [
      "lib/gtls.c"
    ],
    "message": "GnuTLS handshake: fix timeout\n\nCommit cbf4961bf3e garbled the timeout handling while doing SSL\nhandshaking (in an attempt at fixing another bug). This puts sanity\nback.\n\nBug: http://curl.haxx.se/mail/lib-2011-05/0167.html\nReported by: Ethan Glasser Camp",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1305744522
  },
  {
    "id": "212d8c8f652ee4c88b3f4dc6f73f70eabc3a5a71",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Fixed LDAP after RTSP readwrite change",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1304714904
  },
  {
    "id": "7d94af497d27543337e18012518e2a27a46c35a1",
    "files": [
      "lib/ssh.h",
      "lib/ssh.c"
    ],
    "message": "SSH: set non-blocking earlier\n\nIntroduce an INIT state for the SSH state machine and set libssh2\nnon-blocking in that so that it is set properly before\nlibssh2_session_startup() is called.\n\nBug: http://curl.haxx.se/mail/archive-2011-05/0001.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1304283759
  },
  {
    "id": "c4bc1d473f324220738f2c60984b3a8ee198bc38",
    "files": [
      "docs/examples/anyauthput.c"
    ],
    "message": "anyauthput.c: stdint.h must not be included unconditionally\n\nAs it is already included by curlbuild.h if it exists on the platform it\nwas included here superfluously anyway.\n\nReported by: Dagobert Michelsen\nBug: http://curl.haxx.se/bug/view.cgi?id=3294509",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1304021645
  },
  {
    "id": "4a42e5cdaa344755c6bf5317908849619f61798b",
    "files": [
      "lib/connect.c",
      "tests/data/DISABLED",
      "lib/multi.c",
      "tests/data/test564"
    ],
    "message": "multi-socks: fix connect to proxy\n\nWhen connecting to a socks or similar proxy we do the proxy handshake at\nonce when we know the TCP connect is completed and we only consider the\n\"connection\" complete after the proxy handshake. This fixes test 564\nwhich is now no longer considered disabled.\n\nReported by: Dmitri Shubin\nBug: http://curl.haxx.se/mail/lib-2011-04/0127.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1303978009
  },
  {
    "id": "e9542ccab679cba38dd2ea0318bf05a68b59bc55",
    "files": [
      "lib/hostip.c"
    ],
    "message": "hostip: comment fixed to state current situation",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1303753856
  },
  {
    "id": "24d84da0731f680a9b19653a450d4843f190d6b8",
    "files": [
      "lib/url.c",
      "lib/hostthre.c",
      "lib/hostsyn.c",
      "lib/easy.c",
      "lib/hostares.c",
      "lib/hostip.h"
    ],
    "message": "asynch resolvers: cleanup\n\nFixed indents, coding conventions and white space edits.\n\nModified the c-ares completion callback function to again NOT read the\nconn data when the ares handle is being taken down as then it may have\nbeen freed already.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1303753636
  },
  {
    "id": "9230be0797cc7d155240fd38d07bee041527bbc2",
    "files": [
      "lib/transfer.c"
    ],
    "message": "transfer.c: Fixed indentation in readwrite_data.",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1303397753
  },
  {
    "id": "c2c89481909de99e37f4aee46c8bc1b1358a5988",
    "files": [
      "lib/http.c"
    ],
    "message": "Curl_http_connect: detect HTTPS properly after CONNECT\n\nlibcurl failed to check the correct struct for HTTPS after CONNECT was\nissued to the proxy, so it didn't do the TLS handshake and subsequently\nfailed the connection. A regression released in 7.21.5 (introduced\naround commit 8831000bc07de).\n\nBug: http://curl.haxx.se/mail/lib-2011-04/0134.html\nReported by: Josue Andrade Gomes",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1303332604
  },
  {
    "id": "6cfbf21acfd3ddeb87cea10a06dd6190e838f662",
    "files": [
      "lib/sslgen.c"
    ],
    "message": "Curl_ssl_shutdown: restore send/recv pointers\n\nWhen going back from SSL, put the send/recv function pointers back to\nthe plain versions.\n\nBug: http://curl.haxx.se/mail/lib-2011-04/0070.html\nReported by: Mehmet Bozkurt",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1302905785
  },
  {
    "id": "f01df1979812a1870b54ec676688137f61ab36c0",
    "files": [
      "lib/rtsp.c",
      "lib/connect.c"
    ],
    "message": "checkconnection: don't call with NULL pointer\n\nWhen checking if an existing RTSP connection is alive or not, the\ncheckconnection function might be called with a SessionHandle pointer\nbeing NULL and then referenced causing a crash. This happened only using\nthe multi interface.\n\nReported by: Tinus van den Berg\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3280739",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1302520675
  },
  {
    "id": "1a6e7da13d1bf14c09cb0509c114ba9bd3cac79f",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c"
    ],
    "message": "nss: allow to use multiple client certificates for a single host\n\nIn case a client certificate is used, invalidate SSL session cache\nat the end of a session.  This forces NSS to ask for a new client\ncertificate when connecting second time to the same host.\n\nBug: https://bugzilla.redhat.com/689031",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1302262526
  },
  {
    "id": "d54668eb00c31e3eaf6987c5f4184aea98cf227e",
    "files": [
      "tests/data/Makefile.am",
      "tests/data/test584",
      "lib/transfer.c"
    ],
    "message": "HTTP pipelining: Fix handling of zero-length responses\n\nAlso add test case 584 for the same\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3214223",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1302178687
  },
  {
    "id": "d3408d05935e61a303b5761cc5aa029eb54408f8",
    "files": [
      "lib/nss.c"
    ],
    "message": "nss: fix a crash within SSL_AuthCertificate()\n\nThe bug was introduced in 806dbb0 (a wrong value was passed in as the\nfirst argument to the default callback in our wrapper).",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1301934859
  },
  {
    "id": "058fb3355715747e754ede5395c52390ec3394be",
    "files": [
      "lib/transfer.c"
    ],
    "message": "retry-request: rewind if data was sent\n\nWhen libcurl sends a HTTP request on a re-used connection and detects it\nbeing closed (ie no data at all was read from it), it is important to\nrewind if any data in the request was sent using the read callback or\nwas read from file, as otherwise the retried request will be broken.\n\nReported by: Chris Smowton\nBug: http://curl.haxx.se/bug/view.cgi?id=3195205",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1300659885
  },
  {
    "id": "8702ebff7494c96c4aa41f08de4cfe140d5d4db3",
    "files": [
      "tests/unit/unit1305.c"
    ],
    "message": "unit1305: Fixed the test to match our coding style.",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1300633405
  },
  {
    "id": "409867e62bf1b12e0fa0d39007256b5807a60cea",
    "files": [
      "lib/pop3.c"
    ],
    "message": "pop3: fixed memory leak in an error retrieval case",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1300404492
  },
  {
    "id": "806dbb022b8a595405a740131a30fa0cf4523645",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "docs/libcurl/curl_easy_setopt.3"
    ],
    "message": "nss: do not ignore value of CURLOPT_SSL_VERIFYPEER\n\nWhen NSS-powered libcurl connected to a SSL server with\nCURLOPT_SSL_VERIFYPEER equal to zero, NSS remembered that the peer\ncertificate was accepted by libcurl and did not ask the second time when\nconnecting to the same server with CURLOPT_SSL_VERIFYPEER equal to one.\n\nThis patch turns off the SSL session cache for the particular SSL socket\nif peer verification is disabled.  In order to avoid any performance\nimpact, the peer verification is completely skipped in that case, which\nmakes it even faster than before.\n\nBug: https://bugzilla.redhat.com/678580",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1300200504
  },
  {
    "id": "60172a0446bbe3f8bf1c7b066a03b7febfc96ceb",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP: gracefully handle shutdown early\n\nWhen using the multi interface and a handle using SFTP was removed very\nearly on, we would get a segfault due to the code assumed data was there\nthat hadn't yet been setup.\n\nBug: http://curl.haxx.se/mail/lib-2011-03/0066.html\nReported by: Saqib Ali",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1299971759
  },
  {
    "id": "29f0898525bf48292606f098bee33ce8f1f58781",
    "files": [
      "lib/url.c",
      "lib/curl_ldap.h",
      "lib/version.c"
    ],
    "message": "Fixed libcurl to honour the --disable-ldaps configure option",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1299548733
  },
  {
    "id": "a8aab6e7d45fe1e325100c6c5938a4258327dd08",
    "files": [
      "tests/unit/unit1300.c"
    ],
    "message": "Fixed test 1300 to pass the torture test",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1299275644
  },
  {
    "id": "17de1cc3827c7229db3263cc18fdd186bccd1e6e",
    "files": [
      "lib/ssh.c"
    ],
    "message": "ssh_connect: treat libssh2 return code better\n\nlibssh2_knownhost_readfile() returns a negative value on error or\notherwise number of parsed known hosts - this was previously not\ndocumented correctly in the libssh2 man page for the function.\n\nBug: http://curl.haxx.se/mail/lib-2011-02/0327.html\nReported by: murat",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1298714444
  },
  {
    "id": "7aa2d10e0db82a55eba6b5723307d915939cb2fb",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c"
    ],
    "message": "nss: do not ignore failure of SSL handshake\n\nFlaw introduced in fc77790 and present in curl-7.21.4.\nBug: https://bugzilla.redhat.com/669702#c16",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1298377197
  },
  {
    "id": "d85cae922575d8966529fee364e6d611e3062a99",
    "files": [
      "lib/url.c",
      "lib/multi.c"
    ],
    "message": "multi: better failed connect treatment\n\nWhen failing to connect the protocol during the CURLM_STATE_PROTOCONNECT\nstate, Curl_done() has to be called with the premature flag set TRUE as\nfor the pingpong protocols this can be important.\n\nWhen Curl_done() is called with premature == TRUE, it needs to call\nCurl_disconnect() with its 'dead_connection' argument set to TRUE as\nwell so that any protocol handler's disconnect function won't attempt to\nuse the (control) connection for anything.\n\nThis problem caused the pingpong protocols to fail to disconnect when\nSTARTTLS failed.\n\nReported by: Alona Rossen\nBug: http://curl.haxx.se/mail/lib-2011-02/0195.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1298066515
  },
  {
    "id": "4e2ac742c9af30533afa2605db5527dbfab0ee35",
    "files": [
      "lib/imap.c"
    ],
    "message": "imap: Fixed typo in a comment.",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1297138535
  },
  {
    "id": "2d356ba1683d47ebbd08e9d6e4bb4acbb8729fee",
    "files": [
      "lib/hostares.c"
    ],
    "message": "ares_query_completed_cb: don't touch invalid data\n\nWhen this callback is called due to the destruction of the ares handle,\nthe connection pointer passed in as an argument may no longer pointing\nto valid data and this function doesn't need to do anything with it\nanyway so we make sure it doesn't.\n\nBug: http://curl.haxx.se/mail/lib-2011-01/0333.html\nReported by: Vsevolod Novikov",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1296135667
  },
  {
    "id": "dc0a7161f868ae2f8094289f45278cc702eafbd9",
    "files": [
      "lib/urldata.h",
      "lib/nss.c"
    ],
    "message": "nss: avoid memory leaks and failure of NSS shutdown\n\n... in case more than one CA is loaded.\n\nBug: https://bugzilla.redhat.com/670802",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1296123258
  },
  {
    "id": "dbcaa0065719acc0383307f13d02d3d0c9b5c635",
    "files": [
      "tests/libtest/lib507.c",
      "tests/data/test580",
      "lib/http.c"
    ],
    "message": "HTTP: memory leak on multiple Location:\n\nThe HTTP parser allocated memory on each received Location: header\nwithout properly freeing old data. Starting now, the code only considers\nthe first Location: header and will blissfully ignore subsequent ones.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3165129\nReported by: Martin Lemke",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1295953610
  },
  {
    "id": "73b518f269d3b4af9368aa9d6c851624d6bcc955",
    "files": [
      "tests/unit/unit1300.c"
    ],
    "message": "Fixed C++ style comment not allowed in ISO C90.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1295686329
  },
  {
    "id": "fc77790bcd451f32a0f60a5e4073b2be54fb40e9",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "docs/libcurl/curl_easy_setopt.3",
      "docs/curl.1"
    ],
    "message": "nss: fix a bug in handling of CURLOPT_CAPATH\n\n... and update the curl.1 and curl_easy_setopt.3 man pages such that\nthey do not suggest to use an OpenSSL utility if curl is not built\nagainst OpenSSL.\n\nBug: https://bugzilla.redhat.com/669702",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1295357449
  },
  {
    "id": "08a65b10fbbee20926211a9deb99b1ce8328d91a",
    "files": [
      "lib/connect.c"
    ],
    "message": "connect: use UDP correctly\n\nThe idea that the protocol and socktype is part of name resolving in the\nlibc functions is nuts. We keep the name resolver functions assume\nTCP/STREAM and we make sure that when we want to connect to a UDP\nservice we use the correct UDP/DGRAM set instead. This bug was because\nthe ->protocol field was not always set correctly.\n\nThis bug was only affecting ipv6-disabled non-cares non-threaded builds.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3154436\nReported by: \"dperham\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1294701276
  },
  {
    "id": "a9cd4f4ed49e1a0b79f8fc6a0cb129331fa04f23",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gtls: fix memory leak\n\nBug: http://curl.haxx.se/mail/lib-2011-01/0079.html\nReported by: Quinn Slack",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1294510468
  },
  {
    "id": "d8f6d1c3341cfc5a1263e1f3f339b64e10b75dc3",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "docs/libcurl/curl_easy_setopt.3",
      "docs/curl.1"
    ],
    "message": "nss: avoid CURLE_OUT_OF_MEMORY given a file name without any slash\n\nBug: https://bugzilla.redhat.com/623663",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1294158043
  },
  {
    "id": "c0c89cd44ed30385017d585df6429471f6b89617",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "get_cert_chain: support larger data sets\n\n512 bytes turned out too short for some data, so now we allocate a\nlarger buffer instead\n\nBug: http://curl.haxx.se/mail/archive-2011-01/0002.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1294132828
  },
  {
    "id": "2b3fbc8cdb3ddaec159d4ad693474eb84e5ee34d",
    "files": [
      "lib/nss.c"
    ],
    "message": "Curl_nss_connect: avoid PATH_MAX\n\nSince some systems don't have PATH_MAX and it isn't that clever to\nassume a fixed maximum path length, the code now allocates buffer space\ninstead of using stack.\n\nReported by: Samuel Thibault\nBug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=608521",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1294008183
  },
  {
    "id": "b6a3e2be8e1bbb183597399c0dcdaa67022b958e",
    "files": [
      "lib/url.c",
      "lib/hostasyn.c",
      "lib/hostip.h"
    ],
    "message": "c-ares: fix cancelled resolves\n\nWhen built IPv6-enabled, we could do Curl_done() with one of the two\nresolves having returned already, so when ares_cancel() is called the\nresolve callback ends up doing funny things (sometimes resulting in a\nsegfault) since it would try to actually store the previous resolve even\nthough we're shutting down the resolve.\n\nThis bug was introduced in commit 8ab137b2bc9630ce so it hasn't been\nincluded in any public release.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3145445\nReported by: Pedro Larroy",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1293440504
  },
  {
    "id": "49465fffdb37b91ee5a0ad2601ea9657e5cd8915",
    "files": [
      "lib/cookie.c",
      "tests/data/test61"
    ],
    "message": "cookies: tricked dotcounter fixed\n\nProviding multiple dots in a series in the domain field (domain=..com) could\ntrick the cookie engine to wrongly accept the cookie believing it to be\nfine. Since the tailmatching would then match all .com sites, the cookie would\nthen be sent to all of them.\n\nThe code now requires at least one letter between each dot for them to be\ncounted. Edited test case 61 to verify this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1293141152
  },
  {
    "id": "a834e004544cff32f933b899a1f6d29963bef0e1",
    "files": [
      "lib/axtls.c"
    ],
    "message": "Fixed include: memory.h -> curl_memory.h.",
    "committer": {
      "email": "lists@gknw.net",
      "name": "Guenter Knauf"
    },
    "date": 1292985253
  },
  {
    "id": "8f50a404f9752acb7262b1854e1e29fcca0fb3fb",
    "files": [
      "docs/examples/chkspeed.c"
    ],
    "message": "chkspeed: bad strtol() call for -M option\n\nBug: http://curl.haxx.se/mail/lib-2010-12/0192.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1292540988
  },
  {
    "id": "a865bd9fbaaa43e5cbccb9f14d62fc346053c701",
    "files": [
      "lib/url.c"
    ],
    "message": "IsPipeliningPossible: only for HTTP\n\nThe function that checks if pipelining is possible now requires the HTTP\nbit to be set so that it doesn't mistakenly tries to do it for other\nprotocols.\n\nBug: http://curl.haxx.se/mail/lib-2010-12/0152.html\nReported by: Dmitri Shubin",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1292244290
  },
  {
    "id": "0fd439ebaceed1ff049a4173e98da1ec2b8d0ed0",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi_runsingle: don't timeout completed handles\n\nThe generic timeout code must not check easy handles that are already\ncompleted. Going to completed (again) within there risked decreasing the\nnumber of alive handles again and thus it could go negative.\n\nThis regression bug was added in 7.21.2 in commit ca10e28f06f1",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1292241108
  },
  {
    "id": "315e5277dc297407d98e0b017fc325e86657738a",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "ossl_connect_common: detect connection re-use\n\nossl_connect_common() now checks whether or not 'struct\nconnectdata->state' is equal 'ssl_connection_complete' and if so, will\nreturn CURLE_OK with 'done' set to 'TRUE'. This check prevents\nossl_connect_common() from creating a new ssl connection on an existing\nssl session which causes openssl to fail when it tries to parse an\nencrypted TLS packet since the cipher data was effectively thrown away\nwhen the new ssl connection was created.\n\nBug: http://curl.haxx.se/mail/lib-2010-11/0169.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1291642878
  },
  {
    "id": "2271b60b71c4e6d3337ddde0fae81ad6bb6fe2c3",
    "files": [
      "lib/hostares.c"
    ],
    "message": "Curl_wait_for_resolv: correct timeout\n\nWhen looping in this function and checking for the timeout being\nexpired, it was not updating the reference time when calculating the\ntimediff since previous round which made it think each subsequent loop\nto have taken longer than it actually did.\n\nI also modified the function to use the generic Curl_timeleft() function\ninstead of the custom logic.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3112579",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1291588781
  },
  {
    "id": "c2bfe60086078f1dc079bdcc989bf03bd6b2ee22",
    "files": [
      "lib/sendf.c"
    ],
    "message": "Curl_send/recv_plain: return errno on failure\n\nWhen send() and recv() fail, we now store the errno value to allow the\napp to access it.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3128121\nReported by: Yuri",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1291586651
  },
  {
    "id": "a83870ef9d1758de371551844efa4f17dda71581",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c"
    ],
    "message": "Detect socket errors in GnuTLS on Windows\n\nOn Windows, translate WSAGetLastError() to errno values as GNU\nTLS does it internally, too. This is necessary because send() and\nrecv() on Windows don't set errno when they fail but GNU TLS\nexpects a proper errno value.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3110991",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1290202447
  },
  {
    "id": "cbf4961bf3e42d88f6489f981efd509faa86f501",
    "files": [
      "lib/gtls.c"
    ],
    "message": "gnutls->handshake: improved timeout handling\n\nWhen no timeout is set, we call the socket_ready function with a timeout\nvalue of 0 during handshake, which makes it loop too much/fast in this\nfunction. It also made this function return CURLE_OPERATION_TIMEDOUT\nwrongly on a slow handshake.\n\nHowever, the particular bug report that highlighted this problem is not\nsolved by this fix, as this fix only makes the more proper error get\nreported instead.\n\nBug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=594150\nReported by: Johannes Ernst",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1289734949
  },
  {
    "id": "8d59d69449c2a86c478699a50d920541aa106201",
    "files": [
      "lib/krb4.h",
      "lib/urldata.h",
      "lib/url.c",
      "lib/ftp.c",
      "lib/krb4.c",
      "lib/pingpong.c",
      "lib/security.c"
    ],
    "message": "security: tighten enum protection_level usage.\n\nWhile changing Curl_sec_read_msg to accept an enum protection_level\ninstead of an int, I went ahead and fixed the usage of the associated\nfields.\n\nSome code was assuming that prot_clear == 0. Fixed those to use the\nproper value. Added assertions prior to any code that would set the\nprotection level.",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1289686363
  },
  {
    "id": "592df29f9cdf6274fa85f1bf060e6ca57e50e675",
    "files": [
      "lib/tftp.c"
    ],
    "message": "TFTP: resend the correct data\n\nI found a bug in tftp_tx() in tftp.c. If a data resend is done after\nreception of an ACK/OACK, the call to sendto is wrong.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1289398098
  },
  {
    "id": "12b2412c5217b105a86ccda57f261a33fcfd4d62",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c"
    ],
    "message": "ftp: treat server's response 421 as CURLE_OPERATION_TIMEDOUT\n\nBug: https://bugzilla.redhat.com/650255\nReported by: Simon H.",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1289322800
  },
  {
    "id": "c6b97a8278f3c2297a99bee877cc0a5bb13e5761",
    "files": [
      "tests/data/test1036",
      "tests/data/test122",
      "lib/ftp.c",
      "tests/data/test110"
    ],
    "message": "ftp: close connection as soon as ABOR has been sent\n\n... and do not send ABOR unless really necessary.\n\nBug: https://bugzilla.redhat.com/649347\nReported by: Simon H.",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1289245852
  },
  {
    "id": "809a748124cabb781b654f40e30fa51ae565f7c8",
    "files": [
      "docs/examples/fopen.c"
    ],
    "message": "fopen.c: re-indented, fixed previous mistake\n\nI've made the code intended using curl-style now to look more like other\nexamples.\n\nMy previous \"fix\" was a bit too invasive but is now fixed again.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1288867430
  },
  {
    "id": "0c8e5f7e6ac13c43b8cbab8dcada56d3f27a2a89",
    "files": [
      "tests/data/test1036",
      "lib/ftp.c",
      "tests/data/test110",
      "tests/data/test122",
      "tests/data/test1057",
      "tests/data/test135"
    ],
    "message": "ftp: prevent server from hanging on closed data connection\n\nSome FTP servers (e.g. Pure-ftpd) end up hanging if we close the data\nconnection before transferring all the requested data.  If we send ABOR\nin that case, it prevents the server from hanging.\n\nBug: https://bugzilla.redhat.com/643656\nReported by: Pasi Karkkainen, Patrick Monnerat",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1288346479
  },
  {
    "id": "98d9dc78407eff15ebf566fe08df2e1b4fd18baf",
    "files": [
      "lib/url.c",
      "tests/data/test1118",
      "tests/data/Makefile.am",
      "tests/data/test191"
    ],
    "message": "URL-parsing: consider ? a divider\n\nThe URL parser got a little stricter as it now considers a ? to be a\nhost name divider so that the slightly sloppier URLs work too. The\nproblem that made me do this change was the reported problem with an URL\nlike: www.example.com?email=name@example.com This form of URL is not\nreally a legal URL (due to the missing slash after the host name) but is\nwidely accepted by all major browsers and libcurl also already accepted\nit, it was just the '@' letter that triggered the problem now.\n\nThe side-effect of this change is that now libcurl no longer accepts the\n?  letter as part of user-name or password when given in the URL, which\nit used to accept (and is tested in test 191). That letter is however\nmentioned in RFC3986 to be required to be percent encoded since it is\nused as a divider.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3090268",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1287512406
  },
  {
    "id": "b0ccd24a729294da5f5b58ad595593068415d6df",
    "files": [
      "lib/url.c"
    ],
    "message": "Curl_setopt: disallow CURLOPT_USE_SSL without SSL support\n\nIn order to avoid for example the pingpong protocols to issue STARTTLS\n(or equivalent) even though there's no SSL support built-in.\n\nReported by: Sune Ahlgren\nBug: http://curl.haxx.se/mail/archive-2010-10/0045.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1287088400
  },
  {
    "id": "61f4cdb73ae489e9a756d567bfe99dc2471735b7",
    "files": [
      "src/urlglob.c"
    ],
    "message": "globbing: fix crash on unballanced open brace\n\nHaving an open brace without a closing brace caused a segfault.\n\nHaving a closing brace too many caused a silent error to occur, which\ncaused curl to bail out and return an error code but no error message\nwas shown. It does now!\n\nAll error message outputs no longer wrongly get _two_ newlines written\nafter the error message.\n\nReported by: Vlad Ureche\nBug: http://curl.haxx.se/bug/view.cgi?id=3083942",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1286572354
  },
  {
    "id": "79cd7ef9ab52de98bffcbd1c8db6103ff985a263",
    "files": [
      "lib/krb5.c"
    ],
    "message": "krb5-gssapi: Made the function always return a value.\n\nkr5_auth missed a final 'return' statement. This is not an error in\ngcc but can lead to potential bugs.",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1286038842
  },
  {
    "id": "2ae6c47d5dfdff2d6d884284beb6b0322e8ac671",
    "files": [
      "tests/data/test194",
      "tests/data/test92",
      "lib/http.c"
    ],
    "message": "HTTP: remove special case for 416\n\nIt was pointed out that the special case libcurl did for 416 was\nincorrect and wrong. 416 is not really different to other errors so the\nresponse body must be handled like for other errors/http responses.\n\nReported by: Chris Smowton\nBug: http://curl.haxx.se/bug/view.cgi?id=3076808",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285971768
  },
  {
    "id": "5f0ae7a0626cbe70944c67065292cbb056d0a7c9",
    "files": [
      "lib/ssh.c"
    ],
    "message": "SFTP: avoid downloading negative sizes!\n\nIt is still not clarified exactly why this happens, but libssh2\nsometimes report a negative file size for the remote SFTP file and that\ndeeply confuses libcurl (or crashes it) so this precaution is added to\navoid badness.\n\nReported by: Ernest Beinrohr\nBug: http://curl.haxx.se/bug/view.cgi?id=3076430",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285880917
  },
  {
    "id": "1e2056fecb30c5184b70c5d6ad3becf9c200ac09",
    "files": [
      "lib/security.c"
    ],
    "message": "security.c: Fix ftp_send_command.\n\nMy use of va_args was completely wrong. Fixed the usage so that\nwe send the right commands!",
    "committer": {
      "email": "julien.chaffraix@gmail.com",
      "name": "Julien Chaffraix"
    },
    "date": 1285736724
  },
  {
    "id": "5df13c31735fa089d5344fde13b66ace1ea473d1",
    "files": [
      "tests/data/test1015",
      "lib/escape.c",
      "tests/data/test58"
    ],
    "message": "curl_easy_escape: don't escape \"unreserved\" characters\n\nAccording to RFC3986 section 2.3 the letters -, ., _ and ~ should not be\npercent-encoded.\n\nReported by: Miguel Diaz\nBug: http://curl.haxx.se/mail/lib-2010-09/0227.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285710572
  },
  {
    "id": "4d58f97f604bfef5b2cb7538f9bbc925c141622f",
    "files": [
      "tests/data/test517",
      "lib/parsedate.c",
      "tests/libtest/lib517.c"
    ],
    "message": "parsedate: allow time specified without seconds\n\nThe date format in RFC822 allows that the seconds part of HH:MM:SS is\nleft out, but this function didn't allow it. This change also includes a\nmodified test case that makes sure that this now works.\n\nReported by: Matt Ford\nBug: http://curl.haxx.se/bug/view.cgi?id=3076529",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285599242
  },
  {
    "id": "6bf2014745bb2aad4ce80c7a8f4cf924fb782817",
    "files": [
      "lib/tftp.c"
    ],
    "message": "TFTP: Work around tftpd-hpa upload bug\n\ntftpd-hpa has a bug where it will send an incorrect ack when the block\ncounter wraps and tftp options have been sent. Work around that by\naccepting an ack for 65535 when we're expecting one for 0.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285536656
  },
  {
    "id": "b684ccd8b1c52098cd35c8284dc88db7b51772e7",
    "files": [
      "lib/security.c"
    ],
    "message": "security.c: Made block_read and sec_get_data return CURLcode.\n\nTo do so, made block_read call Curl_read_plain instead of read.\n\nWhile changing them renamed block_read to socket_read and sec_get_data\nto read_data to better match their function.\n\nAlso fixed a potential memory leak in block_read.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285191276
  },
  {
    "id": "19f45eaa799a77d5c67cbefe3342f27774e2e6f8",
    "files": [
      "docs/INTERNALS",
      "lib/easy.c",
      "m4/curl-confopts.m4"
    ],
    "message": "duphandle: use ares_dup()\n\ncurl_easy_duphandle() was not properly duping the ares channel. The\nares_dup() function was introduced in c-ares 1.6.0 so by starting to use\nthis function we also raise the bar and require c-ares >= 1.6.0\n(released Dec 9, 2008) for such builds.\n\nReported by: Ning Dong\nBug: http://curl.haxx.se/mail/lib-2010-08/0318.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1285080074
  },
  {
    "id": "a76f852ca41b9972eff1ddf52d5de8a90cfad521",
    "files": [
      "lib/transfer.c"
    ],
    "message": "timeout: use the correct start value as offset\n\nRodric provide an awesome recipe that proved libcurl didn't timeout at\nthe requested time - it instead often timed out at [connect time] +\n[timeout time] instead of the documented and intended [timeout time]\nonly. This bug was due to the code using the wrong base offset when\ncomparing against \"now\". I could also take the oppurtinity to simplify\nthe code by properly using of the generic help function for this:\nCurl_timeleft.\n\nReported by: Rodric Glaser\nBug: http://curl.haxx.se/bug/view.cgi?id=3061535",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1284757353
  },
  {
    "id": "3880dd3741204965dde312643a18190a24c66ba9",
    "files": [
      "lib/connect.c"
    ],
    "message": "Curl_timeleft: avoid returning \"no timeout\" by mistake\n\nAs this function uses return code 0 to mean that there is no timeout, it\nneeds to check that it doesn't return a time left value that is exactly\nzero. It could lead to libcurl doing an extra 1000 ms select() call and\nthus not timing out as accurately as it should.\n\nI fell over this bug when working on the bug 3061535 but this fix does\nnot correct that problem alone, although this is a problem that needs to\nbe fixed.\n\nReported by: Rodric Glaser\nBug: http://curl.haxx.se/bug/view.cgi?id=3061535",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1284757088
  },
  {
    "id": "18a758d9078f506ecfb995ef5ece46a83887a5da",
    "files": [
      "lib/transfer.c"
    ],
    "message": "chunky parser: only rewind if needed\n\nThe code reading chunked encoding attempts to rewind the code if it had\nread more data than the chunky parser consumes. The rewinding can fail\nand it will then cause an error. This change now makes the rewinding\nonly happen if pipelining is in use - as that's the only time it really\nneeds to be done.\n\nBug: http://curl.haxx.se/mail/lib-2010-08/0297.html\nReported by: Ron Parker",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1283876943
  },
  {
    "id": "ca10e28f06f168ec433d376ee8fd64a25b317f0f",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: fixes for timing out handles\n\nAdd a timeout check for handles in the state machine so that they will\ntimeout in all states disregarding what actions that may or may not\nhappen.\n\nFixed a bug in socket_action introduced recently when looping over timed\nout handles: it wouldn't assign the 'data' variable and thus it wouldn't\nproperly take care of handles.\n\nIn the update_timer function, the code now checks if the timeout has\nbeen removed and then it tells the application. Previously it would\nalways let the remaining timeout(s) just linger to expire later on.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1283352743
  },
  {
    "id": "3af696f7c444a32cdd9e183a4ed0b543f09fef86",
    "files": [
      "lib/transfer.c"
    ],
    "message": "multi: set timeouts when transfer begins\n\nWhen a new transfer is about to start we now set the proper timeouts to\nexpire for the multi interface if they are set for the handle. This is a\nfollow-up bugfix to make sure that easy handles timeout properly when\nthe times expire and the multi interface is used. This also improves\ncurl_multi_timeout().",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1283033794
  },
  {
    "id": "6b6a3bcb61f2d8f4e80a1e2a5bc62e78904256ed",
    "files": [
      "tests/data/test1116",
      "lib/http.c",
      "lib/url.c",
      "tests/data/Makefile.am",
      "lib/urldata.h",
      "lib/http_chunks.c"
    ],
    "message": "http: handle trailer headers in all chunked responses\n\nHTTP allows that a server sends trailing headers after all the chunks\nhave been sent WITHOUT signalling their presence in the first response\nheaders. The \"Trailer:\" header is only a SHOULD there and as we need to\nhandle the situation even without that header I made libcurl ignore\nTrailer: completely.\n\nTest case 1116 was added to verify this and to make sure we handle more\nthan one trailer header properly.\n\nReported by: Patrick McManus\nBug: http://curl.haxx.se/bug/view.cgi?id=3052450",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1282736534
  },
  {
    "id": "77ba147e762b4a0db33d712a5d6a8eeeb50011f4",
    "files": [
      "src/main.c",
      "tests/data/test39",
      "tests/data/test173"
    ],
    "message": "Fixed a NULL pointer dereference in form posting\n\nIt was introduced in commit eeb2cb05 along with the -F type=\nchange. Also fixed a typo in the name of the magic filename=\nparameter. Tweaked tests 39 and 173 to better test this path.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1282693531
  },
  {
    "id": "ab6681c2c89ad985984e964c5d121340be011a91",
    "files": [
      "lib/connect.c"
    ],
    "message": "Curl_is_connected: use correct errno\n\nThe correctly extracted errno contents were mistakenly overwritten by a newer\nvalue that wasn't the correct error value.\n\nBug: http://curl.haxx.se/mail/lib-2010-08/0242.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1282343375
  },
  {
    "id": "eeb2cb05a1012d8aa61174c762698b39d19c3d5d",
    "files": [
      "src/main.c",
      "tests/data/test186"
    ],
    "message": "cmdline: make -F type= accept ;charset=\n\nThe -F option allows some custom parameters within the given string, and\nthose strings are separated with semicolons. You can for example specify\n\"name=daniel;type=text/plain\" to set content-type for the\nfield. However, the use of semicolons like that made it not work fine if\nyou specified one within the content-type, like for:\n\"name=daniel;type=text/plain;charset=UTF-8\"\n... as the second one would be seen as a separator and \"charset\" is no\nparameter curl knows anything about so it was just silently discarded.\n\nThe new logic now checks if the semicolon and following keyword looks\nlike a parameter it knows about and if it isn't it is assumed to be\nmeant to be used within the content-type string itself.\n\nI modified test case 186 to verify that this works as intended.\n\nReported by: Larry Stone\nBug: http://curl.haxx.se/bug/view.cgi?id=3048988",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1282342884
  },
  {
    "id": "ab81f6c7c48e796baa4ba92d3fd121eeeba287a7",
    "files": [
      "lib/multi.c"
    ],
    "message": "Fixed a memory leak during OOM in the multi timeout code",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1282198098
  },
  {
    "id": "280d2cff2eed563cb19b46056fcb17e06dc4e158",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: avoid sending multiple complete messages\n\nI fell over this bug report that mentioned that libcurl could wrongly\nsend more than one complete messages at the end of a transfer. Reading\nthe code confirmed this, so I've added a new multi state to make it not\nhappen. The mentioned bug report was made by Brad Jorsch but is (oddly\nenough) filed in Debian's bug tracker for the \"wmweather+\" tool.\n\nBug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=593390",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1282154386
  },
  {
    "id": "6b490ed33c3ffc4ac96719df7f8c5df46476579a",
    "files": [
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.inc",
      "tests/libtest/lib578.c",
      "tests/data/test578",
      "lib/http.c"
    ],
    "message": "progress: callback for POSTs less than MAX_INITIAL_POST_SIZE\n\nAdd a call to Curl_pgrsSetUploadSize in this case valided by a test\ncase.\n\nReported by: \u041d\u0438\u043a\u0438\u0442\u0430 \u0414\u043e\u0440\u043e\u0445\u0438\u043d.\nBug: http://curl.haxx.se/mail/lib-2010-04/0173.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1281992203
  },
  {
    "id": "13b8fc46a3fd6b202a7f2df5f9aff4f26fe6c4db",
    "files": [
      "lib/http_negotiate.c"
    ],
    "message": "negotiation: Wrong proxy authorization\n\nThere's an error in http_negotiation.c where a mistake is using only\nuserpwd even for proxy requests. Ludek provided a patch, but I decided\nto write the fix slightly different using his patch as inspiration.\n\nReported by: Ludek Finstrle\nBug: http://curl.haxx.se/bug/view.cgi?id=3046066",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1281990412
  },
  {
    "id": "232ad6549a684505efcbb6ed9d7a78943cc5f817",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "docs/KNOWN_BUGS",
      "lib/multi.c",
      "lib/multiif.h"
    ],
    "message": "multi: support timeouts\n\nCurl_expire() is now expanded to hold a list of timeouts for each easy\nhandle. Only the closest in time will be the one used as the primary\ntimeout for the handle and will be used for the splay tree (which sorts\nand lists all handles within the multi handle).\n\nWhen the main timeout has triggered/expired, the next timeout in time\nthat is kept in the list will be moved to the main timeout position and\nused as the key to splay with. This way, all timeouts that are set with\nCurl_expire() internally will end up as a proper timeout. Previously any\nCurl_expire() that set a _later_ timeout than what was already set was\njust silently ignored and thus missed.\n\nSetting Curl_expire() with timeout 0 (zero) will cancel all previously\nadded timeouts.\n\nCorrects known bug #62.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1281870999
  },
  {
    "id": "5907777153932e27805b192443dfe2845327a8c4",
    "files": [
      "src/main.c",
      "RELEASE-NOTES"
    ],
    "message": "curl -T: ignore file size of special files\n\noriginal bug report at https://bugzilla.redhat.com/622520",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1281864373
  },
  {
    "id": "37201e3c36541a1a7f14424860e1f685eaa83e7c",
    "files": [
      "tests/data/test1084",
      "lib/connect.c",
      "tests/data/test1085"
    ],
    "message": "callbacks: acknowledge progress callback error returns\n\nWhen the progress callback is called during the TCP connection, an error\nreturn would accidentally not abort the operation as intended but would\ninstead be counted as a failure to connect to that particular IP and\nlibcurl would just continue to try the next. I made singleipconnect()\nand trynextip() return CURLcode properly.\n\nAdded bonus: it corrected the error code for bad --interface usages,\nlike tested in test 1084 and test 1085.\n\nReported by: Adam Light\nBug: http://curl.haxx.se/mail/lib-2010-08/0105.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1281474968
  },
  {
    "id": "f91d5786740ea1f84deede06466d34d23cb0677f",
    "files": [
      "lib/transfer.c"
    ],
    "message": "multi_socket: set timeout for 100-continue\n\nWhen libcurl internally decided to wait for a 100-continue header, there\nwas no call to the timeout function so there was no timeout callback\ncalled when the multi_socket API was used and thus applications became\neither completely wrong or at least ineffecient depending on how they\nhandled the situation. We now set a timeout to get triggered.\n\nReported by: Ben Darnell\nBug: http://curl.haxx.se/bug/view.cgi?id=3039744",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1281085217
  },
  {
    "id": "f8cf037ecf67d4dc490e0e54fb2c691211e859ba",
    "files": [
      "configure.ac",
      "lib/ssh.c",
      "lib/ssh.h"
    ],
    "message": "SCP: send large files properly with new enough libssh2\n\nlibssh2 1.2.6 and later handle >32bit file sizes properly even on 32bit\narchitectures and we make sure to use that ability.\n\nReported by: Mikael Johansson\nBug: http://curl.haxx.se/mail/lib-2010-08/0052.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1280939353
  },
  {
    "id": "a1a5ba3d0adad64c4c028d5d3f2903abd0efb510",
    "files": [
      "lib/url.c"
    ],
    "message": "Curl_connected_proxy: skip the bits.tcpconnect check\n\nSimply because the TCP might be connected already we cannot skip the\nproxy connect procedure. We need to be careful to not overload more\nmeaning to the bits.tcpconnect field like this.\n\nWith this fix, SOCKS proxies work again when the multi interface is\nused. I believe this regression was added with commit 4b351d018e,\nreleased as 7.20.1.\n\nLeft todo: add a test case that verifies this functionality that\nprevents us from breaking it again in the future!\n\nReported by: Robin Cornelius\nBug: http://curl.haxx.se/bug/view.cgi?id=3033966",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1280783850
  },
  {
    "id": "f38e52071e19dc16cf59c1719f37ec555b4c75b5",
    "files": [
      "src/main.c"
    ],
    "message": "retry: consider retrying even if -f is used\n\nThe --retry logic does retry HTTP when some specific response codes are\nreturned, but because the -f option sets the CURLOPT_FAILONERROR to\nlibcurl, the return codes are different for such situations and then the\ncurl tool failed to consider it for retrying.\n\nReported by: Mike Power\nBug: http://curl.haxx.se/bug/view.cgi?id=3037362",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1280700618
  },
  {
    "id": "811fcccfc97ee6545f1b9d28ac0dd9ea93a81ab8",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "multi: fix FTPS connecting the data connection with OpenSSL\n\nCommit 496002ea1cd76af7f (released in 7.20.1) broke FTPS when using the\nmulti interface and OpenSSL was used. The condition for the non-blocking\nconnect was incorrect.\n\nReported by: Georg Lippitsch\nBug: http://curl.haxx.se/mail/lib-2010-07/0270.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1280699446
  },
  {
    "id": "4a1384a8b4c2024e3ee51938d7a9a77e76289695",
    "files": [
      "lib/ftp.c"
    ],
    "message": "ftp: response timeout bug in \"quote\" sending\n\nThe FTP implementation was missing a timestamp reset point, making the\nwaiting for responses after sending a post-transfer \"QUOTE\" command not\nworking as supposedly. This bug was introduced in 7.20.0",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1279406665
  },
  {
    "id": "c8d42b2f1c105706098309644c2aa90ae6a1206f",
    "files": [
      "src/main.c",
      "RELEASE-NOTES"
    ],
    "message": "--retry: access violation with URL part sets continued\n\nWhen getting multiple URLs, curl didn't properly reset the byte counter\nafter a successful transfer so if the subsequent transfer failed it\nwould wrongly use the previous byte counter and behave badly (segfault)\nbecause of that. The code assumes that the byte counter and the 'stream'\npointer is well in synch.\n\nReported by: Jon Sargeant\nBug: http://curl.haxx.se/bug/view.cgi?id=3028241",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1279144201
  },
  {
    "id": "e01cc7737c92897fb8286e3df6392ab434cdced6",
    "files": [
      "lib/http.c"
    ],
    "message": "http: don't enable chunked during authentication negotiations\n\nAs mentioned in bug report #2956968, the HTTP code wouldn't send the\nfirst empty chunk during the auth negotiation phase of the HTTP request\nsending, so the server would wait for data to come and libcurl would\nwait for data to arrive... I've made the code not enable chunked\nencoding until the auth negotiation is done and thus this scenario\ndoesn't occur anymore.\n\nReported by: Sidney San Mart\ufffdn\nBug: http://curl.haxx.se/bug/view.cgi?id=2956968",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1278449421
  },
  {
    "id": "9be951a41503cd212d035496a003924f00b7aa06",
    "files": [
      "lib/multi.c"
    ],
    "message": "multi: CURLINFO_LASTSOCKET doesn't work after remove_handle\n\nWhen curl_multi_remove_handle() is called and an easy handle is returned\nto the connection cache held in the multi handle, then we cannot allow\nCURLINFO_LASTSOCKET to extract it since that will more or less encourage\nthat the user uses the socket while it can get used by libcurl again.\n\nWithout this fix, we'd get a segfault in Curl_getconnectinfo() trying to\ndereference the NULL pointer in 'data->state.connc'.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3023840",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1278019940
  },
  {
    "id": "f3b77e5611d860739c0cffbc394172adf1f14b57",
    "files": [
      "lib/nssg.h",
      "lib/nss.c",
      "lib/http_ntlm.c",
      "configure.ac",
      "RELEASE-NOTES",
      "lib/setup.h",
      "lib/Makefile.inc",
      "lib/curl_md4.h",
      "lib/md4.c"
    ],
    "message": "http_ntlm: add support for NSS\n\nWhen configured with '--without-ssl --with-nss', NTLM authentication\nnow uses NSS crypto library for MD5 and DES.  For MD4 we have a local\nimplementation in that case.  More details are available at\nhttps://bugzilla.redhat.com/603783\n\nIn order to get it working, curl_global_init() must be called with\nCURL_GLOBAL_SSL or CURL_GLOBAL_ALL.  That's necessary because NSS needs\nto be initialized globally and we do so only when the NSS library is\nactually required by protocol.  The mentioned call of curl_global_init()\nis responsible for creating of the initialization mutex.\n\nThere was also slightly changed the NSS initialization scenario, in\nparticular, loading of the NSS PEM module.  It used to be loaded always\nright after the NSS library was initialized.  Now the library is\ninitialized as soon as any SSL or NTLM is required, while the PEM module\nis prevented from being loaded until the SSL is actually required.",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1277896345
  },
  {
    "id": "89924a897d1cdb76750459a07e6caf460601c822",
    "files": [
      "RELEASE-NOTES",
      "src/urlglob.c"
    ],
    "message": "glob: backslash escaping bug\n\ncurl didn't properly handle escaping characters in a URL with the use of\nbackslash. It did an attempt, but that failed as reported in bug\n3022551. The described example was using the URL\n\"http://example.com?{AB,C\\,D}\".\n\nI've now removed the special-handling of letters following the backslash\nand I also removed the bad extra check that triggered this particular\nbug.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3022551\nReported by: Jon Sargeant",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1277763731
  },
  {
    "id": "8da56e12c6f8bc1306d1c5db8818933a6ef013d3",
    "files": [
      "lib/connect.c"
    ],
    "message": "multi_socket: re-use of same socket without notifying app\n\nWhen a hostname resolves to multiple IP addresses and the first one\ntried doesn't work, the socket for the second attempt may get dropped on\nthe floor, causing the request to eventually time out. The issue is that\nwhen using kqueue (as on mac and bsd platforms) instead of select, the\nkernel removes the first fd from kqueue when it is closed (in trynextip,\nconnect.c:503). Trynextip() then goes on to open a new socket, which\ngets assigned the same number as the one it just closed. Later in\nmulti.c, socket_cb is not called because the fd is already in\nmulti->sockhash, so the new socket is never added to kqueue.\n\nThe correct fix is to ensure that socket_cb is called to remove the fd\nwhen trynextip() closes the socket, and again to re-add it after\nsingleipsocket(). I'm not sure how to cleanly do that, but the attached\npatch works around the problem in an admittedly kludgy way by delaying\nthe close to ensure that the newly-opened socket gets a different fd.\n\nDaniel's added comment: I didn't spot a way to easily do a nicer fix so\nI've proceeded with Ben's patch.\n\nBug: http://curl.haxx.se/bug/view.cgi?id=3017819\nPatch by: Ben Darnell",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1277414544
  },
  {
    "id": "614bae813e0adf472a5c3d20abf98646a1b24dbf",
    "files": [
      "lib/smtp.c"
    ],
    "message": "smtp: fixed a few uses of size_t that seemed to believe it was signed\n\nReported-by: Steven M. Schweda",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1276870841
  },
  {
    "id": "bd6a695545966b05a99eb7eac74bb20715ead8dd",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed an OOM memory leak in the FTP wildcard code",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1276797385
  },
  {
    "id": "b3d7161642ae1af0697ed9c30efbe36eed4da7f9",
    "files": [
      "lib/transfer.c"
    ],
    "message": "transfer: warning: implicit conversion\n\nThere is an implicit conversion from \"unsigned long\" to \"long\";\nrounding, sign extension, or loss of accuracy may result.\n\nFixed by an added typecast.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1275986166
  },
  {
    "id": "684830cb2a2f10e987658ba36915a681271be941",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "CHANGES"
    ],
    "message": "SSH: corrected the inability to respect the timeout\n\nJason McDonald posted bug report #3006786 when he found that the\nSFTP code didn't timeout properly in several places in the code\neven if a timeout was set properly.\n\nBased on his suggested patch, I wrote a different implementation\nthat I think addressed the issue better and also uses the connect\ntimeout for the initial part of the SSH/SFTP done during the\n\"protocol connect\" phase.\n\n(http://curl.haxx.se/bug/view.cgi?id=3006786)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1275514431
  },
  {
    "id": "d17709da31ee04d825a8f93fcf4c87343ce0fad6",
    "files": [
      "lib/tftp.c",
      "CHANGES"
    ],
    "message": "TFTP: send legal timeout value\n\nEric Mertens posted bug #3003705: when we made TFTP use the\ncorrect timeout option when sent to the server (fixed May 18th\n2010) it became obvious that libcurl used invalid timeout values\n(300 by default while the RFC allows nothing above 255). While of\ncourse it is obvious that as TFTP has worked thus far without\nbeing able to set timeout at all, just removing the setting\nwouldn't make any difference in behavior. I decided to still keep\nit (but fix the problem) as it now actually allows for easier\n(future) customization of the timeout.\n\n(http://curl.haxx.se/bug/view.cgi?id=3003705)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1274477392
  },
  {
    "id": "0a29e2445c8d7300b5d72e2ba05755ea1ad5b6d1",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "TFTP: block id wrap bug fix\n\nIn a normal expression, doing [unsigned short] + 1 will not wrap\nat 16 bits so the comparisons and outputs were done wrong. I\nadded a macro do make sure it gets done right.\n\nDouglas Kilpatrick filed bug report #3004787 about it:\nhttp://curl.haxx.se/bug/view.cgi?id=3004787",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1274475855
  },
  {
    "id": "04cfef24a113e1477ccfafa633c468f0055a42c5",
    "files": [
      "lib/pop3.c"
    ],
    "message": "Fixed some memory leaks in the POP3 torture tests",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1274296686
  },
  {
    "id": "1d26151d5f895406c78d5d20fbad89604f9d9938",
    "files": [
      "lib/smtp.c"
    ],
    "message": "Fixed a memory leak in the SMTP torture tests",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1274219059
  },
  {
    "id": "aabd27d9aaefdb1c6f815567c2ff05a4449a36c3",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "TFTP: send timeout option correctly\n\nEric Mertens posted bug report #3003005 pointing out that the\nlibcurl TFTP code was not sending the timeout option properly to\nthe server, and suggested a fix.\n\n(http://curl.haxx.se/bug/view.cgi?id=3003005)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1274217240
  },
  {
    "id": "43b816538fbbac07ca7ccc2dc647c972c3ee072a",
    "files": [
      "tests/libtest/lib577.c",
      "tests/data/test577"
    ],
    "message": "Fixed test 577 to work when --enable-hidden-symbols is configured",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1273873378
  },
  {
    "id": "77cfeadfa6405c5808273f1d3cc8e89eb17e5f08",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "OpenSSL: multi interface handshake could hang\n\nJohn-Mark Bell filed bug #3000052 that identified a problem (with\nan associated patch) with the OpenSSL handshake state machine\nwhen the multi interface is used:\n\nPerforming an https request using a curl multi handle and using\nselect or epoll to wait for events results in a hang. It appears\nthat the cause is the fix for bug #2958179, which makes\nossl_connect_common unconditionally return from the step 2 loop\nwhen fetching from a multi handle.\n\nWhen ossl_connect_step2 has completed, it updates\nconnssl->connecting_state to ssl_connect_3. ossl_connect_common\nwill then return to the caller, as a multi handle is in\nuse. Eventually, the client code will call curl_multi_fdset to\nobtain an updated fdset to select or epoll on. For https\nrequests, curl_multi_fdset will cause https_getsock to be called.\nhttps_getsock will only return a socket handle if the\nconnecting_state is ssl_connect_2_reading or\nssl_connect_2_writing.  Therefore, the client will never obtain a\nvalid fdset, and thus not drive the multi handle, resulting in a\nhang.\n\n(http://curl.haxx.se/bug/view.cgi?id=3000052)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1273869308
  },
  {
    "id": "7764795c06a4eae99c9cded5b121946d9ecec84b",
    "files": [
      "lib/content_encoding.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "follow redirect: ignore response-body on redirect even if compressed\n\nSebastian V reported bug #3000056 identifying a problem with\nredirect following. It showed that when curl followed redirects\nit didn't properly ignore the response body of the 30X response\nif that response was using compressed Content-Encoding!\n\n(http://curl.haxx.se/bug/view.cgi?id=3000056)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1273867927
  },
  {
    "id": "d64bd82bdcb169d0647a80f00068cedd761f8163",
    "files": [
      "lib/polarssl.c",
      "lib/http.c",
      "lib/ssluse.c",
      "lib/polarssl.h",
      "lib/urldata.h",
      "lib/pingpong.c",
      "lib/sslgen.h",
      "lib/ssh.h",
      "lib/gtls.h",
      "lib/ssh.c",
      "lib/qssl.c",
      "lib/security.c",
      "lib/nssg.h",
      "lib/krb4.h",
      "lib/sendf.c",
      "lib/nss.c",
      "lib/socks.c",
      "lib/easy.c",
      "lib/gtls.c",
      "lib/qssl.h",
      "lib/sslgen.c",
      "lib/transfer.c",
      "lib/url.c",
      "lib/telnet.c",
      "lib/ssluse.h",
      "lib/sendf.h"
    ],
    "message": "sendrecv: split the I/O handling into private handler\n\nHoward Chu brought the bulk work of this patch that properly\nmoves out the sending and recving of data to the parts of the\ncode that are properly responsible for the various ways of doing\nso.\n\nDaniel Stenberg assisted with polishing a few bits and fixed some\nminor flaws in the original patch.\n\nAnother upside of this patch is that we now abuse CURLcodes less\nwith the \"magic\" -1 return codes and instead use CURLE_AGAIN more\nconsistently.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1273237534
  },
  {
    "id": "68aae7f57913ad91e1a6584654cd3408ed6ecad3",
    "files": [
      "lib/hostip4.c"
    ],
    "message": "Curl_ipv4_resolve_r: only set AI_CANONNAME when needed\n\nAs reported in bug report #2987196, the code for ipv6 already did\nthe setting of this bit correctly so we copied that logic into\nthe Curl_ipv4_resolve_r() function as well. KRB code is the only\ncode we know that might need the cannonical name so only resolve\nit for such requests!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1271329441
  },
  {
    "id": "02892e4fd8c1faff74edd2ce7e232b0c8442c5c9",
    "files": [
      "RELEASE-NOTES",
      "tests/data/test227",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "FTP quote commands prefixed with '*' now can fail without aborting\n\nPrefixing the FTP quote commands with an asterisk really only\nworked for the postquote actions. This is now fixed and test case\n227 has been extended to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1270824892
  },
  {
    "id": "49f3160d69a9e568efdc370ac417841680c0b355",
    "files": [
      "RELEASE-NOTES",
      "lib/sendf.c",
      "CHANGES"
    ],
    "message": "fix SFTP download hang\n\nMatt Wixson found and fixed a bug in the SCP/SFTP area where the\ncode treated a 0 return code from libssh2 to be the same as\nEAGAIN while in reality it isn't. The problem caused a hang in\nSFTP transfers from a MessageWay server.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1270154355
  },
  {
    "id": "1ac168e576d8e78b58640e1e997249717529b482",
    "files": [
      "tests/libtest/lib572.c",
      "tests/libtest/Makefile.inc",
      "lib/rtsp.c",
      "tests/data/Makefile.am",
      "tests/data/test572",
      "docs/libcurl/curl_easy_setopt.3"
    ],
    "message": "Fix RTSP GET_PARAMETER empty and non-empty operation.\n\nTest coverage included. Thanks to Massimo Callegari for the bug report",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1269433274
  },
  {
    "id": "4b351d018e3d6691191fd653a17f14f4a31e0b4c",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "mark connection as connected\n\nKenny To filed the bug report #2963679 with patch to fix a\nproblem he experienced with doing multi interface HTTP POST over\na proxy using PROXYTUNNEL. He found a case where it would connect\nfine but bits.tcpconnect was not set correct so libcurl didn't\nwork properly.\n\n(http://curl.haxx.se/bug/view.cgi?id=2963679)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1269383439
  },
  {
    "id": "7fd32ce73d7e253df1e8067d45d50ef9d5290cbd",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "chunked-encoding with Content-Length: header problem\n\nAkos Pasztory filed debian bug report #572276\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=572276\nmentioning a problem with a resource that returns chunked-encoded\n_and_ with a Content-Length and libcurl failed to properly ignore\nthe latter information.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1269354405
  },
  {
    "id": "2a94293efd3896eca067c4b53ccfdf362a042db2",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "delayed easy handle kill caused double Curl_close() call\n\nHauke Duden provided an example program that made the multi\ninterface crash.  His example simply used the multi interface and\ndid first one FTP transfer and after completion it used a second\neasy handle and did another FTP transfer on the same FTP server.\n\nThis triggered a bug in the \"delayed easy handle kill\" system\nthat curl uses: when an FTP connection is left alive it must keep\nan easy handle around internally - only for the purpose of having\nan easy handle when it later disconnects it. The code assumed\nthat when the easy handle was removed and an internal reference\nwas made, that version could be killed later on when a new easy\nhandle came using the same connection. This was wrong as Hauke's\nexample showed that the removed handle wasn't killed for real\nuntil later. This caused a double close attempt => segfault.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1269346710
  },
  {
    "id": "733f794cb8f93e413b5f17d106b265bce0379772",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Constantine Sapuntzakis brought a patch:\n\n  The problem mentioned on Dec 10 2009\n  (http://curl.haxx.se/bug/view.cgi?id=2905220) was only partially fixed.\n  Partially because an easy handle can be associated with many connections in\n  the cache (e.g. if there is a redirect during the lifetime of the easy\n  handle).  The previous patch only cleaned up the first one. The new fix now\n  removes the easy handle from all connections, not just the first one.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1268692842
  },
  {
    "id": "e262aaae2bcbb8534aa9e6348b20ec2605a09b7f",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Ben Greear brought a patch that fixed the rate limiting logic for TFTP when\n  the easy interface was used.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1267900926
  },
  {
    "id": "f4551a967820ab2be76fd5d600fbce32cd290e62",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Constantine Sapuntzakis detected and fixed a double free in builds done\nwith threaded resolver enabled (Windows default configuration) that would\nget triggered when a curl handle is closed while doing DNS resolution.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1267758919
  },
  {
    "id": "6bf071df7ee6b5be66757ecdf01b1be1497df536",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Andrei Benea filed bug report #2956698 and pointed out that the\n  CURLOPT_CERTINFO feature leaked memory due to a missing OpenSSL function\n  call. He provided the patch to fix it too.\n\n  http://curl.haxx.se/bug/view.cgi?id=2956698",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1267537278
  },
  {
    "id": "13ac29382f9087d410a96f7ca943b16d39a10afb",
    "files": [
      "RELEASE-NOTES",
      "lib/pingpong.c",
      "lib/ftp.c",
      "CHANGES",
      "lib/smtp.c"
    ],
    "message": "- Made the pingpong timeout code properly deal with the response timeout AND\n  the global timeout if set. Also, as was reported in the bug report #2956437\n  by Ryan Chan, the time stamp to use as basis for the per command timeout was\n  not set properly in the DONE phase for FTP (and not for SMTP) so I fixed\n  that just now. This was a regression compared to 7.19.7 due to the\n  conversion of FTP code over to the generic pingpong concepts.\n\n  http://curl.haxx.se/bug/view.cgi?id=2956437",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1267536383
  },
  {
    "id": "496002ea1cd76af7fff27166e8a310ed64a434ba",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Wesley Miaw reported bug #2958179 which identified a case of looping during\n  OpenSSL based SSL handshaking even though the multi interface was used and\n  there was no good reason for it.\n\n  http://curl.haxx.se/bug/view.cgi?id=2958179",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1267480747
  },
  {
    "id": "03a57308b91911cdd91060b237715f0c5fe716da",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http_chunks.c"
    ],
    "message": "- Pat Ray in bug #2958474 pointed out an off-by-one case when receiving a\n  chunked-encoding trailer.\n\n  http://curl.haxx.se/bug/view.cgi?id=2958474",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1267224930
  },
  {
    "id": "507d58435a518e23477c6cd6f655c122bde8b4ac",
    "files": [
      "lib/imap.c",
      "CHANGES"
    ],
    "message": "Fixed a couple of out of memory leaks and a segfault in the IMAP code.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1267219484
  },
  {
    "id": "cce81a7f4508fb7b80d20432341bc265f145f26c",
    "files": [
      "CHANGES",
      "lib/smtp.c"
    ],
    "message": "Fixed a couple of out of memory leaks and a segfault in the SMTP code.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1267085226
  },
  {
    "id": "6a8aa246ffa65c33a7d99916e2d24d98b16ae85d",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES",
      "tests/server/util.c"
    ],
    "message": "Fixed bug report #2958074 indicating\n(http://curl.haxx.se/bug/view.cgi?id=2958074) that curl on Windows with\noption --trace-time did not use local time when timestamping trace lines.\nThis could also happen on other systems depending on time souurce.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1267081144
  },
  {
    "id": "a4a60afabbd65e674222a6df6ccd09c1b358ab77",
    "files": [
      "tests/data/test802",
      "CHANGES",
      "RELEASE-NOTES",
      "docs/libcurl/curl_easy_setopt.3",
      "tests/data/test803",
      "lib/smtp.c",
      "tests/ftpserver.pl"
    ],
    "message": "- Fixed the SMTP compliance by making sure RCPT TO addresses are specified\n  properly in angle brackets. Recipients provided with CURLOPT_MAIL_RCPT now\n  get angle bracket wrapping automatically by libcurl unless the recipient\n  starts with an angle bracket as then the app is assumed to deal with that\n  properly on its own.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1266704999
  },
  {
    "id": "975814368a8b567a369ab5174c42dbae5b28b86e",
    "files": [
      "lib/smtp.h",
      "RELEASE-NOTES",
      "tests/data/test802",
      "CHANGES",
      "lib/smtp.c"
    ],
    "message": "- Jack Zhang reported a problem with SMTP: we wrongly used multiple addresses\n  in the same RCPT TO line, when they should be sent in separate single\n  commands. I updated test case 802 to verify this.\n\n- I also fixed a bad use of my_setopt_str() of CURLOPT_MAIL_RCPT in the curl\n  tool which made it try to output it as string for the --libcurl feature\n  which could lead to crashes.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1266013426
  },
  {
    "id": "552c3de3575c719161998d541b3750b2ce12674c",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Johan van Selst found and fixed a OpenSSL session ref count leak:\n\n  ossl_connect_step3() increments an SSL session handle reference counter on\n  each call. When sessions are re-used this reference counter may be\n  incremented many times, but it will be decremented only once when done (by\n  Curl_ossl_session_free()); and the internal OpenSSL data will not be freed\n  if this reference count remains positive. When a session is re-used the\n  reference counter should be corrected by explicitly calling\n  SSL_SESSION_free() after each consecutive SSL_get1_session() to avoid\n  introducing a memory leak.\n\n  (http://curl.haxx.se/bug/view.cgi?id=2926284)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1262994323
  },
  {
    "id": "9bd03483ce6983852d41f5f69cb74827c9defc26",
    "files": [
      "tests/data/test1111",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "docs/libcurl/curl_easy_setopt.3",
      "tests/data/test1110",
      "tests/data/test1109"
    ],
    "message": "Julien Chaffraix fixed so that the fragment part in an URL is not sent to the server anymore",
    "committer": {
      "email": "claes@versed.se",
      "name": "Claes Jakobsson"
    },
    "date": 1262793708
  },
  {
    "id": "240fa29e94c63f4b86ac2715b706277415c863b4",
    "files": [
      "RELEASE-NOTES",
      "lib/cookie.c"
    ],
    "message": "fixed a precaution check in the cookie code, pointed out by Julien Chaffraix",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1261250426
  },
  {
    "id": "10a11e3abe54c4b8ce537f84416092d7e7c7d8a4",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES",
      "configure.ac"
    ],
    "message": "- David Byron fixed Curl_ossl_cleanup to actually call ENGINE_cleanup when\n  available.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1261056581
  },
  {
    "id": "7603a29fc3db05d354b5adf41d69f781437704ca",
    "files": [
      "lib/url.c",
      "CHANGES"
    ],
    "message": "Follow-up fix for the proxy fix I did for Jon Nelson's bug. It turned out I\nwas a bit too quick and broke test case 1101 with that change. The order of\nsome of the setups is sensitive. I now changed it slightly again.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1261005107
  },
  {
    "id": "3111701c38ee4d15df8e2d76dfcf945dbf2c0bfe",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test1106",
      "CHANGES"
    ],
    "message": "- Jon Nelson found a regression that turned out to be a flaw in how libcurl\n  detects and uses proxies based on the environment variables. If the proxy\n  was given as an explicit option it worked, but due to the setup order\n  mistake proxies would not be used fine for a few protocols when picked up\n  from '[protocol]_proxy'. Obviously this broke after 7.19.4. I now also added\n  test case 1106 that verifies this functionality.\n\n  (http://curl.haxx.se/bug/view.cgi?id=2913886)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1260832569
  },
  {
    "id": "296ebf382c7f629f3ab8a8ca895153d72202629d",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "tests/data/test196",
      "CHANGES",
      "docs/curl.1"
    ],
    "message": "- Siegfried Gyuricsko found out that the curl manual said --retry would retry\n  on FTP errors in the transient 5xx range. Transient FTP errors are in the\n  4xx range. The code itself only tried on 5xx errors that occured _at login_.\n  Now the retry code retries on all FTP transfer failures that ended with a\n  4xx response.\n\n  (http://curl.haxx.se/bug/view.cgi?id=2911279)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1260478931
  },
  {
    "id": "5ce6454d33d006f5d3cf9f7229bd7d89a07e9163",
    "files": [
      "src/main.c"
    ],
    "message": "- Fixed curl erroneously reporting output stream write failures with disabled buffering",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1260463581
  },
  {
    "id": "c7d2e4c1e114bc50979f1daf11aa6d48bbc6993a",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Extended and fixed the change I did on Dec 11 for the the progress\n   meter/callback during FTP command/response sequences. It turned out it was\n   really lame before and now the progress meter SHOULD get called at least\n   once per second.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1259262474
  },
  {
    "id": "8b494282989bf34dc8596a9b2338afa58e1eb68b",
    "files": [
      "ares/ares_parse_txt_reply.c",
      "ares/CHANGES",
      "ares/RELEASE-NOTES",
      "ares/ares_parse_srv_reply.c"
    ],
    "message": "- Larry Lansing fixed ares_parse_srv_reply to properly parse replies\n  which might contain non-SRV answers, skipping over potential non-SRV\n  ones such as CNAMEs.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1259198481
  },
  {
    "id": "1fddcb3f887c487a22b38082e651d24ae5865db2",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Bjorn Augustsson reported a bug which made curl not report any problems even\n  though it failed to write a very small download to disk (done in a single\n  fwrite call). It turned out to be because fwrite() returned success, but\n  there was insufficient error-checking for the fclose() call which tricked\n  curl to believe things were fine.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1258984605
  },
  {
    "id": "a41493b3b0eaa83a907b4c3dbbab1297791ead97",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Jad Chamcham pointed out a bug with connection re-use. If a connection had\n  CURLOPT_HTTPPROXYTUNNEL enabled over a proxy, a subsequent request using the\n  same proxy with the tunnel option disabled would still wrongly re-use that\n  previous connection and the outcome would only be badness.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1258723641
  },
  {
    "id": "b32d1a9a1d1d1d3f8c24b9aa439c9ce273c2049e",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Constantine Sapuntzakis provided another fix for the DNS cache that could\n  end up with entries that wouldn't time-out:\n\n  1. Set up a first web server that redirects (307) to a http://server:port\n     that's down\n  2. Have curl connect to the first web server using curl multi\n\n  After the curl_easy_cleanup call, there will be curl dns entries hanging\n  around with in_use != 0.\n\n  (http://curl.haxx.se/bug/view.cgi?id=2891591)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1258498435
  },
  {
    "id": "571309dc3edaf1c03ff6fdfbcf551875644b5a7f",
    "files": [
      "lib/urldata.h",
      "lib/nss.c",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- libcurl-NSS now tries to reconnect with TLS disabled in case it detects\n  a broken TLS server. However it does not happen if SSL version is selected\n  manually. The approach was originally taken from PSM. Kaspar Brand helped me\n  to complete the patch. Original bug reports:\n  https://bugzilla.redhat.com/525496\n  https://bugzilla.redhat.com/527771",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1258024591
  },
  {
    "id": "d547d00f2cfa69e07d6873bbebbc82f3132f1b82",
    "files": [
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Kevin Baughman provided a fix preventing libcurl-NSS from crash on doubly\n  closed NSPR descriptor. The issue was hard to find, reported several times\n  before and always closed unresolved. More info at the RH bug:\n  https://bugzilla.redhat.com/534176",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1258023250
  },
  {
    "id": "fb5f332834baeee1c9ec27dee6fc065364d5b7f3",
    "files": [
      "RELEASE-NOTES",
      "lib/hash.c",
      "lib/hostip.h",
      "CHANGES",
      "lib/hostip.c"
    ],
    "message": "- Constantine Sapuntzakis posted bug #2891595\n  (http://curl.haxx.se/bug/view.cgi?id=2891595) which identified how an entry\n  in the DNS cache would linger too long if the request that added it was in\n  use that long. He also provided the patch that now makes libcurl capable of\n  still doing a request while the DNS hash entry may get timed out.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1257931897
  },
  {
    "id": "257f2376d59ebde87645c207d5006d4657352bbb",
    "files": [
      "RELEASE-NOTES",
      "lib/progress.c",
      "CHANGES"
    ],
    "message": "- I fixed several problems with the transfer progress meter. It showed the\n  wrong percentage for small files, most notable for <1000 bytes and could\n  easily end up showing more than 100% at the end. It also didn't show any\n  percentage, transfer size or estimated transfer times when transferring\n  less than 100 bytes.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1257376157
  },
  {
    "id": "2c0b65d37b62e4a089d1816197126f5a3f36a09a",
    "files": [
      "tests/libtest/lib566.c",
      "tests/data/test566",
      "tests/libtest/Makefile.inc"
    ],
    "message": "Added test case 566 in an attempt to repeat bug 2884561\n(http://curl.haxx.se/bug/view.cgi?id=2884561) but it seems to work for me...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1256942301
  },
  {
    "id": "d68f215f037febf1850ad6a169d4a69bd9d132a1",
    "files": [
      "CHANGES",
      "lib/http.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.inc",
      "tests/data/test565",
      "tests/libtest/lib510.c"
    ],
    "message": "- \"Tom\" posted a bug report that mentioned how libcurl did wrong when doing a\n  POST using a read callback, with Digest authentication and\n  \"Transfer-Encoding: chunked\" enforced.  I would then cause the first request\n  to be wrongly sent and then basically hang until the server closed the\n  connection. I fixed the problem and added test case 565 to verify it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1256941488
  },
  {
    "id": "051ab439a99980e4938c4c61bf2e0f22b04d388e",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- A patch in bug report #2883177 (http://curl.haxx.se/bug/view.cgi?id=2883177)\n  by user 'koresh' introduced the --crlfile option to curl, which makes curl\n  tell libcurl about a file with CRL (certificate revocation list) data to\n  read.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1256128192
  },
  {
    "id": "6f4a5a46125d48d8fb9c6f8e112ca9c376829577",
    "files": [
      "RELEASE-NOTES",
      "lib/parsedate.c",
      "CHANGES"
    ],
    "message": "- Ray Dassen provided a patch in Debian's bug tracker (bug number #551461)\n  that now makes curl_getdate(3) actually handles RFC 822 formatted dates that\n  use the \"single letter military timezones\".\n  http://www.rfc-ref.org/RFC-TEXTS/822/chapter5.html has the details.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1255902979
  },
  {
    "id": "86cec97b2214cefdbc7cfa1c434c5823b28a47c3",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "CHANGES"
    ],
    "message": "- Fixed memory leak in the SCP/SFTP code as it never freed the knownhosts\n  data!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1255828285
  },
  {
    "id": "e5ee82274535366632343f80ea5ca5556b056486",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "John Dennis filed bug report #2873666\n(http://curl.haxx.se/bug/view.cgi?id=2873666) which identified a problem which\nmade libcurl loop infinitely when given incorrect credentials when using HTTP\nGSS negotiate authentication.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1255825107
  },
  {
    "id": "b2339578854c2a261f264997e4c94b676d6a723a",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "- Tom Mueller correctly reported in bug report #2870221\n  (http://curl.haxx.se/bug/view.cgi?id=2870221) that libcurl returned an\n  incorrect return code from the internal trynextip() function which caused\n  him grief. This is a regression that was introduced in 7.19.1 and I find it\n  strange it hasn't hit us harder, but I won't persue into figuring out\n  exactly why.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1254383985
  },
  {
    "id": "8646cecb785e8ac426527daedc1eb35e27f2edca",
    "files": [
      "RELEASE-NOTES",
      "include/curl/curl.h",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- I introduced a maximum limit for received HTTP headers. It is controlled by\n  the define CURL_MAX_HTTP_HEADER which is even exposed in the public header\n  file to allow for users to fairly easy rebuild libcurl with a modified\n  limit. The rationale for a fixed limit is that libcurl is realloc()ing a\n  buffer to be able to put a full header into it, so that it can call the\n  header callback with the entire header, but that also risk getting it into\n  trouble if a server by mistake or willingly sends a header that is more or\n  less without an end. The limit is set to 100K.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1254087253
  },
  {
    "id": "4f47fc4e14cf6e782bffa8804218acc99828bf42",
    "files": [
      "RELEASE-NOTES",
      "tests/data/test1105",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "- John P. McCaskey posted a bug report that showed how libcurl did wrong when\n  saving received cookies with no given path, if the path in the request had a\n  query part. That is means a question mark (?) and characters on the right\n  side of that. I wrote test case 1105 and fixed this problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1253998311
  },
  {
    "id": "e3d623f190bc582e6058be12e3568424ca206d27",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Chris Mumford filed bug report #2861587\n  (http://curl.haxx.se/bug/view.cgi?id=2861587) identifying that libcurl used\n  the OpenSSL function X509_load_crl_file() wrongly and failed if it would\n  load a CRL file with more than one certificate within. This is now fixed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1253902178
  },
  {
    "id": "7ff4b4f2b5871900d27f5640f71c41858727fc77",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test565",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "- Claes Jakobsson fixed a problem with cookie expiry dates at exctly the epoch\n  start second \"Thu Jan 1 00:00:00 GMT 1970\" as the date parser then returns 0\n  which internally then is treated as a session cookie. That particular date\n  is now made to get the value of 1.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1252616810
  },
  {
    "id": "5389ac0ddfca51599d3db67734fe9fe694868fbc",
    "files": [
      "docs/examples/chkspeed.c"
    ],
    "message": "fixed spelling.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1252594821
  },
  {
    "id": "1a255e0e280f6ca48a4f2290642ede2966c007da",
    "files": [
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Improved error message for not matching certificate subject name in\n  libcurl-NSS. Originally reported at:\n  https://bugzilla.redhat.com/show_bug.cgi?id=516056#c9",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1251461211
  },
  {
    "id": "b0b2824b58df4dead3fdc7fcb48c3c95328ae2fc",
    "files": [
      "tests/data/test1102",
      "lib/ftp.c",
      "CHANGES",
      "tests/data/Makefile.am",
      "lib/urldata.h",
      "tests/data/test1103"
    ],
    "message": "- Introduced a SYST-based test to properly set-up name format when dealing  with the OS/400 FTP server.\n- Fixed an ftp_readresp() bug preventing detection of failing control socket  and causing FTP client to loop forever.",
    "committer": {
      "email": "Patrick.Monnerat@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1251118645
  },
  {
    "id": "6293fe98a030dc776f38dec97e8241cb09cdd170",
    "files": [
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Changed NSS code to not ignore the value of ssl.verifyhost and produce more\n  verbose error messages. Originally reported at:\n  https://bugzilla.redhat.com/show_bug.cgi?id=516056",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1250179491
  },
  {
    "id": "966cb698e61ded3600d0248ab55dde9a2fe0625c",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Carsten Lange reported a bug and provided a patch for TFTP upload and the\n  sending of the TSIZE option. I don't like fixing bugs just hours before\n  a release, but since it was broken and the patch fixes this for him I decided\n  to get it in anyway.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1250065179
  },
  {
    "id": "e73fe837a8877c0197721b91e0d5ec40cb7a2cd0",
    "files": [
      "tests/runtests.pl",
      "tests/certs/Server-localhost-sv.crt",
      "tests/certs/Server-localhost-sv.prm",
      "tests/certs/Server-localhost0h-sv.key",
      "tests/certs/Server-localhost.nn-sv.crt",
      "lib/ssluse.c",
      "tests/data/test311",
      "tests/certs/Server-localhost0h-sv.crt",
      "tests/certs/Server-localhost.nn-sv.der",
      "tests/certs/Server-localhost.nn-sv.prm",
      "tests/certs/EdelCurlRoot-ca.prm",
      "tests/certs/Server-localhost-sv.dhp",
      "tests/certs/Server-localhost-sv.p12",
      "CHANGES",
      "tests/certs/Server-localhost.nn-sv.key",
      "tests/certs/scripts/genroot.sh",
      "tests/Makefile.am",
      "tests/certs/Server-localhost0h-sv.prm",
      "tests/certs/Server-localhost.nn-sv.dhp",
      "tests/certs/Server-localhost-sv.der",
      "tests/certs/Server-localhost-sv.pem",
      "tests/certs/Server-localhost0h-sv.dhp",
      "tests/certs/EdelCurlRoot-ca.cacert",
      "tests/data/test312",
      "tests/certs/EdelCurlRoot-ca.key",
      "tests/certs/EdelCurlRoot-ca.csr",
      "tests/certs/Server-localhost0h-sv.der",
      "tests/certs/EdelCurlRoot-ca.crt",
      "tests/certs/Server-localhost0h-sv.pem",
      "tests/data/test310",
      "tests/certs/Server-localhost0h-sv.p12",
      "tests/certs/Server-localhost-sv.key",
      "tests/certs/scripts/genserv.sh",
      "tests/certs/EdelCurlRoot-ca.der",
      "tests/certs/Server-localhost.nn-sv.pem",
      "RELEASE-NOTES",
      "tests/certs/Server-localhost0h-sv.csr",
      "tests/certs/Server-localhost.nn-sv.csr",
      "tests/httpsserver.pl",
      "tests/certs/Server-localhost-sv.csr"
    ],
    "message": "- Peter Sylvester made the HTTPS test server use specific certificates for\n  each test, so that the test suite can now be used to actually test the\n  verification of cert names etc. This made an error show up in the OpenSSL-\n  specific code where it would attempt to match the CN field even if a\n  subjectAltName exists that doesn't match. This is now fixed and verified\n  in test 311.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1250027338
  },
  {
    "id": "0dec3e5e6a3d9f2279b58afae133a0910badcfa3",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Fixed a memory leak in the FTP code and an off-by-one heap buffer overflow.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1249957853
  },
  {
    "id": "66f5baa16e83c0e629d19e47da21de15aa65b77d",
    "files": [
      "src/main.c",
      "CHANGES"
    ],
    "message": "Fixed some memory leaks in the command-line tool that caused most of the\ntorture tests to fail.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1249859720
  },
  {
    "id": "f0dbdcff9d3c6764f6a9d4476362aa1f53fdc6d6",
    "files": [
      "ares/CHANGES",
      "ares/ares_init.c",
      "ares/RELEASE-NOTES"
    ],
    "message": "- Joshua Kwan fixed the init routine to fill in the defaults for stuff that\n  fails to get inited by other means. This fixes a case of when the c-ares\n  init fails when internet access is fone.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1249298957
  },
  {
    "id": "6d891d2a3b907f12e5c9b335a806fcb7e77b877b",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "- Curt Bogmine reported a problem with SNI enabled on a particular server. We\n  should introduce an option to disable SNI, but as we're in feature freeze\n  now I've addressed the obvious bug here (pointed out by Peter Sylvester): we\n  shouldn't try to enable SNI when SSLv2 or SSLv3 is explicitly selected.\n  Code for OpenSSL and GnuTLS was fixed. NSS doesn't seem to have a particular\n  option for SNI, or are we simply not using it?",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1249164718
  },
  {
    "id": "c0e8bed5bf7a7e56897e492a4dcc399621939995",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Scott Cantor posted the bug report #2829955\n  (http://curl.haxx.se/bug/view.cgi?id=2829955) mentioning the recent SSL cert\n  verification flaw found and exploited by Moxie Marlinspike. The presentation\n  he did at Black Hat is available here:\n  https://www.blackhat.com/html/bh-usa-09/bh-usa-09-archives.html#Marlinspike\n\n  Apparently at least one CA allowed a subjectAltName or CN that contain a\n  zero byte, and thus clients that assumed they would never have zero bytes\n  were exploited to OK a certificate that didn't actually match the site. Like\n  if the name in the cert was \"example.com\\0theatualsite.com\", libcurl would\n  happily verify that cert for example.com.\n\n  libcurl now better use the length of the extracted name, not assuming it is\n  zero terminated.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1249163819
  },
  {
    "id": "b347a7a96e1518089264bf166e676f40cf525350",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Bug report #2825989 (http://curl.haxx.se/bug/view.cgi?id=2825989) pointed\n  out that OpenSSL-powered libcurl didn't support the SHA-2 digest algorithm,\n  and provided the solution too: to use OpenSSL_add_all_algorithms() instead\n  of the older SSLeay_* alternative. OpenSSL_add_all_algorithms was added in\n  OpenSSL 0.9.5",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1248629616
  },
  {
    "id": "21dd9a8021174e46ef694de4f4a5094fe5367a5c",
    "files": [
      "lib/tftp.c"
    ],
    "message": "fixed brace error.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1248321241
  },
  {
    "id": "4c207a004cce51e0dcd11c42eda514bd1587e8b2",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "- David Binderman found a memory and fd leak in lib/gtls.c:load_file()\n  (https://bugzilla.novell.com/523919). When looking at the code, I found\n  that also the ptr pointer can leak.",
    "committer": {
      "email": "mmarek@suse.cz",
      "name": "Michal Marek"
    },
    "date": 1248256112
  },
  {
    "id": "5f0cae8037e340892372248dfc8b3b5344360087",
    "files": [
      "lib/urldata.h",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Claes Jakobsson improved the support for client certificates handling\n  in NSS-powered libcurl. Now the client certificates can be selected\n  automatically by a NSS built-in hook. Additionally pre-login to all PKCS11\n  slots is no more performed. It used to cause problems with HW tokens.\n\n- Fixed reference counting for NSS client certificates. Now the PEM reader\n  module should be always properly unloaded on Curl_nss_cleanup(). If the unload\n  fails though, libcurl will try to reuse the already loaded instance.",
    "committer": {
      "email": "kdudka@redhat.com",
      "name": "Kamil Dudka"
    },
    "date": 1248126621
  },
  {
    "id": "5cf78472e1195be215df3831ca11cb532ac75466",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Constantine Sapuntzakis posted bug report #2813123\n  (http://curl.haxx.se/bug/view.cgi?id=2813123) and an a patch that fixes the\n  problem:\n\n  Url A is accessed using auth. Url A redirects to Url B (on a different\n  server0. Url B reuses a persistent connection. Url B has auth, even though\n  it's on a different server.\n\n  Note: if Url B does not reuse a persistent connection, auth is not sent.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1247036440
  },
  {
    "id": "c40365e9b69c33edf9c8cc8fc624d43ad5772017",
    "files": [
      "src/main.c"
    ],
    "message": "fixed TRUE/FALSE case typo.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1245109559
  },
  {
    "id": "3e0c067e43d548bee09b836e95deb0278e96d203",
    "files": [
      "RELEASE-NOTES",
      "lib/urldata.h",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Claes Jakobsson provided a patch for libcurl-NSS that fixed a bad refcount\n  issue with client certs that caused issues like segfaults.\n  http://curl.haxx.se/mail/lib-2009-05/0316.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1244496316
  },
  {
    "id": "9324f1c29f31e68ffb716e32450ce9f2f9239654",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Eric Wong fixed --no-buffer to actually switch off output buffering. Been\n  broken since 7.19.0",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1244413282
  },
  {
    "id": "1012c5705aedc6730244c22cd9d2bcb3c5c13212",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Setting the Content-Length: header from your app when you do a POST or PUT\n  is almost always a VERY BAD IDEA. Yet there are still apps out there doing\n  this, and now recently it triggered a bug/side-effect in libcurl as when\n  libcurl sends a POST or PUT with NTLM, it sends an empty post first when it\n  knows it will just get a 401/407 back. If the app then replaced the\n  Content-Length header, it caused the server to wait for input that libcurl\n  wouldn't send. Aaron Oneal reported this problem in bug report #2799008\n  http://curl.haxx.se/bug/view.cgi?id=2799008) and helped us verify the fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1244182722
  },
  {
    "id": "15eaf27bc7b4ad33af275b9cd0601ef19d54ac9c",
    "files": [
      "docs/libcurl/libcurl-tutorial.3",
      "lib/nss.c",
      "include/curl/curl.h"
    ],
    "message": "Fixed a few comment typos (from the FreeBSD ports)",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1243546351
  },
  {
    "id": "0bf9c1e8815ad1bf07ef875b3e7a5a3acc9f3e8c",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Claes Jakobsson fixed libcurl-NSS to build fine even without the\n  PK11_CreateGenericObject() function.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1243461663
  },
  {
    "id": "1cf6c15ab43ce41fa99e3776d0c23ed4f66196a8",
    "files": [
      "RELEASE-NOTES",
      "tests/data/test8",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "- bug report #2796358 (http://curl.haxx.se/bug/view.cgi?id=2796358) pointed\n  out that the cookie parser would leak memory when it parses cookies that are\n  received with domain, path etc set multiple times in the same header. While\n  such a cookie is questionable, they occur in the wild and libcurl no longer\n  leaks memory for them. I added such a header to test case 8.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1243254202
  },
  {
    "id": "de7a14003c0ef455e074cc9629bf9faae3474a7e",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Kamil Dudka brought the patch from the Redhat bug entry\n  https://bugzilla.redhat.com/show_bug.cgi?id=427966 which was libcurl closing\n  a bad file descriptor when closing down the FTP data connection.  Caolan\n  McNamara seems to be the original author of it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1242766471
  },
  {
    "id": "4c9c9f0b89a09a9358fc3091f7561f52b8f83d90",
    "files": [
      "lib/easy.c"
    ],
    "message": "fixed case.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1242584559
  },
  {
    "id": "3cb06eb2b2e80795d8f97d1fcfdcb8f1d01f02ce",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test1101",
      "CHANGES"
    ],
    "message": "- James Bursa posted a patch to the mailing list that fixed a problem with\n  no_proxy which made it not skip the proxy if the URL entered contained a\n  user name. I added test case 1101 to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1242571670
  },
  {
    "id": "6e1632c60688a7c801bc25c8bb79bb937b605da8",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Kamil Dudka provided a fix for libcurl-NSS reported by Michael Cronenworth\n  at https://bugzilla.redhat.com/show_bug.cgi?id=453612#c12\n\n  If an incorrect password is given while loading a private key, libcurl ends\n  up in an infinite loop consuming memory. The bug is critical.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1242033229
  },
  {
    "id": "56dab605f1f1010d7a97b29532d294ad5a6a83a9",
    "files": [
      "tests/data/test1100",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/http.c",
      "RELEASE-NOTES",
      "TODO-RELEASE"
    ],
    "message": "- I fixed the problem with doing NTLM, POST and then following a 302 redirect,\n  as reported by Ebenezer Ikonne (on curl-users) and Laurent Rabret (on\n  curl-library). The transfer was mistakenly marked to get more data to send\n  but since it didn't actually have that, it just hung there...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1242032158
  },
  {
    "id": "fd5e69f7697c1230b618693ffa697e409a202271",
    "files": [
      "lib/url.c"
    ],
    "message": "ConnectPlease() fixed for the new proxy connect functionality to make sure\n'connected' truly is false when the socks connect fails.\n\nCurl_done() fixed for the check-conn->bits.done-before-Curl_getoff_all_pipelines case",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1241904888
  },
  {
    "id": "e84c7db0497478b41f435f047d7b0e75b9289bb6",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/url.h",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Constantine Sapuntzakis fixed bug report #2784055\n  (http://curl.haxx.se/bug/view.cgi?id=2784055) identifying a problem to\n  connect to SOCKS proxies when using the multi interface. It turned out to\n  almost not work at all previously. We need to wait for the TCP connect to\n  be properly verified before doing the SOCKS magic.\n\n  There's still a flaw in the FTP code for this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1241780380
  },
  {
    "id": "7bdd14a9946e1b93e2e1614ad436405e9c497147",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES"
    ],
    "message": "- Vijay G filed bug report #2723236\n  (http://curl.haxx.se/bug/view.cgi?id=2723236) identifying a problem with\n  libcurl's TFTP code and its lack of dealing with the OACK packet.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1241685043
  },
  {
    "id": "a16cca768051ae7c2020426fef00bb0ec537477a",
    "files": [
      "lib/sslgen.h",
      "RELEASE-NOTES",
      "lib/sslgen.c",
      "lib/ssluse.c",
      "CHANGES"
    ],
    "message": "- Michael Smith posted bug report #2786255\n  (http://curl.haxx.se/bug/view.cgi?id=2786255) with a patch, identifying how\n  libcurl did not deal with SSL session ids properly if the server rejected a\n  re-use of one. Starting now, it will forget the rejected one and remember\n  the new. This change was for OpenSSL only, it is likely that other SSL lib\n  code needs similar fixes.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1241474234
  },
  {
    "id": "6b95c4e358f3bcaf60471353c54c5c32d596a536",
    "files": [
      "tests/libtest/lib562.c",
      "docs/KNOWN_BUGS",
      "CHANGES",
      "tests/libtest/Makefile.inc",
      "tests/data/test562"
    ],
    "message": "- I was going to fix issue #59 in KNOWN_BUGS\n\n  If the CURLOPT_PORT option is used on an FTP URL like\n  \"ftp://example.com/file;type=A\" the \";type=A\" is stripped off.\n\n  I added test case 562 to verify, only to find out that I couldn't repeat\n  this bug so I hereby consider it not a bug anymore!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1241082159
  },
  {
    "id": "e2c6e00570da70c00c7c75fa8f094eda77376d0c",
    "files": [
      "lib/tftp.c",
      "tests/data/test1099",
      "tests/data/DISABLED",
      "CHANGES",
      "RELEASE-NOTES",
      "TODO-RELEASE"
    ],
    "message": "- Based on bug report #2723219 (http://curl.haxx.se/bug/view.cgi?id=2723219)\n  I've now made TFTP \"connections\" not being kept for re-use within libcurl.\n  TFTP is UDP-based so the benefit was really low (if even existing) to begin\n  with so instead of tracking down to fix this problem we instead removed the\n  re-use. I also enabled test case 1099 that I wrote a few days ago to verify\n  that this change fixes the reported problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1241004603
  },
  {
    "id": "d068001102519c01970808e1ec572016ee3d3408",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "- Constantine Sapuntzakis filed bug report #2783090\n  (http://curl.haxx.se/bug/view.cgi?id=2783090) pointing out that on windows\n  we need to grow the SO_SNDBUF buffer somewhat to get really good upload\n  speeds. http://support.microsoft.com/kb/823764 has the details. Friends\n  confirmed that simply adding 32 to CURL_MAX_WRITE_SIZE is enough.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1240950426
  },
  {
    "id": "e01b7c1ede6f8b91f458259dbed96acce7bf3779",
    "files": [
      "src/main.c",
      "include/curl/curl.h",
      "CHANGES",
      "lib/http.c",
      "RELEASE-NOTES",
      "lib/ssh.c",
      "lib/ftp.c",
      "docs/libcurl/curl_easy_setopt.3"
    ],
    "message": "- Bug report #2709004 (http://curl.haxx.se/bug/view.cgi?id=2709004) by Tim\n  Chen pointed out how curl couldn't upload with resume when reading from a\n  pipe.\n\n  This ended up with the introduction of a new return code for the\n  CURLOPT_SEEKFUNCTION callback that basically says that the seek failed but\n  that libcurl may try to resolve the situation anyway. In our case this means\n  libcurl will attempt to instead read that much data from the stream instead\n  of seeking and that way curl can now upload with resume when data is read\n  from a stream!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1240917550
  },
  {
    "id": "14df44dd3f9b562cb2ed37baca95446b05d2e66b",
    "files": [
      "RELEASE-NOTES",
      "lib/sslgen.c",
      "CHANGES"
    ],
    "message": "- Bug report #2779733 (http://curl.haxx.se/bug/view.cgi?id=2779733) by Sven\n  Wegener pointed out that CURLINFO_APPCONNECT_TIME didn't work with the multi\n  interface and provided a patch that fixed the problem!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1240746982
  },
  {
    "id": "828a26286d22b61b28de6cf356806731560b3805",
    "files": [
      "RELEASE-NOTES",
      "lib/urldata.h",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Kamil Dudka fixed another NSS-related leak when client certs were used.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1240610118
  },
  {
    "id": "30f7a2ff20deea9b9950c54ec17c7ea9f7c77866",
    "files": [
      "tests/data/test1098",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Pramod Sharma reported and tracked down a bug when doing FTP over a HTTP\n  proxy. libcurl would then wrongly close the connection after each\n  request. In his case it had the weird side-effect that it killed NTLM auth\n  for the proxy causing an inifinite loop!\n\n  I added test case 1098 to verify this fix. The test case does however not\n  properly verify that the transfers are done persistently - as I couldn't\n  think of a clever way to achieve it right now - but you need to read the\n  stderr output after a test run to see that it truly did the right thing.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1239972504
  },
  {
    "id": "379bfa5a36809b3c44bc792cffd36c832b5d9fbb",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- bug report #2727981 (http://curl.haxx.se/bug/view.cgi?id=2727981) by Martin\n  Storsjo pointed out how setting CURLOPT_NOBODY to 0 could be downright\n  confusing as it set the method to either GET or HEAD. The example he showed\n  looked like:\n\n   curl_easy_setopt(curl, CURLOPT_PUT, 1);\n   curl_easy_setopt(curl, CURLOPT_NOBODY, 0);\n\n  The new way doesn't alter the method until the request is about to start. If\n  CURLOPT_NOBODY is then 1 the HTTP request will be HEAD. If CURLOPT_NOBODY is\n  0 and the request happens to have been set to HEAD, it will then instead be\n  set to GET. I believe this will be less surprising to users, and hopefully\n  not hit any existing users badly.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1239645662
  },
  {
    "id": "235c0077b8648a3b941090991a0ce6ac24d681ab",
    "files": [
      "RELEASE-NOTES",
      "lib/urldata.h",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Toshio Kuratomi reported a memory leak problem with libcurl+NSS that turned\n  out to be leaking cacerts. Kamil Dudka helped me complete the fix. The issue\n  is found in Redhat's bug tracker:\n  https://bugzilla.redhat.com/show_bug.cgi?id=453612\n\n  There are still memory leaks present, but they seem to have other reasons.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1239644530
  },
  {
    "id": "e9dd0998706a0ce099826b982bbb1671909fe026",
    "files": [
      "tests/server/Makefile.am",
      "CMakeLists.txt",
      "tests/server/CMakeLists.txt",
      "tests/libtest/Makefile.inc",
      "tests/server/Makefile.inc",
      "tests/libtest/Makefile.am",
      "tests/libtest/lib556.c",
      "tests/libtest/CMakeLists.txt"
    ],
    "message": "Added missing tests in CMake, added Makefile.inc for tests (+ use in CMake scripts), and fixed a missing define under windows in a test source file.",
    "committer": {
      "email": "suky0001@free.fr",
      "name": "Benoit Neil"
    },
    "date": 1239141555
  },
  {
    "id": "a06b36dee05e89c2886f6a77a007087382d42e0e",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Andre Guibert de Bruet fixed a NULL pointer use in an infof() call if a\n  strdup() call failed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1238588137
  },
  {
    "id": "bdec6f2b20440b53859e472d185a21f1951341d5",
    "files": [
      "lib/slist.c",
      "lib/sendf.c",
      "lib/slist.h",
      "CHANGES",
      "RELEASE-NOTES",
      "lib/Makefile.inc",
      "lib/easy.c"
    ],
    "message": "- Frank Hempel found out a bug and provided the fix:\n\n  curl_easy_duphandle did not necessarily duplicate the CURLOPT_COOKIEFILE\n  option. It only enabled the cookie engine in the destination handle if\n  data->cookies is not NULL (where data is the source handle). In case of a\n  newly initialized handle which just had the cookie support enabled by a\n  curl_easy_setopt(handle, CURL_COOKIEFILE, \"\")-call, handle->cookies was\n  still NULL because the setopt-call only appends the value to\n  data->change.cookielist, hence duplicating this handle would not have the\n  cookie engine switched on.\n\n  We also concluded that the slist-functionality would be suitable for being\n  put in its own module rather than simply hanging out in lib/sendf.c so I\n  created lib/slist.[ch] for them.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1236601306
  },
  {
    "id": "f4e8c406bbb279eb8d96576475c808c2c769c687",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Andre Guibert de Bruet found and fixed a code segment in ssluse.c where the\n  allocation of the memory BIO was not being properly checked.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1236553015
  },
  {
    "id": "12bfcb501c82f7a0911a8ee92b5e8143225ce207",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "- Andre Guibert de Bruet fixed the gnutls-using code: There are a few places\n  in the gnutls code where we were checking for negative values for errors,\n  when the man pages state that GNUTLS_E_SUCCESS is returned on success and\n  other values indicate error conditions.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1236552725
  },
  {
    "id": "0fc1782dd45e7ae17313bfebd7a521f3e30cde60",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Andre Guibert de Bruet fixed a typo in the error message",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1236552359
  },
  {
    "id": "9274d3169089f86f7ba1b3553585cfe6a2747f2e",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Bill Egert pointed out (http://curl.haxx.se/bug/view.cgi?id=2671602) that\n  curl didn't use sprintf() in a way that is documented to work in POSIX but\n  since we use our own printf() code (from libcurl) that shouldn't be a\n  problem. Nonetheless I modified the code to not rely on such particular\n  features and to not cause further raised eyebrowse with no good reason.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1236552170
  },
  {
    "id": "042cc1f69ec0878f542667cb684378869f859911",
    "files": [
      "include/curl/curl.h",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/urldata.h",
      "docs/libcurl/curl_easy_setopt.3",
      "docs/libcurl/symbols-in-versions"
    ],
    "message": "- David Kierznowski notified us about a security flaw\n  (http://curl.haxx.se/docs/adv_20090303.html also known as CVE-2009-0037) in\n  which previous libcurl versions (by design) can be tricked to access an\n  arbitrary local/different file instead of a remote one when\n  CURLOPT_FOLLOWLOCATION is enabled. This flaw is now fixed in this release\n  together this the addition of two new setopt options for controlling this\n  new behavior:\n\n  o CURLOPT_REDIR_PROTOCOLS controls what protocols libcurl is allowed to\n  follow to when CURLOPT_FOLLOWLOCATION is enabled. By default, this option\n  excludes the FILE and SCP protocols and thus you nee to explicitly allow\n  them in your app if you really want that behavior.\n\n  o CURLOPT_PROTOCOLS controls what protocol(s) libcurl is allowed to fetch\n  using the primary URL option. This is useful if you want to allow a user or\n  other outsiders control what URL to pass to libcurl and yet not allow all\n  protocols libcurl may have been built to support.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1236035131
  },
  {
    "id": "6c9f37d263593bd72759cc2c0d275a3a9cd47b19",
    "files": [
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES",
      "lib/getinfo.c",
      "docs/libcurl/curl_easy_getinfo.3"
    ],
    "message": "- After a bug reported by James Cheng I've made curl_easy_getinfo() for\n  CURLINFO_CONTENT_LENGTH_DOWNLOAD and CURLINFO_CONTENT_LENGTH_UPLOAD return\n  -1 if the sizes aren't know. Previously these returned 0, make it impossible\n  to detect the difference between actually zero and unknown.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1235414700
  },
  {
    "id": "4ad296c60b1188e21e861e800a84eee32f986a9e",
    "files": [
      "lib/content_encoding.c",
      "CHANGES"
    ],
    "message": "- A second follow-up change by Andre Guibert de Bruet to fix a related memory\n  leak like that fixed on the 14th. When zlib returns failure, we need to\n  cleanup properly before returning error.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1234872881
  },
  {
    "id": "d315d41a12b3273b258ea7823b73c3c7bab3a4e9",
    "files": [
      "lib/content_encoding.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Andre Guibert de Bruet found and fixed a memory leak in the content encoding\n  code, which could happen on libz errors.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1234602549
  },
  {
    "id": "002cf105c6779ecf66acb36ba86aa415b8b98b09",
    "files": [
      "lib/urldata.h",
      "lib/ftp.c",
      "include/curl/curl.h",
      "CHANGES",
      "lib/getinfo.c",
      "RELEASE-NOTES",
      "docs/libcurl/curl_easy_getinfo.3",
      "docs/libcurl/curl_easy_setopt.3",
      "lib/transfer.c",
      "docs/libcurl/symbols-in-versions"
    ],
    "message": "- CURLINFO_CONDITION_UNMET was added to allow an application to get to know if\n  the condition in the previous request was unmet. This is typically a time\n  condition set with CURLOPT_TIMECONDITION and was previously not possible to\n  reliably figure out. From bug report #2565128\n  (http://curl.haxx.se/bug/view.cgi?id=2565128)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1234388834
  },
  {
    "id": "09f4a1c5e5acddeacb605ce2382fd027e6b50393",
    "files": [
      "lib/ftp.c",
      "CHANGES",
      "lib/socks_gssapi.c"
    ],
    "message": "Fixed --disable-proxy for FTP and SOCKS. Thanks to Daniel Egger for reporting\nthe problem.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1233343765
  },
  {
    "id": "82ca52713bbb7b31e5d269e7f50dbc0cd065a297",
    "files": [
      "RELEASE-NOTES",
      "lib/http_digest.c",
      "CHANGES",
      "tests/data/Makefile.am",
      "tests/data/test1095"
    ],
    "message": "- Alexey Borzov filed bug report #2535504\n  (http://curl.haxx.se/bug/view.cgi?id=2535504) pointing out that realms with\n  quoted quotation marks in HTTP Digest headers didn't work. I've now added\n  test case 1095 that verifies my fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1232975943
  },
  {
    "id": "5591550167092c0e5f307b3c2c87f44518e7159f",
    "files": [
      "lib/tftp.c",
      "lib/http_ntlm.c",
      "lib/http.c",
      "lib/ssluse.c",
      "tests/data/test1093",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test561",
      "tests/data/test1094",
      "tests/data/test1091",
      "lib/rawstr.c",
      "lib/rawstr.h",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/test1092",
      "lib/url.h"
    ],
    "message": "Fixed a couple more locale-dependent toupper conversions, mainly for\nclarity.  This does fix one problem that causes ;type=i FTP URLs\nto fail in the Turkish locale when CURLOPT_PROXY_TRANSFER_MODE is\nused (test case 561)\n\nAdded tests 561 and 1092 through 1094 to test various combinations\nof ;type= and ;mode= URLs that could potentially fail in the Turkish\nlocale.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1232512967
  },
  {
    "id": "1225d36188e56a68b3f0cc6ed0c602c3c3e00615",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES"
    ],
    "message": "Grant Erickson fixed timeouts for TFTP",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1231889046
  },
  {
    "id": "a19e02be5e3fc41aee1ecee73a26d363e186e36e",
    "files": [
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "- Michael Wallner fixed a NULL pointer deref when calling\n  curl_easy_setup(curl, CURLOPT_COOKIELIST, \"SESS\") on a CURL handle with no\n  cookies data.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1231885274
  },
  {
    "id": "452e52f95824a7d2a761c336ba5a006209ce1e9f",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Emil Romanus fixed:\n\n  When using the multi interface over HTTP and the server returns a Location\n  header, the running easy handle will get stuck in the CURLM_STATE_PERFORM\n  state, leaving the external event loop stuck waiting for data from the\n  ingoing socket (when using the curl_multi_socket_action stuff). While this\n  bug was pretty hard to find, it seems to require only a one-line fix. The\n  break statement on line 1374 in multi.c caused the function to skip the call\n  to multistate().\n\n  How to reproduce this bug? Well, that's another question.  evhiperfifo.c in\n  the examples directory chokes on this bug only _sometimes_, probably\n  depending on how fast the URLs are added. One way of testing the bug out is\n  writing to hiper.fifo from more than one source at the same time.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1231625457
  },
  {
    "id": "83640b2ee5e41292eab2ff3e722c5ac4caea17c9",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES"
    ],
    "message": "- Phil Lisiecki filed bug report #2413067\n  (http://curl.haxx.se/bug/view.cgi?id=2413067) that identified a problem that\n  would cause libcurl to mark a DNS cache entry \"in use\" eternally if the\n  subsequence TCP connect failed. It would thus never get pruned and refreshed\n  as it should've been.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1230589550
  },
  {
    "id": "59227bf0756e79edbe1082aa45d0a22a40c5fa17",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Peter Korsgaard fixed building libcurl with \"configure --with-ssl\n  --disable-verbose\".",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1230501636
  },
  {
    "id": "216ad2680bdaade5e6029b86858b3b633359d43c",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Igor Novoseltsev fixed a bad situation for the multi_socket() API when doing\n  pipelining, as libcurl could then easily get confused and A) work on the\n  handle that was not \"first in queue\" on a pipeline, or even B) tell the app\n  to REMOVE a socket while it was in use by a second handle in a pipeline. Both\n  errors caused hanging or stalling applications.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1229810602
  },
  {
    "id": "792279581b0449ce5fe2e4580efc1b3990772ee7",
    "files": [
      "TODO-RELEASE",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- More work with Igor Novoseltsev to first fix the remaining stuff for\n  removing easy handles from multi handles when the easy handle is/was within\n  a HTTP pipeline. His bug report #2351653\n  (http://curl.haxx.se/bug/view.cgi?id=2351653) was also related and was\n  eventually fixed by a patch by Igor himself.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1229084471
  },
  {
    "id": "0f5895faee96934fdeea82f42f45bb3e53b915e5",
    "files": [
      "RELEASE-NOTES",
      "lib/easy.c",
      "CHANGES"
    ],
    "message": "- Bug report #2416182 titled \"crash in ConnectionExists when using\n  duphandle+curl_mutli\" (http://curl.haxx.se/bug/view.cgi?id=2416182) showed\n  that curl_easy_duphandle() wrongly also copied the pointer to the connection\n  cache, which was plain wrong and caused a segfault if the handle would be\n  used in a different multi handle than the handle it was duplicated from.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1229039576
  },
  {
    "id": "42365aa7ef58f0a466f2e4ee42718c358b5a9937",
    "files": [
      "RELEASE-NOTES",
      "lib/urldata.h",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Christian Krause filed bug #2221237\n  (http://curl.haxx.se/bug/view.cgi?id=2221237) that identified an infinite\n  loop during GSS authentication given some specific conditions. With his\n  patience and great feedback I managed to narrow down the problem and\n  eventually fix it although I can't test any of this myself!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1228744340
  },
  {
    "id": "7abdc4b21811e2d52f49fcf1380c48ccd46b3cc0",
    "files": [
      "lib/if2ip.c",
      "CHANGES"
    ],
    "message": "Fixed the getifaddrs version of Curl_if2ip to work on systems without IPv6\nsupport (e.g. Minix)",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1228371840
  },
  {
    "id": "479ddb1fee2fa5f7204a64742e9dcc2842d668dd",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/url.h",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Igor Novoseltsev filed bug #2351645\n  (http://curl.haxx.se/bug/view.cgi?id=2351645) that identified a problem with\n  the multi interface that occured if you removed an easy handle while in\n  progress and the handle was used in a HTTP pipeline.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1228317627
  },
  {
    "id": "58ebde9502cbab9215be7f0d72f08e552b7af876",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "- Pawel Kierski pointed out a mistake in the cookie code that could lead to a\n  bad fclose() after a fatal error had occured.\n  (http://curl.haxx.se/bug/view.cgi?id=2382219)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1228316889
  },
  {
    "id": "67fb731ec495b9bcc2e16ba48a39f13362a3a6db",
    "files": [
      "ares/CHANGES",
      "ares/ares_parse_ptr_reply.c"
    ],
    "message": "Gerald Combs fixed a bug in ares_parse_ptr_reply() which would cause a\nbuffer to shrink instead of expand if a reply contained 8 or more records.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1227719075
  },
  {
    "id": "4b3ae5e1575fd40d3ca969fda2f23e46182cf0b8",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Christian Krause reported and fixed a memory leak that would occur with HTTP\n  GSS/kerberos authentication (http://curl.haxx.se/bug/view.cgi?id=2284386)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1227104521
  },
  {
    "id": "c76d9395633e00205b1b83bd82c811f9fa4cca1e",
    "files": [
      "RELEASE-NOTES",
      "lib/sendf.c",
      "CHANGES"
    ],
    "message": "Christian Krause fixed a build failure when building with gss support\nenabled and FTP disabled.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1226839373
  },
  {
    "id": "da6c15163beade8a35aeb94813f2bf8de33bc271",
    "files": [
      "lib/nss.c"
    ],
    "message": "based on a report by Jim Meyering, I went over and added checks for return\ncodes for all calls to malloc and strdup that were missing. I also changed\na few malloc(13) to use arrays on the stack and a few malloc(PATH_MAX) to\ninstead use aprintf() to lower memory use.\nI also fixed a memory leak in Curl_nss_connect() when CURLOPT_ISSUERCERT is\nin use.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1226792590
  },
  {
    "id": "9818bf7026068c0715700eacd3a81b72082f0b71",
    "files": [
      "ares/ares_parse_ptr_reply.c"
    ],
    "message": "Fixed an OOM condition reported by Jim Meyering",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1226790455
  },
  {
    "id": "c331c73ec6d16aa2c40eb7e9e0f2426c7170c47d",
    "files": [
      "lib/sendf.c",
      "CHANGES"
    ],
    "message": "- Fixed a potential data loss in Curl_client_write() when the transfer is\n  paused.",
    "committer": {
      "email": "mmarek@suse.cz",
      "name": "Michal Marek"
    },
    "date": 1226564423
  },
  {
    "id": "b2ed1e2607532ce56f06bd8d2eaff98df981f321",
    "files": [
      "tests/libtest/lib560.c"
    ],
    "message": "Fixed an OOM problem with test 560",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1226528766
  },
  {
    "id": "4cbc0f6c2e9557e7aad07abd62e6b836f78134e1",
    "files": [
      "lib/sslgen.h",
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Rainer Canavan filed bug #2255627\n  (http://curl.haxx.se/bug/view.cgi?id=2255627) which pointed out that a\n  program using libcurl's multi interface to download a HTTPS page with a\n  libcurl built powered by OpenSSL, would easily get silly and instead hand\n  over SSL details as data instead of the actual HTTP headers and body. This\n  happened because libcurl would consider the connection handshake done too\n  early. This problem was introduced at September 22nd 2008 with my fix of the\n  bug #2107377\n\n  The correct fix is now instead done within the GnuTLS-handling code, as both\n  the OpenSSL and the NSS code already deal with this situation in similar\n  fashion. I added test case 560 in an attempt to verify this fix, but\n  unfortunately it didn't trigger it even before this fix!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1226441967
  },
  {
    "id": "d07d1a6ef85d6e42d3e376935cdede698c968556",
    "files": [
      "tests/data/test560",
      "tests/libtest/lib560.c",
      "tests/libtest/Makefile.am"
    ],
    "message": "Added test case 560:\n\nThis test was added after the HTTPS-using-multi-interface with OpenSSL\nregression of 7.19.1 to hopefully prevent this embarassing mistake from\nappearing again... Unfortunately the bug wasn't triggered by this test, which\npresumably is because the connect to a local server is too fast/different\ncompared to the real/distant servers we saw the bug happen with.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1226440765
  },
  {
    "id": "6354cbf9d6b1f16544c69d8a9d2b7816768da11b",
    "files": [
      "RELEASE-NOTES",
      "lib/if2ip.c",
      "CHANGES"
    ],
    "message": "The getifaddrs() version of Curl_if2ip() crashed when used on a Linux\nsystem with a TEQL load-balancing device configured, which doesn't\nhave an address.  Thanks to Adam Sampson for spotting this (bug #2234923).",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1226082800
  },
  {
    "id": "d0b8b5a1990a31f37fcab925cb8b59bee958d41d",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "lib/connect.c",
      "CHANGES",
      "lib/connect.h"
    ],
    "message": "- Bug #2218480 (http://curl.haxx.se/bug/view.cgi?id=2218480) pointed out a\n  problem with my CURLINFO_PRIMARY_IP fix from October 7th that caused a NULL\n  pointer read. I also took the opportunity to clean up this logic (storing of\n  the connection's IP address) somewhat as we had it stored in two different\n  places and ways previously and they are now unified.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1225729496
  },
  {
    "id": "85ffd33f087640bf43fe974cf4c70ad2c3929312",
    "files": [
      "RELEASE-NOTES",
      "lib/hostares.c",
      "CHANGES"
    ],
    "message": "Daniel Johnson reported and fixed ipv4 name resolves when libcurl is built\nwith ipv6-enabled c-ares",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1225583394
  },
  {
    "id": "4fef0d4f14dc3765e88a17fae3c4cd90fff89c33",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Fixed a bug that caused a few bytes of garbage to be sent after a\ncurl_easy_pause() during a chunky upload. Reported by Steve Roskowski.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1225307208
  },
  {
    "id": "7ff38c14a97e701a9ab521a3730b014c3647b14e",
    "files": [
      "lib/ssh.c",
      "TODO-RELEASE",
      "tests/data/DISABLED",
      "CHANGES"
    ],
    "message": "Fixed some problems with SFTP range support to fix test cases 634 through 637.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1224573025
  },
  {
    "id": "2688cf343bdcab56c781e1932c42aadea7bacb39",
    "files": [
      "src/main.c"
    ],
    "message": "Fixed potential memory leak in OOM situations. Detected by coverity.com",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1224450040
  },
  {
    "id": "9d16b4081ed011c11f9876ae2685076e92113593",
    "files": [
      "lib/netrc.c",
      "lib/nss.c",
      "lib/curlx.h",
      "lib/http.c",
      "lib/ssluse.c",
      "lib/ldap.c",
      "lib/gtls.c",
      "lib/cookie.c",
      "src/main.c",
      "lib/url.c",
      "lib/telnet.c",
      "lib/http_digest.c",
      "lib/parsedate.c",
      "lib/strequal.c",
      "lib/strequal.h"
    ],
    "message": "Renamed Curl_ascii_equal to Curl_raw_equal and bugfixed the my_toupper function\nused in strequal.c so now all test cases run fine for me again.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1224145428
  },
  {
    "id": "a579d6706436615845f57692921e0891fb6e3719",
    "files": [
      "lib/netrc.c",
      "lib/nss.c",
      "lib/curlx.h",
      "lib/http.c",
      "lib/ssluse.c",
      "lib/ldap.c",
      "lib/gtls.c",
      "lib/cookie.c",
      "src/main.c",
      "lib/parsedate.c",
      "CHANGES",
      "lib/telnet.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/http_digest.c",
      "TODO-RELEASE",
      "lib/strequal.c",
      "lib/strequal.h"
    ],
    "message": "- Pascal Terjan filed bug #2154627\n  (http://curl.haxx.se/bug/view.cgi?id=2154627) which pointed out that libcurl\n  uses strcasecmp() in multiple places where it causes failures when the\n  Turkish locale is used. This is because 'i' and 'I' isn't the same letter so\n  strcasecmp() on those letters are different in Turkish than in English (or\n  just about all other languages). I thus introduced a totally new internal\n  function in libcurl (called Curl_ascii_equal) for doing case insentive\n  comparisons for english-(ascii?) style strings that thus will make \"file\"\n  and \"FILE\" match even if the Turkish locale is selected.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1224107028
  },
  {
    "id": "0ecdcc253b87b5575c2cd96ac2f92a170bb3c906",
    "files": [
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- John Wilkinson filed bug #2155496\n  (http://curl.haxx.se/bug/view.cgi?id=2155496) pointing out an error case\n  without a proper human-readable error message. When a read callback returns\n  a too large value (like when trying to return a negative number) it would\n  trigger and the generic error message then makes the proplem slightly\n  different to track down. I've added an error message for this now.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1224056628
  },
  {
    "id": "fad3288d20fba6af71fa9bdfb851fe92c3aa2f04",
    "files": [
      "lib/ftp.c",
      "CHANGES",
      "lib/if2ip.h",
      "configure.ac",
      "RELEASE-NOTES",
      "lib/if2ip.c",
      "lib/connect.c"
    ],
    "message": "Fixed the --interface option to work with IPv6 connections on glibc\nsystems supporting getifaddrs(). Also fixed a problem where an IPv6\naddress could be chosen instead of an IPv4 one for --interface when it\ninvolved a name lookup.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1223580230
  },
  {
    "id": "830018aa38817547dddfc9e4e706eaad758a579b",
    "files": [
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- Bug #2152270 (http://curl.haxx.se/bug/view.cgi?id=2152270) identified and\n  fixed a CURLINFO_REDIRECT_URL memory leak and an additional wrong-doing:\n\n  Any subsequent transfer with a redirect leaks memory, eventually crashing\n  the process potentially.\n\n  Any subsequent transfer WITHOUT a redirect causes the most recent redirect\n  that DID occur on some previous transfer to still be reported.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1223503283
  },
  {
    "id": "544f2f74dfa7ef9bdb08b098995e61c1ca0e1aca",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Igor filed bug #2111613 (http://curl.haxx.se/bug/view.cgi?id=2111613) that\n  eventually identified a flaw in how the multi_socket interface in some cases\n  missed to call the timeout callback when easy interfaces are removed and\n  added within the same millisecond.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1223502149
  },
  {
    "id": "450348d6bd8a9d0fc22eb53f066443b5d0180113",
    "files": [
      "lib/url.c"
    ],
    "message": "Fixed a memory leak in the new CURLOPT_USERPWD handling",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1223496886
  },
  {
    "id": "61cfbecc7458edd4cc2d538d0a361648131a2c93",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Fixed CURLINFO_PRIMARY_IP: When libcurl created a connection to host A then\n  the app re-used the handle to do a connection to host B and then again\n  re-used the handle to host A, it would not update the info with host A's IP\n  address (due to the connection being re-used) but it would instead report\n  the info from host B.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1223416616
  },
  {
    "id": "0a305eb79f444db81b4f6ae8c6f201af46f1888e",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Bug #2107803 (http://curl.haxx.se/bug/view.cgi?id=2107803) \"no\n  CURLINFO_REDIRECT_URL in multi mode\" also contained a patch that fixed the\n  problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1222690930
  },
  {
    "id": "426ec2d3994886fc5c439af477858acc8969147e",
    "files": [
      "lib/http.c"
    ],
    "message": "Fixed a few comment typos",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1222458912
  },
  {
    "id": "1b9d311b5ce7709a41558b3973c407ffef4a9848",
    "files": [
      "RELEASE-NOTES",
      "lib/http_digest.c",
      "CHANGES"
    ],
    "message": "- Fixed the HTTP Digest auth code to not behave badly when getting a blank realm\n  with realm=\"\". http://curl.haxx.se/bug/view.cgi?id=2126435",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1222351762
  },
  {
    "id": "391e8afd1f6695cb57738790676cfa4d57d54bcb",
    "files": [
      "lib/sendf.c",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/socks.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "lib/sendf.h"
    ],
    "message": "- Made the SOCKS code use the new Curl_read_plain() function to fix the bug\n  Markus Moeller reported: http://curl.haxx.se/mail/archive-2008-09/0016.html\n\n- recv() errors other than those equal to EAGAIN now cause proper\n  CURLE_RECV_ERROR to get returned. This made test case 160 fail so I've now\n  disabled it until we can figure out another way to exercise that logic.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1222125120
  },
  {
    "id": "c4a694862c69f2b63c6b775cd6fdf1a7afcc0a52",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Michael Goffioul filed bug report #2107377 \"Problem with mutli + GnuTLS +\n  proxy\" (http://curl.haxx.se/bug/view.cgi?id=2107377) that showed how a multi\n  interface using program didn't work when built with GnuTLS and a CONNECT\n  request was done over a proxy (basically test 502 over a proxy to a HTTPS\n  site). It turned out the ssl connect function would get called twice which\n  caused the second call to fail.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1222116133
  },
  {
    "id": "2816902f0e91073887a0f746eae70edb75d9ea43",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Dmitry Kurochkin fixed pipelining over proxy using the multi interface",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1220876109
  },
  {
    "id": "29ec219b82ba65fd4be0fd7c9d678eb9ae1890b7",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Fixed an out of memory problem that caused torture test failures in tests\n706 and 707.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1220397120
  },
  {
    "id": "c67a99ff27036c824be15f01e21b91c3ec08da4a",
    "files": [
      "CHANGES",
      "lib/transfer.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "tests/data/test1070",
      "tests/server/sws.c",
      "tests/FILEFORMAT"
    ],
    "message": "- When libcurl was doing a HTTP POST and the server would respond with\n  \"Connection: close\" and actually close the connection after the\n  response-body, libcurl could still have outstanding data to send and it\n  would not properly notice this and stop sending. This caused weirdness and\n  sad faces. http://curl.haxx.se/bug/view.cgi?id=2080222\n\n  Note that there are still reasons to consider libcurl's behavior when\n  getting a >= 400 response code while sending data, as Craig Perras' note\n  \"http upload: how to stop on error\" specifies:\n  http://curl.haxx.se/mail/archive-2008-08/0138.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1220006879
  },
  {
    "id": "099b62f1246602af876f39f9155ddae2ef909181",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Dengminwen reported that libcurl would lock a (cookie) share twice (without\n  an unlock in between) for a certain case and that in fact works when using\n  regular windows mutexes but not with pthreads'! Locks should of course not\n  get locked again so this is now fixed.\n  http://curl.haxx.se/mail/lib-2008-08/0422.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1219909049
  },
  {
    "id": "8ce78ca488f589d9b1987e7713f28f9da15cba0f",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/DISABLED",
      "CHANGES",
      "tests/data/test1065"
    ],
    "message": "Fixed test case 1065 by changing the handling of CURLOPT_UPLOAD to set\nthe HTTP method to GET (or HEAD) when given a value of 0.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1219904887
  },
  {
    "id": "4b01dfe369896a8a93a3c82228c755a03da731e9",
    "files": [
      "lib/url.c",
      "lib/connect.c",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Fixed out of memory problems that caused torture test failures in tests\n1021 and 1067.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1219786137
  },
  {
    "id": "13dc82b9d4e3280e9fbb038027169a544fcbd171",
    "files": [
      "lib/multi.c",
      "RELEASE-NOTES",
      "lib/mk-ca-bundle.pl",
      "CHANGES",
      "configure.ac"
    ],
    "message": "- Constantine Sapuntzakis fixed a bug when doing proxy CONNECT with the multi\n  interface, and the proxy would send Connection: close during the\n  authentication phase.  http://curl.haxx.se/bug/view.cgi?id=2069047",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1219493498
  },
  {
    "id": "e3ad6d2bd111d12ba0019a916270950cf83956bf",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test1066",
      "CHANGES"
    ],
    "message": "Fixed a problem when --dump-header - was given with more than one URL,\nwhich caused an error when the second header was dumped due to stdout\nbeing closed.  Added test case 1066 to verify.  Also fixed a potential\nproblem where a closed file descriptor might be used for an upload\nwhen more than one URL is given.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1219445845
  },
  {
    "id": "17e1f58fd67d630390f6c6bce78e319e8a5831b9",
    "files": [
      "lib/url.c"
    ],
    "message": "Work around a scanf() bug in djgpp 2.04. The assignments for this\nformat is working okay. But the return value is incorrectly EOF.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1219335638
  },
  {
    "id": "afe7bb4b3309d260e9537af47a02f1a7dc6eee6a",
    "files": [
      "lib/mprintf.c"
    ],
    "message": "Fix a LONG_MIN and LLONG_MIN related bug in internal m*printf()",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1219283359
  },
  {
    "id": "f209a4804b812970a82275216a2c448c5232906a",
    "files": [
      "lib/mprintf.c"
    ],
    "message": "Fix one bug detected thanks to test case 557.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1219277523
  },
  {
    "id": "cf30b24706ee0d30f8aeae4360f39c96d329fad5",
    "files": [
      "docs/examples/sendrecv.c"
    ],
    "message": "Fixed unused variable warning",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1218739297
  },
  {
    "id": "7eab7fa3534c9ba82b45752e3726a7f1a4645e0d",
    "files": [
      "tests/data/test1061",
      "tests/data/Makefile.am",
      "tests/data/test1060",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Fixed a buffer overflow problem in Curl_proxyCONNECT that could occur\nwhen a server responded with long headers and data.  Luckily, the buffer\noverflowed into another unused buffer, so no actual harm was done.\nAdded test cases 1060 and 1061 to verify.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1218571672
  },
  {
    "id": "f1fe04245ac04b72d1380b6a75a46dcb335fd7ab",
    "files": [
      "tests/data/test1062",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Fixed a boundary condition error in ftp_readresp() whereby a non-terminal\nline of a multiline FTP response whose last byte landed exactly at the end\nof the BUFSIZE-length buffer would be treated as the terminal response\nline.  The following response code read in would then actually be the\nend of the previous response line, and all responses from then on would\ncorrespond to the wrong command. Test case 1062 verifies this.\n\nStop closing a never-opened ftp socket.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1218496568
  },
  {
    "id": "f8a3aa91cd87a84ea1b5a0a643571bafda3968c8",
    "files": [
      "RELEASE-NOTES",
      "lib/http_ntlm.h",
      "lib/easy.c",
      "CHANGES",
      "lib/http_ntlm.c"
    ],
    "message": "- Constantine Sapuntzakis filed bug report #2042430\n  (http://curl.haxx.se/bug/view.cgi?id=2042430) with a patch. \"NTLM Windows\n  SSPI code is not thread safe\". This was due to libcurl using static\n  variables to tell wether to load the necessary SSPI DLL, but now the loading\n  has been moved to the more suitable curl_global_init() call.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1218486576
  },
  {
    "id": "019bde82ce8fd9d0a335edb30441088a96906d1b",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Constantine Sapuntzakis filed bug report #2042440\n  (http://curl.haxx.se/bug/view.cgi?id=2042440) with a patch. He identified a\n  problem when using NTLM over a proxy but the end-point does Basic, and then\n  libcurl would do wrong when the host sent \"Connection: close\" as the proxy's\n  NTLM state was erroneously cleared.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1218482761
  },
  {
    "id": "e54209d643deeeee47a23d9247947b98ba6f0639",
    "files": [
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Fixed an uninitialized variable in multi_runsingle() that could cause a\nrequest to prematurely end.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1218160328
  },
  {
    "id": "3a499099af52ddc69a3647767521c99c9e9c42e4",
    "files": [
      "lib/http.h",
      "tests/data/test1055",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/http.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "lib/transfer.c",
      "tests/data/test1052",
      "tests/data/test1051"
    ],
    "message": "- Test cases 1051, 1052 and 1055 were added by Daniel Fandrich on July 30 and\n  proved how PUT and POST with a redirect could lead to a \"hang\" due to the\n  data stream not being rewound properly when it had to in order to get sent\n  properly (again) to the subsequent URL. This is now fixed and these test\n  cases are no longer disabled.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1217887222
  },
  {
    "id": "931fc45f05e7370fd815c34884863f2b56920b5f",
    "files": [
      "ares/CHANGES",
      "ares/ares_init.c",
      "ares/RELEASE-NOTES"
    ],
    "message": "- Fix by Tofu Linden:\n\n  The symptom:\n  * Users (usually, but not always) on 2-Wire routers and the Comcast service\n  and a wired connection to their router would find that the second and\n  subsequent DNS lookups from fresh processes using c-ares to resolve the same\n  address would cause the process to never see a reply (it keeps polling for\n  around 1m15s before giving up).\n\n  The repro:\n  * On such a machine (and yeah, it took us a lot of QA to find the systems\n  that reproduce such a specific problem!), do 'ahost www.secondlife.com',\n  then do it again.  The first process's lookup will work, subsequent lookups\n  will time-out and fail.\n\n  The cause:\n  * init_id_key() was calling randomize_key() *before* it initialized\n  key->state, meaning that the randomness generated by randomize_key() is\n  immediately overwritten with deterministic values. (/dev/urandom was also\n  being read incorrectly in the c-ares version we were using, but this was\n  fixed in a later version.)\n  * This makes the stream of generated query-IDs from any new c-ares process\n  be an identical and predictable sequence of IDs.\n  * This makes the 2-Wire's default built-in DNS server detect these queries\n  as probable-duplicates and (erroneously) not respond at all.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1217881392
  },
  {
    "id": "8d012181b01aae80b46c90755a55126bc9731f7d",
    "files": [
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Test case 1041 (added by Daniel Fandrich April 14th) proved a bug where PUT\n  with -C - sent garbage in the Content-Range: header. I fixed this problem by\n  making sure libcurl always sets the size of the _entire_ upload if an app\n  attemps to do resumed uploads since libcurl simply cannot know the size of\n  what is currently at the server end. Test 1041 is no longer disabled.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1217802058
  },
  {
    "id": "b4a5ce89c24a8015c1cb3226fd7a53a7af2048bc",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Fixed a problem with any FTP URL or any URLs containing an IPv6 address\nbeing mangled when passed to proxies when CURLOPT_PORT is also set\n(reported by Pramod Sharma).",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1217544389
  },
  {
    "id": "660516914e35631714c73a2002ccfa4d854a0290",
    "files": [
      "lib/url.c",
      "docs/MANUAL",
      "CHANGES"
    ],
    "message": "Fixed parsing of an IPv6 proxy address to support a scope identifier,\nas well as IPv4 addresses in IPv6 format. Also, better handle the case\nof a malformatted IPv6 address (avoid empty and NULL strings).",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1217534640
  },
  {
    "id": "fe1d024351a0c061882c2b8df1eba7f37a925830",
    "files": [
      "lib/url.c"
    ],
    "message": "Fixed a couple of problems in the IPv6 scope code. First, a host name in\nan URL in a Location: header didn't have the scope ID removed, so an\ninvalid host name was used.  Second, when the scope ID was removed, it\nalso removed any port number that may have existed in the URL.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1217470681
  },
  {
    "id": "d69a6309891e7aaf81f680d7e9e8dacfee7c60e3",
    "files": [
      "src/main.c",
      "CHANGES"
    ],
    "message": "Fixed a couple of buffer overflows in the MS-DOS port of the curl tool.\nFactored out unslashquote. Added some 'const's in function parameters.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1217466726
  },
  {
    "id": "ae654266df25c7ddd2ca6bd8d3d32b9942b0b2dd",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- PHP's bug report #43158 (http://bugs.php.net/bug.php?id=43158) identifies a\n  true bug in libcurl built with OpenSSL. It made curl_easy_getinfo() more or\n  less always return 0 for CURLINFO_SSL_VERIFYRESULT because the function that\n  would set it to something non-zero would return before the assign in almost\n  all error cases. The internal variable is now set to non-zero from the start\n  of the function only to get cleared later on if things work out fine.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1217453099
  },
  {
    "id": "bc0ebfcdeb5a063f1753a82a6068871455adac76",
    "files": [
      "lib/connect.c"
    ],
    "message": "Fixed display of the interface bind address in the trace output when it's\nan IPv6 address.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1217270134
  },
  {
    "id": "a96784b98ebc60720514a788b87f66cd46abee62",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- David Bau filed bug report #2026240 \"CURL_READFUNC_PAUSE leads to buffer\n  overrun\" (http://curl.haxx.se/bug/view.cgi?id=2026240) identifying two\n  problems, and providing the fix for them:\n\n  - CURL_READFUNC_PAUSE did in fact not pause the _sending_ of data that it is\n    designed for but paused _receiving_ of data!\n\n  - libcurl didn't internally set the read counter to zero when this return\n    code was detected, which would potentially lead to junk getting sent to\n    the server.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1217106947
  },
  {
    "id": "336992cc54583b4ca949401d93ca3194e226d21e",
    "files": [
      "tests/libtest/lib553.c",
      "CHANGES",
      "tests/libtest/lib552.c"
    ],
    "message": "Fixed test 553 to pass the torture test.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1215800586
  },
  {
    "id": "6f3ef94836155e8ddf261b8f0dbffe3cf05757ff",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Fixed another OOM problem, this time with test 64.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1215713722
  },
  {
    "id": "d4b253ba3ec87e1d703910bdb278d142e6e6abf8",
    "files": [
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Fixed an OOM handling problem that cause test 11 to fail the torture test.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1215628415
  },
  {
    "id": "60f0b4fffe3de8eb1a1fc3015c2f6643fdccb57a",
    "files": [
      "lib/formdata.c",
      "tests/libtest/lib554.c",
      "CHANGES",
      "docs/libcurl/curl_formadd.3"
    ],
    "message": "Fixed test 554 to pass the torture test.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1215551778
  },
  {
    "id": "ddfa4b889681131bf19c8a911e9b376e14380551",
    "files": [
      "lib/qssl.h",
      "packages/OS400/curl.inc.in",
      "packages/OS400/ccsidcurl.c"
    ],
    "message": "New options added to OS400 wrapper and ILERPG definitions.\nWrong defines (typos) for QSSL layer fixed.",
    "committer": {
      "email": "Patrick.Monnerat@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1215427186
  },
  {
    "id": "67f139e0166083c808f2de3a231ba5a9206ea1a5",
    "files": [
      "ares/nameser.h",
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "- As was pointed out to me by Andreas Schuldei, the MAXHOSTNAMELEN define is\n  not posix or anything and thus c-ares failed to build on hurd (and possibly\n  elsewhere). The define was also somewhat artificially used in the windows\n  port. Now, I instead rewrote the use of gethostbyname to enlarge the host\n  name buffer in case of need and totally avoid the use of the MAXHOSTNAMELEN\n  define. I thus also removed the defien from the namser.h file where it was\n  once added for the windows build.\n\n  I also fixed init_by_defaults() function to not leak memory in case if\n  error.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1214830105
  },
  {
    "id": "8c377ad965e8317f622007cc093203d3086b614f",
    "files": [
      "src/main.c",
      "CHANGES"
    ],
    "message": "Honour --stderr with the -v option.\nFixed a file handle leak in the command line client if more than one\n--stderr option was given.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1214444633
  },
  {
    "id": "d92945bb8af8fd7ee2e56afc0ecf942ba9169c24",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test1032",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Eduard Bloch filed the debian bug report #487567\n  (http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=487567) pointing out that\n  libcurl used Content-Range: instead of Range when doing a range request with\n  --head (CURLOPT_NOBODY). This is now fixed and test case 1032 was added to\n  verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1214167096
  },
  {
    "id": "d09b6ecaa5cd3e7639b4354d048459eaa6c4c2b3",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Christopher Palow fixed a curl_multi_socket() issue which previous caused\n  libcurl to not tell the app properly when a socket was closed (when the name\n  resolve done by c-ares is done) and then immediately re-created and put to\n  use again (for the actual connection). Since the closure will make the\n  \"watch status\" get lost in several event-based systems libcurl will need to\n  tell the app about this close/re-create case.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1213911171
  },
  {
    "id": "fb2e71b9bd352bca7e3a5533c69bd236132a5d7a",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Dengminwen found a bug in the connection re-use function when using the\n  multi interface with pipelining enabled as it would wrongly check for,\n  detect and close \"dead connections\" even though that connection was already\n  in use!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1213864282
  },
  {
    "id": "65ee4e45559be30771f383884d135a927b49849d",
    "files": [
      "src/main.c",
      "CHANGES"
    ],
    "message": "Fixed a memory leak in the command-line tool that caused a valgrind error.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1213835402
  },
  {
    "id": "e547bfa933b251263e73ac845c466196e0dec271",
    "files": [
      "RELEASE-NOTES",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "- Rob Crittenden brought a fix for the NSS layer that makes libcurl no longer\n  always fire up a new connection rather than using the existing one when the\n  multi interface is used. Original bug report:\n  https://bugzilla.redhat.com/show_bug.cgi?id=450140",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1213826515
  },
  {
    "id": "5c56bdf2291c5d80ea32d808978afeced2ee824f",
    "files": [
      "lib/nss.c"
    ],
    "message": "fixed bad infof() usage!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1213308035
  },
  {
    "id": "6f0a2608b45f83064759b3585a282de5be584966",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/telnet.c"
    ],
    "message": "Fixed a problem where telnet data would be lost if an EWOULDBLOCK\ncondition were encountered.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1212516191
  },
  {
    "id": "e5f0c38fa9a9bd2aacbf9532039c602f813e2ced",
    "files": [
      "ares/CHANGES",
      "ares/RELEASE-NOTES",
      "ares/adig.c"
    ],
    "message": "Brad House fixed a missing header file inclusion in adig sample program",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1212161202
  },
  {
    "id": "b49dcfb52b5910c63b8f8c3e02eb32904d35fb11",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "CHANGES"
    ],
    "message": "- Jeff Weber reported memory leaks with aborted SCP and SFTP transfers and\n  provided excellent repeat recipes. I fixed the cases I managed to reproduce\n  but Jeff still got some (SCP) problems even after these fixes:\n  http://curl.haxx.se/mail/lib-2008-05/0342.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1212006688
  },
  {
    "id": "f7815fa93ce4bb69fb4b1a3e2d79473b94a647d1",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test1031",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- Bug report #1973352 (http://curl.haxx.se/bug/view.cgi?id=1973352) identified\n  how the HTTP redirect following code didn't properly follow to a new URL if\n  the new url was but a query string such as \"Location: ?moo=foo\". Test case\n  1031 was added to verify this fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1211834381
  },
  {
    "id": "e664cd5826d43930fcc5b5dbaedbec94af33184b",
    "files": [
      "docs/examples/curlgtk.c",
      "docs/examples/debug.c",
      "docs/examples/simplepost.c",
      "docs/examples/https.c",
      "docs/examples/htmltitle.cc",
      "docs/examples/multi-debugcallback.c",
      "docs/examples/fopen.c",
      "docs/examples/ghiper.c",
      "docs/examples/sepheaders.c",
      "docs/examples/anyauthput.c",
      "docs/examples/htmltidy.c",
      "docs/examples/post-callback.c",
      "docs/examples/10-at-a-time.c",
      "docs/examples/hiperfifo.c",
      "docs/examples/simplessl.c",
      "docs/examples/httpput.c",
      "docs/examples/fileupload.c",
      "docs/examples/threaded-ssl.c",
      "docs/examples/ftpuploadresume.c",
      "docs/examples/ftpget.c",
      "docs/examples/multi-post.c",
      "docs/examples/persistant.c",
      "docs/examples/curlx.c",
      "docs/examples/synctime.c",
      "docs/examples/cookie_interface.c",
      "docs/examples/multi-app.c",
      "docs/examples/cacertinmem.c",
      "docs/examples/ftpupload.c"
    ],
    "message": "Fixed a surprising number of example programs that were passing int arguments\nto curl_easy_setopt instead of long.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1211491207
  },
  {
    "id": "4aa176c1275108c3d75cea4cac6d2aa96c1623b4",
    "files": [
      "lib/krb5.c",
      "lib/security.c"
    ],
    "message": "Fixed some include file problems on Windows reported by David Rosenstrauch",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1211485450
  },
  {
    "id": "e481d679b264fba519f1e12bc7f131057b8501e9",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Liam Healy filed the debian bug report #480044\n  (http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=480044) identifying a\n  segfault when using krb5 ftp, but the krb4 code had the same problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1210194141
  },
  {
    "id": "fc9e0d2249c126ccc8688c19bdf64c782778d6ab",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test1030",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- Ben Van Hof filed bug report #1945240: \"libcurl sometimes sends body twice\n  when using CURL_AUTH_ANY\" (http://curl.haxx.se/bug/view.cgi?id=1945240).\n  The problem was that when libcurl rewound a stream meant for upload when it\n  would prepare for a second request, it could accidentally continue the\n  sending of the rewound data on the first request instead of on the second.\n  Ben also provided test case 1030 that verifies this fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1209851112
  },
  {
    "id": "7a6cff4b3a28d828d344b80c74ab2e28ee2c8cdf",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Norbert Frese filed bug report #1951588: \"Problem with curlftpfs and\n  libcurl\" (http://curl.haxx.se/bug/view.cgi?id=1951588) which seems to be an\n  identical report to what Denis Golovan reported in\n  http://curl.haxx.se/mail/lib-2008-02/0108.html The FTP code didn't reset the\n  user/password pointers properly even though there might've been a new\n  struct/cconnection getting used.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1209418157
  },
  {
    "id": "5825cf9457f2e6f327bd1f6bebbc8e925df13c16",
    "files": [
      "src/main.c"
    ],
    "message": "Fixed typo in log message",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1208819784
  },
  {
    "id": "e0c2a39ad4624f5c6ddae4ac535cdaa55dcb4ce1",
    "files": [
      "lib/http_negotiate.c",
      "CHANGES"
    ],
    "message": "- Andre Guibert de Bruet fixed a second case of not checking the malloc()\n  return code in the Negotiate code.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1208186565
  },
  {
    "id": "84eb9fee765d8614b5f4d56e1db3ea02322301fe",
    "files": [
      "RELEASE-NOTES",
      "lib/http_negotiate.c",
      "CHANGES"
    ],
    "message": "- Andre Guibert de Bruet found and fixed a case where malloc() was called but\n  was not checked for a NULL return, in the Negotiate code.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1208001051
  },
  {
    "id": "ebaf06a74132dc52fa37bb1b05799998c15827c4",
    "files": [
      "RELEASE-NOTES",
      "lib/easy.c",
      "CHANGES"
    ],
    "message": "- Alexey Simak fixed curl_easy_reset() to reset the max redirect limit properly",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1207430024
  },
  {
    "id": "7607d5145bbacd76d45bca405edc12f4b613418c",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Based on the Debian bug report #474224 that complained about the FTP error\n  message when libcurl doesn't get a 220 back immediately on connect, I now\n  changed it to be more specific on what the problem is. Also worth noticing:\n  while the bug report contains an example where the response is:\n\n    421 There are too many connected users, please try again later\n\n  we cannot assume that the error message will always be this readable nor\n  that it fits within a particular boundary etc.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1207429358
  },
  {
    "id": "95bd901efe8c41bbfe7fa80c1c440c84dfe60fe1",
    "files": [
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "tests/data/DISABLED",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- Fixed the problem with doing a zero byte SCP transfer, verified with test\n  case 617 (which was added by Daniel Fandrich 5 Mar 2008).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1206223221
  },
  {
    "id": "86cbb23282bee426439fc969d09a462acac0abe9",
    "files": [
      "lib/Makefile.am",
      "CHANGES",
      "configure.ac",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/easy.c",
      "acinclude.m4"
    ],
    "message": "- Added --with-ca-path=DIRECTORY configure option to use an openSSL CApath by\n  default instead of a ca bundle. The configure script will also look for a\n  ca path if no ca bundle is found and no option given.\n\n- Fixed detection of previously installed curl-ca-bundle.crt",
    "committer": {
      "email": "mmarek@suse.cz",
      "name": "Michal Marek"
    },
    "date": 1206000563
  },
  {
    "id": "e9a460411fcbf28c9e8b4e6afba4a7d1efa8bde2",
    "files": [
      "tests/data/test626",
      "RELEASE-NOTES",
      "lib/ssh.c",
      "tests/data/DISABLED",
      "CHANGES"
    ],
    "message": "Fixed an infinite loop when given an invalid SFTP quote command.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1205881144
  },
  {
    "id": "b9d66dca513b11d344887e9bb546cf1191936296",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/hostip.c"
    ],
    "message": "- Dmitry Popov filed bug report #1911069\n  (http://curl.haxx.se/bug/view.cgi?id=1911069) that identified a race\n  condition in the name resolver code when the DNS cache is shared between\n  multiple easy handles, each running in simultaneous threads that could cause\n  crashes.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1205276123
  },
  {
    "id": "82e095a2759366485c3cb33739992c85ca8a05cc",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "CHANGES"
    ],
    "message": "- Brian Ulm reported a crash when doing a second SFTP transfer on a re-used\n  easy handle if curl_easy_reset() was used between them. I fixed it and Brian\n  verified that it cured his problem.\n\n- Brian Ulm reported that if you first tried to download a non-existing SFTP\n  file and then fetched an existing one and re-used the handle, libcurl would\n  still report the second one as non-existing as well! I fixed it abd Brian\n  verified that it cured his problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1205062668
  },
  {
    "id": "590f0358d86c402f94b329f2ce0d612cbb749c95",
    "files": [
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "lib/http_negotiate.c",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Anatoli Tubman found and fixed a crash with Negotiate authentication used on\n  a re-used connection where both requests used Negotiate.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1204410723
  },
  {
    "id": "6982ed4db767d23141c2399be47595d47a45f4fe",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Sam Listopad provided a patch in feature-request #1900014\n  http://curl.haxx.se/bug/feature.cgi?id=1900014 that makes libcurl (built to\n  use OpenSSL) support a full chain of certificates in a given PKCS12\n  certificate.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1203769665
  },
  {
    "id": "e9bb7b771287026596d03b75c3767a64b0cf3952",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "- Zmey Petroff found a crash when libcurl accessed a NULL pointer, which\n  happened if you set the connection cache size to 1 and for example failed to\n  login to an FTP site. Bug report #1896698\n  (http://curl.haxx.se/bug/view.cgi?id=1896698)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1203616336
  },
  {
    "id": "5e9c564883512130d356a81f6dcb3057572f1690",
    "files": [
      "docs/examples/ftpupload.c"
    ],
    "message": "fixed missing header; changed bail out from exit() to return().\nMentioned on the list by Michal Marek.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1203606134
  },
  {
    "id": "9019fc5671f10dce9d29992d54a2b9ea5ac16b8b",
    "files": [
      "lib/gtls.c"
    ],
    "message": "oops, fixed to build",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1203501688
  },
  {
    "id": "53a549000c3634f6b0a5ed262d5834c3145885d7",
    "files": [
      "lib/url.c",
      "lib/sslgen.c",
      "lib/sendf.c",
      "lib/nss.c",
      "CHANGES",
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "lib/urldata.h",
      "lib/gtls.c",
      "lib/qssl.c"
    ],
    "message": "- Based on initial work done by Gautam Kachroo to address a bug, we now keep\n  better control at the exact state of the connection's SSL status so that we\n  know exactly when it has completed the SSL negotiation or not so that there\n  won't be accidental re-uses of connections that are wrongly believed to be\n  in SSL-completed-negotiate state.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1203501386
  },
  {
    "id": "0d722204c315513cc3ebadfe6c62cd6869cde8a7",
    "files": [
      "lib/http.c"
    ],
    "message": "https_getsock() should be static all over (and did some fixed indenting)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1203364411
  },
  {
    "id": "d25aab2704f1dcc92ae913e4ad38dd1da2b205a2",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Pooyan McSporran found and fixed a flaw where you first would do a normal\n  http request and then you'd reuse the handle and replace the Accept: header,\n  as then libcurl would send two Accept: headers!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1203065766
  },
  {
    "id": "fcc320ee404606b7f9d4d140e7770a0f8dd2754d",
    "files": [
      "lib/tftp.c",
      "lib/socks.c",
      "CHANGES",
      "lib/qssl.c"
    ],
    "message": "Yang Tse pointed out a few remaining quirks from my timeout refactoring from\nFeb 7 that didn't abort properly on timeouts. These are actually old\nproblems but now they should be fixed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1202767411
  },
  {
    "id": "44fba11b349ff1197a68b29f1d35fd13e5e61ce7",
    "files": [
      "lib/tftp.c"
    ],
    "message": "Fixed unused variable warning.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1202754456
  },
  {
    "id": "736af32b498687be9d1cc391e07631f8515e4376",
    "files": [
      "RELEASE-NOTES",
      "lib/hostthre.c",
      "CHANGES"
    ],
    "message": "Bug report #1888932 (http://curl.haxx.se/bug/view.cgi?id=1888932) points\nout and provides test program that demonstrates that libcurl might not set\nerror description message for error CURLE_COULDNT_RESOLVE_HOST for Windows\nthreaded name resolver builds. Fixed now.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1202617209
  },
  {
    "id": "4c841a1f0cf53d363d2ba3351c558ce8b06e9c25",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "- Mike Hommey filed and fixed bug report #1889856\n  (http://curl.haxx.se/bug/view.cgi?id=1889856): When using the gnutls ssl\n  layer, cleaning-up and reinitializing curl ends up with https requests\n  failing with \"ASN1 parser: Element was not found\" errors. Obviously a\n  regression added in 7.16.3.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1202508120
  },
  {
    "id": "1bfbd250272d019949c89e48bfbeb7cd00d20029",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "docs/KNOWN_BUGS",
      "CHANGES"
    ],
    "message": "- Dmitry Kurochkin fixed Curl_done() for pipelining, as it could previously\n  crash!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1201611505
  },
  {
    "id": "87fdfe770d054d06cd4548cd300866915caad4af",
    "files": [
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Dmitry Kurochkin: In \"real world\" testing I found more bugs in\npipelining. Broken connection is not restored and we get into infinite\nloop. It happens because of wrong is_in_pipeline values.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1201474389
  },
  {
    "id": "c6df78886654c2b5672612f114fadb9402b7027f",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "- Kevin Reed filed bug report #1879375\n  (http://curl.haxx.se/bug/view.cgi?id=1879375) which describes how libcurl\n  got lost in this scenario: proxy tunnel (or HTTPS over proxy), ask to do any\n  proxy authentication and the proxy replies with an auth (like NTLM) and then\n  closes the connection after that initial informational response.\n\n  libcurl would not properly re-initialize the connection to the proxy and\n  continue the auth negotiation like supposed. It does now however, as it will\n  now detect if one or more authentication methods were available and asked\n  for, and will thus retry the connection and continue from there.\n\n- I made the progress callback get called properly during proxy CONNECT.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1201304025
  },
  {
    "id": "c914e6ea5dad4dc6281b189a9b1f20bc77c223c8",
    "files": [
      "RELEASE-NOTES",
      "lib/cookie.h",
      "lib/http.c",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "\"Igor\" pointed out that CURLOPT_COOKIELIST set to \"ALL\" leaked memory, and so\ndid \"SESS\". Fixed now.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1201126932
  },
  {
    "id": "daadcfd1de6d6369e0f2c0c1bca528995196ffaf",
    "files": [
      "tests/libtest/lib530.c",
      "tests/data/test530"
    ],
    "message": "Dmitry Kurochkin fixed test case 530 (pipelining)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1200737685
  },
  {
    "id": "62df0ff025e247a5d1d2850e22a8cdfb9edcbfd7",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Lau Hang Kin found and fixed a problem with the multi interface when doing\nCONNECT over a proxy. curl_multi_fdset() didn't report back the socket\nproperly during that state, due to a missing case in the switch in the\nmulti_getsock() function.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1200693070
  },
  {
    "id": "c522f349fe5c18f51cf658c35cee2ceb8a38fd46",
    "files": [
      "tests/data/test553",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.am",
      "tests/libtest/lib553.c"
    ],
    "message": "Added test 553. This test case and code is based on the bug recipe Joe Malicki\nprovided for bug report #1871269, fixed on Jan 14 2008 before the 7.18.0\nrelease.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1200524094
  },
  {
    "id": "ddaa78f08b394f1c7cd1488ce24aee1412679c29",
    "files": [
      "lib/multi.c"
    ],
    "message": "Dmitry Kurochkin's additional pipelining bugfix",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1200519232
  },
  {
    "id": "ed6466d17603aa39bb4b1685544747f4c64ec7b0",
    "files": [
      "lib/tftp.c",
      "lib/nss.c",
      "CHANGES",
      "lib/transfer.c",
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "lib/ssh.c",
      "lib/ftp.c",
      "lib/krb4.c",
      "lib/qssl.c"
    ],
    "message": "Calls to Curl_failf() are not supposed to provide a trailing newline as the\nfunction itself adds that. Fixed on 50 or something strings!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1200439142
  },
  {
    "id": "53108806af58264196b188f2f9ac8d128b8dc239",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Joe Malicki filed bug report #1871269\n(http://curl.haxx.se/bug/view.cgi?id=1871269) and we could fix his hang-\nproblem that occurred when doing a large HTTP POST request with the\nresponse-body read from a callback.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1200348134
  },
  {
    "id": "0ce484eed901f73cae89e25d9939a249729f15d3",
    "files": [
      "RELEASE-NOTES",
      "lib/http_digest.c",
      "CHANGES"
    ],
    "message": "Nikitinskit Dmitriy filed bug report #1868255\n(http://curl.haxx.se/bug/view.cgi?id=1868255) with a patch. It identifies\nand fixes a problem with parsing WWW-Authenticate: headers with additional\nspaces in the line that the parser wasn't written to deal with.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1199956627
  },
  {
    "id": "423309541a1952ab0b340361d0a752d289d9653f",
    "files": [
      "RELEASE-NOTES",
      "lib/parsedate.c",
      "CHANGES"
    ],
    "message": "Jeff Johnson filed bug report #1863171\n(http://curl.haxx.se/bug/view.cgi?id=1863171) where he pointed out that\nlibcurl's date parser didn't accept a +1300 time zone which actually is used\nfairly often (like New Zealand's Dailight Savings Time), so I modified the\nparser to now accept up to and including -1400 to +1400.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1199616657
  },
  {
    "id": "d9023c16abd0f6b89eb94bbad44d9723947f3c34",
    "files": [
      "CHANGES",
      "lib/http_chunks.c"
    ],
    "message": "- I fixed two cases of missing return code checks when handling chunked\n  decoding where a write error (or abort return from a callback) didn't stop\n  libcurl's processing.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1199313034
  },
  {
    "id": "f277124a0f78327f6a973518c073d6a9a458326b",
    "files": [
      "tests/libtest/Makefile.am",
      "tests/data/Makefile.am",
      "tests/data/test552",
      "CHANGES",
      "tests/libtest/lib552.c"
    ],
    "message": "In an attempt to repeat the problem in bug report #1850730\n(http://curl.haxx.se/bug/view.cgi?id=1850730) I wrote up test case 552. The\ntest is doing a 70K POST with a read callback and an ioctl callback over a\nproxy requiring Digest auth. The test case code is more or less identical to\nthe test recipe code provided by Spacen Jasset (who submitted the bug report).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1198705732
  },
  {
    "id": "fc1d1ea93472985c12a4e3ae892a416de00d032e",
    "files": [
      "RELEASE-NOTES",
      "lib/sslgen.c",
      "CHANGES"
    ],
    "message": "Gary Maxwell filed bug report #1856628\n(http://curl.haxx.se/bug/view.cgi?id=1856628) and provided a fix for the\n(small) memory leak in the SSL session ID caching code. It happened when a\nprevious entry in the cache was re-used.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1198539948
  },
  {
    "id": "674845f23997c61f8e88a7d425517c4d8f496265",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "(http://curl.haxx.se/mail/archive-2007-12/0039.html) reported and fixed\na file truncation problem on Windows build targets triggered when retrying\na download with curl.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1198002804
  },
  {
    "id": "7b1a22147e97e06316ca8707d6177fa9187d7550",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "David Wright filed bug report #1849764\n(http://curl.haxx.se/bug/view.cgi?id=1849764) with an included fix. He\nidentified a problem for re-used connections that previously had sent\nExpect: 100-continue and in some situations the subsequent POST (that didn't\nuse Expect:) still had the internal flag set for its use. David's fix (that\nmakes the setting of the flag in every single request unconditionally) is\nfine and is now used!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1197540006
  },
  {
    "id": "b0b40d9a00bb3218408b190a387692e7ddfa028c",
    "files": [
      "RELEASE-NOTES",
      "lib/sendf.c",
      "CHANGES"
    ],
    "message": "Andrew Moise filed bug report #1847501\n(http://curl.haxx.se/bug/view.cgi?id=1847501) and pointed out a memcpy()\nthat should be memmove() in the convert_lineends() function.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1197239513
  },
  {
    "id": "7d3ea12b625fd07d9d41a68e7cc2cd5322247584",
    "files": [
      "tests/data/test547",
      "CHANGES",
      "lib/http.c",
      "RELEASE-NOTES",
      "tests/data/test548",
      "tests/libtest/lib547.c"
    ],
    "message": "Spacen Jasset reported a problem with doing POST (with data read with a\ncallback) over a proxy when NTLM is used as auth with the proxy. The bug\nalso concerned Digest and was limited to using callback only. Spacen worked\nwith us to provide a useful patch. I added the test case 547 and 548 to\nverify two variations of POST over proxy with NTLM.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1196889614
  },
  {
    "id": "4e4f33a2970b69d7329ae23f87867febd1fecadf",
    "files": [
      "tests/data/test548",
      "tests/libtest/Makefile.am",
      "tests/libtest/lib547.c"
    ],
    "message": "added test548 which uses the lib547 source file, preparing for test547 which\nis supposed to repeat the bug report \"NTLM proxy authentication with\nCURLOPT_READDATA seems broken.\" posted on the curl-library mailing list on dec\n3 2007.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1196852936
  },
  {
    "id": "5c447f2499ed04bf29b6f1a82407aa53c975a58a",
    "files": [
      "lib/sslgen.c",
      "CHANGES"
    ],
    "message": "Bug report #1842029 (http://curl.haxx.se/bug/view.cgi?id=1842029) identified\na problem with SSL session caching that prevent it from working, and the\nassociated fix!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1196682489
  },
  {
    "id": "45a2240ead02333e6ddf988af33e0093dbbfcd10",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "A bug report on the curl-library list showed a HTTP Digest session going on\nwith a 700+ letter nonce. Previously libcurl only support 127 letter ones\nand now I bumped it to 1023.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1196374488
  },
  {
    "id": "f75ba55b517a0c84a1ea91e805a3998b0631b88f",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed the resumed FTP upload loop to not require that the read callback\nreturns a full buffer on each invoke.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1196374473
  },
  {
    "id": "e963714de689c7e86bf8be3aa165317f56a21ea0",
    "files": [
      "src/main.c"
    ],
    "message": "#1 fixed --data-urlencode when no = or @ was used\n#2 extended the user-agent buffer since I hit the 128 byte boundary!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1196075012
  },
  {
    "id": "b6575ce0b0fa74626c136a96b411f7baaca9c55b",
    "files": [
      "lib/urldata.h",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "lib/http_negotiate.c",
      "CHANGES"
    ],
    "message": "While inspecting the Negotiate code, I noticed how the proxy auth was using\nthe same state struct as the host auth, so both could never be used at the\nsame time! I fixed it (without being able to check) to use two separate\nstructs to allow authentication using Negotiate on host and proxy\nsimultanouesly.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1195600628
  },
  {
    "id": "c80b9c3778597058f60b40b439bcf09a400d0012",
    "files": [
      "RELEASE-NOTES",
      "lib/sslgen.c",
      "CHANGES"
    ],
    "message": "Rob Crittenden fixed SSL connections with NSS done with the multi-interface",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1195379105
  },
  {
    "id": "c508d702586d50198213a457023aa8a95c73f279",
    "files": [
      "lib/ssh.c",
      "lib/urldata.h",
      "CHANGES"
    ],
    "message": "Fixed a remaining problem with doing SFTP directory listings on a re-used\npersistent connection. Mentioned by Immanuel Gregoire on the mailing list.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1194908684
  },
  {
    "id": "c5b16d44680cdb81aab2c3af0f5b3ec220aafc39",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Bug report #1830637 (http://curl.haxx.se/bug/view.cgi?id=1830637), which was\nforwarded from the Gentoo bug tracker by Daniel Black and was originally\nsubmitted by Robin Johnson, pointed out that libcurl would do bad memory\nreferences when it failed and bailed out before the handler thing was\nsetup. My fix is not done like the provided patch does it, but instead I\nmake sure that there's never any chance for a NULL pointer in that struct\nmember.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1194903523
  },
  {
    "id": "ba6f20a2442ab1ebfe947cff19a552f92114a29a",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "lib/urldata.h",
      "CHANGES"
    ],
    "message": "Bug report #1823487 (http://curl.haxx.se/bug/view.cgi?id=1823487) pointed\nout that SFTP requests didn't use persistent connections. Neither did SCP\nones.  I gave the SSH code a good beating and now both SCP and SFTP should\nuse persistent connections fine. I also did a bunch for indent changes as\nwell as a bug fix for the \"keyboard interactive\" auth.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1194517369
  },
  {
    "id": "59b05ac383f45ac3fe2e9fba899b440def9da2bd",
    "files": [
      "lib/file.h",
      "lib/url.c",
      "CHANGES",
      "lib/file.c"
    ],
    "message": "Fixed an OOM problem with file: URLs\nMoved Curl_file_connect into the protocol handler struct.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1193785240
  },
  {
    "id": "d3ee83747c2423143acc912cb2ff3d8f8c428b3e",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed a valgrind uninitialized variable error.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1193426801
  },
  {
    "id": "91e27ce755a2dbf8084517fb4ec441a260ffee84",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "tests/data/DISABLED",
      "CHANGES"
    ],
    "message": "Fixed a TFTP memory leak. Enabled test 2003 to verify this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1193298458
  },
  {
    "id": "65ed69662513b14143e8821c72ea41d7c69113d9",
    "files": [
      "tests/data/test2003",
      "tests/data/DISABLED",
      "CHANGES",
      "tests/data/Makefile.am",
      "tests/server/tftpd.c",
      "tests/data/test2002"
    ],
    "message": "Fixed the test TFTP server to support the >10000 test number notation\nAdded test cases 2002 and 2003 (the latter disabled for now)",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1193266103
  },
  {
    "id": "949ff9715a55886ab13fd6cb59d4b4043d457793",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES"
    ],
    "message": "Bug report #1812190 (http://curl.haxx.se/bug/view.cgi?id=1812190) points out\nthat libcurl tried to re-use connections a bit too much when using non-SSL\nprotocols tunneled over a HTTP proxy.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1193173251
  },
  {
    "id": "5b358603bd8897dcd38795c1ae971a8f917e97df",
    "files": [
      "lib/url.h",
      "lib/urldata.h",
      "CHANGES",
      "lib/http.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/ssh.c",
      "lib/ftp.c",
      "lib/file.c"
    ],
    "message": "Michal Marek forwarded the bug report\nhttps://bugzilla.novell.com/show_bug.cgi?id=332917 about a HTTP redirect to\nFTP that caused memory havoc. His work together with my efforts created two\nfixes:\n\n#1 - FTP::file was moved to struct ftp_conn, because is has to be dealt with\n     at connection cleanup, at which time the struct HandleData could be\n     used by another connection.\n     Also, the unused char *urlpath member is removed from struct FTP.\n\n#2 - provide a Curl_reset_reqproto() function that frees\n     data->reqdata.proto.* on connection setup if needed (that is if the\n     SessionHandle was used by a different connection).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1193065535
  },
  {
    "id": "1056dc9a26db39bdb31f5f0b49080b13df3cb528",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Bug report #1815530 (http://curl.haxx.se/bug/view.cgi?id=1815530) points out\nthat specifying a proxy with a trailing slash didn't work (unless it also\ncontained a port number).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1193045145
  },
  {
    "id": "92aaff009d0a2e5ade970fb3700ca2d516ff12ec",
    "files": [
      "ares/ares_search.c"
    ],
    "message": "Fix a bug where fallback from AF_INET6 to AF_INET would not work properly together with relative search; if you had a search path of .a.com and .b.com, and foo.a.com would return ARES_ENODATA and foo.b.com would return ARES_ENOTFOUND, the lookup would not properly retry with AF_INET as it forgot the first ARES_ENODATA.",
    "committer": {
      "email": "sesse@google.com",
      "name": "Steinar H. Gunderson"
    },
    "date": 1192570071
  },
  {
    "id": "a005243908803662d4a05427bc1061db42f4d057",
    "files": [
      "lib/config-os400.h",
      "lib/urldata.h",
      "include/curl/curl.h",
      "CHANGES",
      "lib/http.c",
      "lib/url.c",
      "packages/OS400/ccsidcurl.c",
      "lib/transfer.c",
      "docs/libcurl/curl_easy_setopt.3",
      "packages/OS400/README.OS400"
    ],
    "message": "Fix dynamic CURLOPT_POSTFIELDS bug: back to static.\nCURLOPT_COPYPOSTFIELDS option added for dynamic.\nFix some OS400 features.",
    "committer": {
      "email": "Patrick.Monnerat@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1192473121
  },
  {
    "id": "08fd1829e0e01cd9cee3a7da60d315f11aa591c8",
    "files": [
      "TODO-RELEASE",
      "docs/KNOWN_BUGS",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Known bug #47, which confused libcurl if doing NTLM auth over a proxy with\na response that was larger than 16KB is now improved slightly so that now\nthe restriction at 16KB is for the headers only and it should be a rare\nsituation where the response-headers exceed 16KB. Thus, I consider #47 fixed\nand the header limitation is now known as known bug #48.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1191745683
  },
  {
    "id": "67d94514b0d1501832a52fd42db8f5a41151d7f5",
    "files": [
      "lib/tftp.c",
      "tests/data/test1009",
      "lib/urldata.h",
      "tests/data/DISABLED",
      "CHANGES",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/connect.c"
    ],
    "message": "Kim Rinnewitz reported that --local-port didn't work with TFTP transfers.\nThis happened because the tftp code always uncondionally did a bind()\nwithout caring if one already had been done and then it failed. I wrote a\ntest case (1009) to verify this, but it is a bit error-prone since it will\nhave to pick a fixed local port number and since the tests are run on so\nmany different hosts in different situations I add it in disabled state.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1191492101
  },
  {
    "id": "119364741ef2ca0931c0ceaa6f92cb476457863c",
    "files": [
      "lib/urldata.h",
      "docs/KNOWN_BUGS",
      "CHANGES",
      "lib/http.c",
      "tests/data/test1008",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/transfer.c",
      "lib/http_chunks.c"
    ],
    "message": "known bug #46: chunked-encoded CONNECT responses from a http proxy now works.\nAdded test case 1008 to verify. Note that #47 is still there.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1191320496
  },
  {
    "id": "19c8da85d8f5c645219f5da9df7acb10bcbb63d2",
    "files": [
      "ares/ares_gethostbyname.c"
    ],
    "message": "Fixed the problem where next_lookup would use 'status' uninitialized. Now\nit gets passed the initial value as an argument.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1191312750
  },
  {
    "id": "ec08e2f9f24da5974be1ab222c5703fd9fb3722f",
    "files": [
      "tests/libtest/Makefile.am",
      "CHANGES",
      "tests/data/test543",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/libtest/lib543.c",
      "lib/escape.c"
    ],
    "message": "Alex Fishman reported a curl_easy_escape() problem that was made the\nfunction do wrong on all input bytes that are >= 0x80 (decimal 128) due to a\nsigned / unsigned mistake in the code. I fixed it and added test case 543 to\nverify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1191192024
  },
  {
    "id": "f58ba5ab1cb25b873f46a27a2b0422e3301100ba",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "CHANGES"
    ],
    "message": "Immanuel Gregoire fixed a problem with persistent transfers over SFTP - the\nprevious proto struct was kept.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1191101674
  },
  {
    "id": "d0de9663e2df935ac75fc9949cff1e896c2257e9",
    "files": [
      "ares/ares_mkquery.c"
    ],
    "message": "Reject names that are longer than 255 characters, to avoid problems with strict or buggy DNS server implementations. (Patch from the Google tree)",
    "committer": {
      "email": "sesse@google.com",
      "name": "Steinar H. Gunderson"
    },
    "date": 1191074303
  },
  {
    "id": "54ca7d8cb2ae3c27f958a6c8969ce9edf14a54d1",
    "files": [
      "ares/ares_process.c"
    ],
    "message": "Don't skip a server if it's the only one. (Bugfix from the Google tree.)",
    "committer": {
      "email": "sesse@google.com",
      "name": "Steinar H. Gunderson"
    },
    "date": 1190989571
  },
  {
    "id": "775f86cb5a1ef5b46d2b7967878daca23c01f987",
    "files": [
      "docs/KNOWN_BUGS",
      "tests/data/DISABLED",
      "CHANGES",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test1010"
    ],
    "message": "Immanuel Gregoire fixed KNOWN_BUGS #44: --ftp-method nocwd did not handle\nURLs ending with a slash properly (it should list the contents of that\ndirectory). Test case 351 brought back and also test 1010 was added.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1190670455
  },
  {
    "id": "0f4664d27f67c7f0597b08acd59433d6cf1a40c2",
    "files": [
      "ares/ares_process.c",
      "ares/CHANGES"
    ],
    "message": "Steinar H. Gunderson fixed: Correctly clear sockets from the fd_set on in\nseveral functions (write_tcp_data, read_tcp_data, read_udp_packets) so that\nif it fails and the socket is closed the following code doesn't try to use\nthe file descriptor.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1190496190
  },
  {
    "id": "015d5869d7e3daf81548e4d5d55209adfd4285bf",
    "files": [
      "src/main.c",
      "lib/http_negotiate.c",
      "CHANGES",
      "lib/http.c",
      "RELEASE-NOTES",
      "docs/curl.1",
      "lib/http_negotiate.h"
    ],
    "message": "Mark Davies fixed Negotiate authentication over proxy, and also introduced\nthe --proxy-negotiate command line option to allow a user to explicitly\nselect it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1190372731
  },
  {
    "id": "2620d78e9475e5285cfc192e36f79b0167050175",
    "files": [
      "src/urlglob.c"
    ],
    "message": "Fixed typo in error message.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1190248628
  },
  {
    "id": "b41e65a8e3ed8fdafb535328997bedc925f21e37",
    "files": [
      "lib/ldap.c"
    ],
    "message": "fixed ldap support for winldap.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1189886583
  },
  {
    "id": "9e88343a1722f49cc4045a25d6587262f84d1077",
    "files": [
      "CHANGES",
      "tests/libtest/lib541.c",
      "RELEASE-NOTES",
      "tests/libtest/Makefile.am",
      "tests/data/test541",
      "tests/data/Makefile.am"
    ],
    "message": "Daniel S (12 September 2007)\n- Bug report #1792649 (http://curl.haxx.se/bug/view.cgi?id=1792649) pointed\n  out a problem with doing an empty upload over FTP on a re-used connection.\n  I added test case 541 to reproduce it and to verify the fix.\n\n- I noticed while writing test 541 that the FTP code wrongly did a CWD on the\n  second transfer as it didn't store and remember the \"\" path from the\n  previous transfer so it would instead CWD to the entry path as stored. This\n  worked, but did a superfluous command. Thus, test case 541 now also verifies\n  this fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1189549437
  },
  {
    "id": "cc618e761c4f009b11834383204b54bc1d0e1c5d",
    "files": [
      "lib/transfer.c"
    ],
    "message": "- Bug report #1792649 (http://curl.haxx.se/bug/view.cgi?id=1792649) pointed\n  out a problem with doing an empty upload over FTP on a re-used connection.\n  I added test case 541 to reproduce it and to verify the fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1189549272
  },
  {
    "id": "4f17c583153cd42f40e89e25fa33259886fcdd8e",
    "files": [
      "lib/multi.c"
    ],
    "message": "Fixed an invalid returned error code added in my last submission.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1188582841
  },
  {
    "id": "da4a7767583a7805aabedb2adea4f47cfbc724e7",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Made Curl_GetFTPResponse() use lots less code and instead use the proper\nlow-level ftp_readresp() function. Hopefully adressing bug #1779054.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1188482760
  },
  {
    "id": "8cf0814a143d99de813fbd1653b785252b4c58a6",
    "files": [
      "lib/formdata.c",
      "lib/http.h",
      "lib/http_negotiate.h",
      "lib/http_digest.h",
      "lib/http.c",
      "lib/ssluse.c",
      "lib/transfer.h",
      "lib/ftp.c",
      "lib/socks.h",
      "lib/sslgen.h",
      "lib/sslgen.c",
      "lib/http_negotiate.c",
      "lib/http_ntlm.h",
      "lib/transfer.c",
      "lib/http_ntlm.c",
      "lib/http_digest.c",
      "lib/socks.c"
    ],
    "message": "Fixed some minor type mismatches and missing consts mainly found by splint.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1188196288
  },
  {
    "id": "523767660c05cf359091694fcaccb763ebb7b2d7",
    "files": [
      "lib/http.h",
      "lib/multiif.h",
      "lib/hostip.c",
      "lib/http.c",
      "lib/url.c",
      "lib/dict.c",
      "lib/urldata.h",
      "lib/easy.c",
      "lib/escape.c",
      "lib/multi.c"
    ],
    "message": "Fixed some minor mismatched types found by splint.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1188107606
  },
  {
    "id": "7cba40b21831b54c9a36fce40209c49fd7e4aa00",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "CHANGES",
      "tests/data/test1006"
    ],
    "message": "Bug report #1779054 (http://curl.haxx.se/bug/view.cgi?id=1779054) pointed\nout that libcurl didn't deal with large responses from server commands, when\nthe single response was consisting of multiple lines but of a total size of\n16KB or more. Dan Fandrich improved the ftp test script and provided test\ncase 1006 to repeat the problem, and I fixed the code to make sure this new\ntest case runs fine.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1187964042
  },
  {
    "id": "91fd2c3bcdc9f0d336c6d7404279db03ea4eaca9",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/file.c"
    ],
    "message": "Bug report #1779751 (http://curl.haxx.se/bug/view.cgi?id=1779751) pointed\nout that doing first a file:// upload and then an FTP upload crashed libcurl\nor at best caused furious valgrind complaints. Fixed now by making sure we\nfree and clear the file-specific struct properly when done with it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1187822921
  },
  {
    "id": "381e372939d72bb572c545b18bf050fd4fbca5b5",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test1003",
      "CHANGES"
    ],
    "message": "Bug report #1779054 (http://curl.haxx.se/bug/view.cgi?id=1779054) pointed\nout that libcurl didn't deal with very long (>16K) FTP server response lines\nproperly. Starting now, libcurl will chop them off (thus the client app will\nnot get the full line) but survive and deal with them fine otherwise. Test\ncase 1003 was added to verify this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1187792286
  },
  {
    "id": "fa1c916943229dd90af06d922366f72fe54c0ec3",
    "files": [
      "lib/ldap.c"
    ],
    "message": "fixed warning with unused var;\nremoved now obsolete defines since we include now ldap headers which define these.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1187652686
  },
  {
    "id": "1aa82deceadf70f9f2f43be7ee3544511ccc7e8d",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "- Robson Braga Araujo filed bug report #1776232\n  (http://curl.haxx.se/bug/view.cgi?id=1776232) about libcurl calling\n  Curl_client_write(), passing on a const string that the caller may not\n  modify and yet it does (on some platforms).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1187389911
  },
  {
    "id": "3217809294beacc6436775e2e32d54ce732ea7d7",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test1000",
      "CHANGES"
    ],
    "message": "Robson Braga Araujo filed bug report #1776235\n(http://curl.haxx.se/bug/view.cgi?id=1776235) about ftp requests with NOBODY\non a directory would do a \"SIZE (null)\" request. This is now fixed and test\ncase 1000 was added to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1187389363
  },
  {
    "id": "29ac001aa64a2c9058433da39febe9da40cb884a",
    "files": [
      "lib/ldap.c"
    ],
    "message": "fixed warning about uninitialized.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1187277819
  },
  {
    "id": "ca410ec2ca79c880fa71b4abd5a05470a42467ee",
    "files": [
      "lib/version.c"
    ],
    "message": "Fix a potential buffer overflow bug in lib/version.c",
    "committer": {
      "email": "Patrick.Monnerat@datasphere.ch",
      "name": "Patrick Monnerat"
    },
    "date": 1187189356
  },
  {
    "id": "2f8f12e82eb69922f1144f047f77083677f9f767",
    "files": [
      "RELEASE-NOTES",
      "lib/http_ntlm.c",
      "CHANGES"
    ],
    "message": "Andrew Wansink provided an NTLM bugfix: in the case the server sets the flag\nNTLMFLAG_NEGOTIATE_UNICODE, we need to filter it off because libcurl doesn't\nunicode encode the strings it packs into the NTLM authenticate packet.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1187087301
  },
  {
    "id": "1b88990cbb84daa657d2eb62407bf1f9f24e6c69",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Fixed the LDAP_DEPRECATED #define as suggested by Daniel Johnson, and\nindented some of the code to curl-style",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1186957550
  },
  {
    "id": "b238e0b1b4e8f3e5c4e9c0d7d8c565e3776b0999",
    "files": [
      "lib/nwos.c"
    ],
    "message": "fixed warning with gcc 4.x (hopefully); dynamincally imported UseAccurateCaseForPaths() for CLIB port to be stonetime-compatible (NW 3.x).",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1186698829
  },
  {
    "id": "3f62bfb61d776d8f9095c13f4cd004dd32cb3cca",
    "files": [
      "lib/mprintf.c"
    ],
    "message": "fixed a warning which MingW gcc 4.2.1.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1186693505
  },
  {
    "id": "c669e1ae45fce7e0aae73825ba69d4c2db009f57",
    "files": [
      "lib/url.c"
    ],
    "message": "Fixed torture test for test 509",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1186511089
  },
  {
    "id": "1926f4573d43f35f33b524d120e847ea819cc7c7",
    "files": [
      "lib/strtoofft.c",
      "CHANGES",
      "lib/escape.c"
    ],
    "message": "Patrick Monnerat fixed curl_easy_escape() and curlx_strtoll() to work on\nnon-ASCII systems.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1186260479
  },
  {
    "id": "0d3d84e3ffcaa6118cc4f33c5f2d6c9166d60662",
    "files": [
      "lib/url.c"
    ],
    "message": "Refactored CreateConnection() somewhat to reduce its length by splitting\nit into a few new functions.\nFixed a few leaks in out of memory conditions, including for test case 231.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1186181219
  },
  {
    "id": "5ec786b02e0b460320b9bb4d75f5ddb8b1016656",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Scott Cantor filed bug report #1766320\n(http://curl.haxx.se/bug/view.cgi?id=1766320) pointing out that the libcurl\ncode accessed two curl_easy_setopt() options (CURLOPT_DNS_CACHE_TIMEOUT and\nCURLOPT_DNS_USE_GLOBAL_CACHE) as ints even though they're documented to be\npassed in as longs, and that makes a difference on 64 bit architectures.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1186085428
  },
  {
    "id": "006878686cfd3faa9eca92fc8fe60cb8f8073a59",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Greg Morse reported a problem with POSTing using ANYAUTH to a server requiring\nNTLM, and he provided test code and a test server and we worked out a bug\nfix. We failed to count sent body data at times, which then caused internal\nconfusions when libcurl tried to send the rest of the data in order to\nmaintain the same connection alive.\n\n(and then I did some minor reformatting of code in lib/http.c)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1185973084
  },
  {
    "id": "f1fa7b8ba469d9b8681e30f107b44004695b32e9",
    "files": [
      "lib/urldata.h",
      "lib/nss.c",
      "lib/ssluse.c",
      "lib/ftp.c",
      "lib/gtls.c",
      "lib/sslgen.h",
      "lib/ssluse.h",
      "lib/sslgen.c",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/qssl.c"
    ],
    "message": "Bug report #1759542 (http://curl.haxx.se/bug/view.cgi?id=1759542). A bad use\nof a socket after it has been closed, when the FTP-SSL data connection is taken\ndown.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1185713645
  },
  {
    "id": "e3377e637a73edb44600083550f14ef64488cd10",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Ralf S. Engelschall filed bug report #1757328\n(http://curl.haxx.se/bug/view.cgi?id=1757328) and submitted a patch. It turns\nout we broke login to FTP servers that don't require (nor understand) PASS\nafter the USER command",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1184924158
  },
  {
    "id": "1d728aae2a8211a7a9f9f66073bdd672e7a1d2cc",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Jofell Gallardo posted a libcurl log using FTP that exposed a bug which made\na control connection that was deemed \"dead\" to yet be re-used in a following\nrequest. We must make sure the connection gets closed on this situation.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1184705993
  },
  {
    "id": "fee4f8c86dc91ab1861118aa2cc149d87cc4ee85",
    "files": [
      "lib/url.c",
      "lib/ssh.h",
      "lib/ssh.c",
      "lib/transfer.c"
    ],
    "message": "for now unless we do better fixed LIBSSH2_APINO compares to use long constants.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1184428741
  },
  {
    "id": "88ce03e94507d009edb0bb80e778fb8ad69eb6ac",
    "files": [
      "ares/ares_query.c",
      "ares/ares_process.c",
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "Vlad Dinulescu fixed two outstanding valgrind reports",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1184418530
  },
  {
    "id": "46c699c483f3e453fa6b0e8f69846ecce95a1a0f",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "Colin Hogben filed bug report #1750274\n(http://curl.haxx.se/bug/view.cgi?id=1750274) and submitted a patch for the\ncase where libcurl did a connect attempt to a non-listening port and didn't\nprovide a human readable error string back.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1184357855
  },
  {
    "id": "cf61c8d659692185eb61451ada7a4b90043527bb",
    "files": [
      "lib/url.c"
    ],
    "message": "fixed endif comment.",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1184144602
  },
  {
    "id": "5119fb16d63e91972924e54d455c825f62b1440d",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http_chunks.c"
    ],
    "message": "Shmulik Regev:\nThe tiny patch below fixes a bug (that I introduced :) which happens\nwhen negotiating authentication with a proxy (probably with web\nservers as well) that uses chunked transfer encoding for the 407 error\npages. In this case the ''ignorebody'' flag was ignored (no pun\nintended).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1184107501
  },
  {
    "id": "dc2c70be070f0da6e61777d7a8cb2e47576b461c",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Giancarlo Formicuccia reported and fixed a problem with a closed connection\nto a proxy during CONNECT auth negotiation.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1184106673
  },
  {
    "id": "93bd5123571092b2ccf925ca00cfe107e00f9f68",
    "files": [
      "src/main.c",
      "tests/data/test289",
      "tests/data/Makefile.am"
    ],
    "message": "Fixed a curl memory leak reported by Song Ma with a modified version\nof the patch he suggested.  Added his test case as test289 to verify.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1184106196
  },
  {
    "id": "836ffbfc222db3377b605b07b244023dc4b4aaf7",
    "files": [
      "src/getpass.c"
    ],
    "message": "fixed NetWare CLIB implementation of getpass_r()",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1183733939
  },
  {
    "id": "a2060effed77c88e1349392a839ee49229fda1fe",
    "files": [
      "lib/ssh.c"
    ],
    "message": "fixed wrong var name",
    "committer": {
      "email": "gk@gknw.de",
      "name": "Gunter Knauf"
    },
    "date": 1182939168
  },
  {
    "id": "a1b650ad7be4f8ec2fb486244f2f303434d43dfc",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/test506",
      "CHANGES"
    ],
    "message": "Gerrit Bruchh\ufffduser pointed out a warning that the Intel(R) Thread Checker\ntool reports and it was indeed a legitimate one and it is one fixed. It was\na use of a share without doing the proper locking first.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1182435818
  },
  {
    "id": "d978f85d553686714ce408e90280cbcce692f5d4",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Adam Piggott filed bug report #1740263\n(http://curl.haxx.se/bug/view.cgi?id=1740263). Adam discovered that when\ngetting a large amount of URLs with curl, they were fetched slower and\nslower... which turned out to be because the --libcurl data collecting which\nwrongly always was enabled, but no longer is...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1182376648
  },
  {
    "id": "fc3c5dae87b74186b99e00a16fbd2e4f7a32a9d1",
    "files": [
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test353"
    ],
    "message": "and fix another flaw in the singlecwd case when we get ftp://site.com/, also\nfrom the #1739100 bug report",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1182256408
  },
  {
    "id": "b691102ec7a0409d831dff01d2d7075d56dd7516",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Shmulik Regev fixed a flaw in the multi interface that occurred when doing\nHTTP CONNECT over a proxy",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1181832141
  },
  {
    "id": "db5d4bd81125d54007fc9f3106b51d964bd66db3",
    "files": [
      "lib/ssh.c"
    ],
    "message": "Remove duplicate code that was left in as part of 1.35.  This code\nonly affected sftp_sendquote() for the \"chgrp/chmod/chown\" commands.\n\nThis also fixed failure of test 614 on a system that previously failed.",
    "committer": {
      "email": "jim@thehousleys.net",
      "name": "James Housley"
    },
    "date": 1181827320
  },
  {
    "id": "82d3f97659d48383ca6b4816fc29a11d1e0ae7ee",
    "files": [
      "lib/ssh.c"
    ],
    "message": "BUG FIX:  When reading a directory listing that contains symlinks\nwith the latest libssh2, the listing would be truncated at the symlink.\nFix by looping on LIBSSH2_ERROR_EAGAIN, like the rest of the calls.",
    "committer": {
      "email": "jim@thehousleys.net",
      "name": "James Housley"
    },
    "date": 1181817413
  },
  {
    "id": "c8677e9d3f02c486145d080a10e095899ca5af14",
    "files": [
      "lib/hostares.c"
    ],
    "message": "Properly wait for the c-ares resolve to complete, hopefully the cure for\nbug #1733955",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1181568769
  },
  {
    "id": "25d2a27c647eb387614f7a1c255fc9b952330359",
    "files": [
      "ares/AUTHORS",
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "Brad Spencer found and fixed three flaws in the code, found with the new\ngcc 4.2.0 warning: -Waddress",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1180814963
  },
  {
    "id": "fe1fe64fd44bf46ea0f7c9b4bb2b1cb5637174cb",
    "files": [
      "RELEASE-NOTES",
      "docs/KNOWN_BUGS",
      "lib/nss.c",
      "CHANGES"
    ],
    "message": "Rob Crittenden fixed bug #1705802\n(http://curl.haxx.se/bug/view.cgi?id=1705802), which was filed by Daniel\nBlack identifying several FTP-SSL test cases fail when we build libcurl with\nNSS for TLS/SSL. Listed as #42 in KNOWN_BUGS.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1180130187
  },
  {
    "id": "fcc3e2ca3484f16865b2d22bb0ea3df0f1dd6c9f",
    "files": [
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "Ravi Pratap fixed a flaw in the init_by_resolv_conf() function for windows\nthat could cause it to return a bad return code.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1180127488
  },
  {
    "id": "c25da519138797ff25a8e85d832665fd2b2ed21f",
    "files": [
      "lib/tftp.c",
      "CHANGES"
    ],
    "message": "Song Ma filed bug report #1724016\n(http://curl.haxx.se/bug/view.cgi?id=1724016) noticing that downloading\nglob-ranges for TFTP was broken in CVS.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1180041078
  },
  {
    "id": "70b1900dd13d16f2e83f571407a614541d5ac9ba",
    "files": [
      "src/main.c",
      "CHANGES"
    ],
    "message": "'mytx' in bug report #1723194 (http://curl.haxx.se/bug/view.cgi?id=1723194)\npointed out that the warnf() function in the curl tool didn't properly deal\nwith the cases when excessively long words were used in the string to chop\nup.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1180040305
  },
  {
    "id": "96c093f27c8fd06e16a947b8dfab9d444ce9a9a6",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Andre Guibert de Bruet fixed a memory leak when PKCS #12 parsing failed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1179866811
  },
  {
    "id": "a9d49769ff1a27ab5e347d0d87100e6ed0d6796b",
    "files": [
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Andre Guibert de Bruet fixed a memory leak in the function that verifies the\npeer's name in the SSL certificate when built for OpenSSL. The leak happens\nfor libcurls with CURL_DOES_CONVERSIONS enabled that fail to convert the CN\nname from UTF8.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1179863504
  },
  {
    "id": "250f9670b72637a2cdca49d6ac5656c6f58235fd",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Feng Tu reported that curl -w did wrong on TFTP transfers in\nbug report #1715394 (http://curl.haxx.se/bug/view.cgi?id=1715394), and the\ntransfer-related info \"variables\" were indeed overwritten with zeroes wrongly\nand have now been adjusted. The upload size still isn't accurate.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1179484368
  },
  {
    "id": "41ba7666f0d67617462c717ef0a859c3347dd3b3",
    "files": [
      "RELEASE-NOTES",
      "lib/ssh.c",
      "CHANGES"
    ],
    "message": "Kristian Gunstone fixed a problem where overwriting an uploaded file with\nsftp didn't truncate it first, which would corrupt the file if the new\nfile was shorter than the old.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1178735067
  },
  {
    "id": "ad19f95f15bac425c1b37a7a260025d8fc9fe63c",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "James Bursa fixed a bug in the multi handle code that made the connection\ncache grow a bit too much, beyond the normal 4 * easy_handles.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1178521675
  },
  {
    "id": "9f72db13c4608d57e8232f355e5b96335d2035f6",
    "files": [
      "lib/url.c",
      "lib/url.h",
      "lib/multi.c"
    ],
    "message": "Fixed an out of memory handling issue with HTTP pipelines.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1178133236
  },
  {
    "id": "2f0539d8803e4f270c8584994f7fc8b90cd5e15c",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Set the timeout for easy handles to expire really soon after addition or\n  when CURLM_CALL_MULTI_PERFORM is returned from curl_multi_socket*/perform,\n  to make applications using only curl_multi_socket() to properly function\n  when adding easy handles \"on the fly\". Bug report and test app provided by\n  Michael Wallner.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1178113676
  },
  {
    "id": "eec105daba5934d78281718252490b9b57fe8156",
    "files": [
      "src/main.c"
    ],
    "message": "Fixed a logic error in the last patch and another out of memory issue.\nReduce the scope of some variables.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1178067006
  },
  {
    "id": "503557e5ceac4ec3e5caec1d0a2e4d2f39eca471",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "Peter O'Gorman fixed libcurl to not init GnuTLS as early as we did before,\nsince it then inits libgcrypt and libgcrypt is being evil and EXITS the\napplication if it fails to get a fine random seed. That's really not a nice\nthing to do by a library.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1177794090
  },
  {
    "id": "f611f42dcfa251a055339979930b2e2e3eb1a05a",
    "files": [
      "RELEASE-NOTES",
      "lib/easy.c",
      "CHANGES"
    ],
    "message": "Frank Hempel fixed a curl_easy_duphandle() crash on a handle that had\nbeen removed from a multi handle, and then fixed another flaw that prevented\ncurl_easy_duphandle() to work even after the first fix - the handle was\nstill marked as using the multi interface.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1177792027
  },
  {
    "id": "6e835ef3aa2f9fe6497c7e00d4c8640ba64c5c53",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed an out of memory handling issue.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1177534442
  },
  {
    "id": "cea9695bcfd157926670db57ba2495e1e3940730",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "Daniel Black filed bug #1704675 (http://curl.haxx.se/bug/view.cgi?id=1704675)\nidentifying a double-free problem in the SSL-dealing layer, telling GnuTLS to\nfree NULL credentials on closedown after a failure and a bad #ifdef for NSS\nwhen closing down SSL.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1177191151
  },
  {
    "id": "47f044265e5e10a3fbcbfddb7849a816c102216e",
    "files": [
      "lib/tftp.c",
      "lib/ftp.c"
    ],
    "message": "Fixed some out of memory handling issues.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1176251141
  },
  {
    "id": "d46d995766a849dbbcfa2f362ccdbca24401a006",
    "files": [
      "lib/http_ntlm.c",
      "lib/http.c"
    ],
    "message": "Fixed some out of memory handling issues.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1176245570
  },
  {
    "id": "910ee13b20b622b9aa0c53025d86b19e9dcdf586",
    "files": [
      "lib/http.c"
    ],
    "message": "Fixed an out of memory handling issue.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1176165521
  },
  {
    "id": "c321b9f7046e96aa269635d9deafa357a118e88c",
    "files": [
      "lib/url.c",
      "lib/http_ntlm.c",
      "lib/http_negotiate.c",
      "lib/base64.c"
    ],
    "message": "Fixes some more out of memory handling bugs.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1175730095
  },
  {
    "id": "7e74349b86386f0fb33e7323f70b10300d64eaf3",
    "files": [
      "lib/cookie.c"
    ],
    "message": "Fixed file handle leak in OOM condition.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1175726952
  },
  {
    "id": "fd016fb3ee75aa1e87b1c41ae7b05e163f65b351",
    "files": [
      "src/main.c"
    ],
    "message": "Fixed curl_slist_append handling of out of memory conditions on the\neasycode list (discovered by runtests' torture test).",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1175718467
  },
  {
    "id": "7d48d851a2d2a810f6acac1e31332737c23ec868",
    "files": [
      "lib/ssh.c"
    ],
    "message": "Fixed a memory leak and improper shutdown on SFTP post-quote command failure.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1175647576
  },
  {
    "id": "990b15e40288ad89c423d331b9563d8259284d9c",
    "files": [
      "CHANGES",
      "lib/transfer.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/http.c",
      "lib/easy.c"
    ],
    "message": "Rob Jones fixed better #ifdef'ing for a bunch of #include lines.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1175633677
  },
  {
    "id": "5e7164f87a7b65a4790b3b3e080664dabc8d50a4",
    "files": [
      "src/main.c",
      "CHANGES",
      "src/config-win32.h",
      "RELEASE-NOTES",
      "lib/strequal.c",
      "configure.ac"
    ],
    "message": "Matt Kraai provided a patch that makes curl build on QNX 6 fine again. Mostly\nby letting configure check for setmode and ifdef on HAVE_SETMODE. NOTE: non-\nconfigure platforms that havve setmode() needs their hard-coded config.h files\nfixed. I fixed the src/config-win32.h.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1175413890
  },
  {
    "id": "6c56b5301f86d81bd7e77ff2adeafb8ca36fcddc",
    "files": [
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Daniel Johnson fixed multi code to traverse the easy handle list properly.\n  A left-over bug from the February 21 fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1174810576
  },
  {
    "id": "0dd1219668de43b675a0f3f1c7521b5f823c6895",
    "files": [
      "lib/url.c",
      "tests/data/Makefile.am",
      "CHANGES",
      "tests/data/test288"
    ],
    "message": "Fixed a memory leak when specifying a proxy with a file: URL and added\ntest case 288 to verify it.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1174702520
  },
  {
    "id": "072a8b2955e4a7cb4e6e278f1c8585697c513e1a",
    "files": [
      "RELEASE-NOTES",
      "lib/progress.c",
      "CHANGES"
    ],
    "message": "Bryan Henderson fixed the progress function so that it can get called\nmore frequently allowing same calling frecuency for the client progress\ncallback, while keeping the once a second frecuency for speed calculations\nand internal display of the transfer progress.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1174305753
  },
  {
    "id": "9189ac1141de4c9f8d61fadfb1a435b0b9436d18",
    "files": [
      "lib/ssh.c"
    ],
    "message": "Fixed some memory leaks in various error paths.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1173993956
  },
  {
    "id": "8605321d06bb3b3da441c698c9089c5f874b5776",
    "files": [
      "lib/ssh.c"
    ],
    "message": "Fixed a memory leak.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1173917081
  },
  {
    "id": "b66def2b4ca113428f48d4f89f007a36d36bc163",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Emmanuel Dreyfus fixed not being able to find ber_free() in\nlibldap when available in liblber.",
    "committer": {
      "email": "yangsita@gmail.com",
      "name": "Yang Tse"
    },
    "date": 1173676165
  },
  {
    "id": "09c70dec08529a2a9c552681c8e7c5c1c3f3a6ae",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Eygene Ryabinkin fixed a use-after-free issue with HTTP transfers with the\nmulti interface",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1173567080
  },
  {
    "id": "1e55ed5c7d04c47fc931719fea05314f126aa974",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "- Robert Iakobashvili fixed CURLOPT_INTERFACE for IPv6.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1173480487
  },
  {
    "id": "3789e2e6ce705ce4c23c672dc5f05aa254b451c0",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Justin Fletcher fixed a file descriptor leak in the curl tool when trying to\n  upload a file it couldn't open. Bug #1676581\n  (http://curl.haxx.se/bug/view.cgi?id=1676581)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1173477098
  },
  {
    "id": "4c3568bfd644e977cc6d56be6af56a29bea0cf5b",
    "files": [
      "src/main.c"
    ],
    "message": "Fixed a couple of problems detected by valgrind in test cases 181 & 216",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1173210911
  },
  {
    "id": "060f7ca2d2a7f5c8845a62a143c1d9fa988d1269",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "- Hang Kin Lau found and fixed: When I use libcurl to connect to an https\n  server through a proxy and have the remote https server port set using the\n  CURLOPT_PORT option, protocol gets reset to http from https after the first\n  request.\n\n  User defined URL was modified internally by libcurl and subsequent reuse of\n  the easy handle may lead to connection using a different protocol (if not\n  originally http).\n\n  I found that libcurl hardcoded the protocol to \"http\" when it tries to\n  regenerate the URL if CURLOPT_PORT is set. I tried to fix the problem as\n  follows and it's working fine so far",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1172614335
  },
  {
    "id": "f19d333ef6b067809cb2b0c153fbd3f5db4321a1",
    "files": [
      "tests/data/test34",
      "lib/http_chunks.h",
      "CHANGES",
      "lib/transfer.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/transfer.h",
      "lib/multi.c",
      "lib/http_chunks.c"
    ],
    "message": "- Ravi Pratap provided work on libcurl making pipelining more robust and\n  fixing some bugs:\n  o Don't mix GET and POST requests in a pipeline\n  o Fix the order in which requests are dispatched from the pipeline\n  o Fixed several curl bugs with pipelining when the server is returning\n    chunked encoding:\n    * Added states to chunked parsing for final CRLF\n    * Rewind buffer after parsing chunk with data remaining\n    * Moved chunked header initializing to a spot just before receiving\n      headers",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1172095180
  },
  {
    "id": "9a70ce42457c2124bd57f49f4f36d5268a0b56fc",
    "files": [
      "ares/windows_port.c"
    ],
    "message": "Fixed typo.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1171906836
  },
  {
    "id": "c7d096620138199b06175ae57fd2385d3cb1ee63",
    "files": [
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "- Jeff Pohlmeyer fixed a flaw in curl_multi_add_handle() when adding a handle\n  that has an easy handle present in the \"closure\" list pending closure.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1171282541
  },
  {
    "id": "91386937ff120d11f7bf24dc487f00751362a61c",
    "files": [
      "lib/tftp.c",
      "lib/hostthre.c",
      "lib/http.c",
      "lib/ssluse.c",
      "lib/gtls.c",
      "lib/ftp.c",
      "docs/libcurl/curl_easy_setopt.3",
      "lib/transfer.c",
      "lib/urldata.h",
      "include/curl/curl.h",
      "CHANGES",
      "lib/telnet.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/connect.c",
      "lib/hostares.c",
      "lib/socks.c"
    ],
    "message": "- Michael Wallner provided a patch that adds support for CURLOPT_TIMEOUT_MS\n  and CURLOPT_CONNECTTIMEOUT_MS that, as their names should hint, do the\n  timeouts with millisecond resolution instead. The only restriction to that\n  is the alarm() (sometimes) used to abort name resolves as that uses full\n  seconds. I fixed the FTP response timeout part of the patch.\n\n  Internally we now count and keep the timeouts in milliseconds but it also\n  means we multiply set timeouts with 1000. The effect of this is that no\n  timeout can be set to more than 2^31 milliseconds (on 32 bit systems), which\n  equals 24.86 days.  We probably couldn't before either since the code did\n  *1000 on the timeout values on several places already.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1170715892
  },
  {
    "id": "fbc4407583528059923f48c5887d743e243326c3",
    "files": [
      "src/main.c",
      "TODO-RELEASE",
      "docs/KNOWN_BUGS",
      "CHANGES"
    ],
    "message": "- David McCreedy fixed the Curl command line tool for HTTP on non-ASCII\n  platforms.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1169938937
  },
  {
    "id": "44ac2776ae8394974c88655c8c45ee4a6bf7b209",
    "files": [
      "lib/url.c",
      "tests/runtests.pl",
      "TODO-RELEASE",
      "CHANGES"
    ],
    "message": "Fixed a dangling pointer problem that prevented the http_proxy environment\nvariable from being properly used in many cases (and caused test case 63\nto fail).",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1169688943
  },
  {
    "id": "8cade952bf053cbcd8993c2df13d8b952d9c2f45",
    "files": [
      "lib/http_chunks.c"
    ],
    "message": "David McCreedy fixed a flaw from his previous non-ascii HTTP patch",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1168986410
  },
  {
    "id": "385e612fa5b7663fc2bc815677b8c27bec2f0fe4",
    "files": [
      "lib/http.h",
      "lib/tftp.c",
      "lib/ftp.h",
      "lib/urldata.h",
      "lib/transfer.c",
      "lib/http.c",
      "lib/ftp.c",
      "lib/url.h",
      "lib/multi.c",
      "lib/telnet.h",
      "lib/tftp.h",
      "lib/ssh.h",
      "lib/url.c",
      "CHANGES",
      "lib/telnet.c",
      "lib/file.h",
      "RELEASE-NOTES",
      "lib/ssh.c",
      "lib/file.c"
    ],
    "message": "- Armel Asselin improved libcurl to behave a lot better when an easy handle\n  doing an FTP transfer is removed from a multi handle before completion. The\n  fix also fixed the \"alive counter\" to be correct on \"premature removal\" for\n  all protocols.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1168986130
  },
  {
    "id": "bbdc483671a248b553c1e5ccb42c90a665cea629",
    "files": [
      "lib/tftp.c",
      "CHANGES"
    ],
    "message": "Fixed a small memory leak in tftp uploads discovered by curl's memory leak\ndetector.  Also changed tftp downloads to URL-unescape the downloaded\nfile name.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1168972405
  },
  {
    "id": "869d65337ecc9e119a32a9b17b624e8a0c7d263c",
    "files": [
      "lib/transfer.c"
    ],
    "message": "fixed bad variable use when getting the size which we should read when\nattempting not to read data that might belong to the next response (if\npipelining)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1168731201
  },
  {
    "id": "d8ff0336a5a34bbf418b337e15d19ad426184c5e",
    "files": [
      "RELEASE-NOTES",
      "lib/sendf.c",
      "CHANGES"
    ],
    "message": "- Matt Witherspoon fixed the flaw which made libcurl 7.16.0 always store\n  downloaded data in two buffers, just to be able to deal with a special HTTP\n  pipelining case. That is now only activated for pipelined transfers. In\n  Matt's case, it showed as a considerable performance difference,",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1167862718
  },
  {
    "id": "0682d25da5036d2b35e890808247e9203d28fcc4",
    "files": [
      "lib/select.c",
      "RELEASE-NOTES",
      "docs/KNOWN_BUGS",
      "CHANGES"
    ],
    "message": "- Victor Snezhko helped us fix bug report #1603712\n  (http://curl.haxx.se/bug/view.cgi?id=1603712) (known bug #36) --limit-rate\n  (CURLOPT_MAX_SEND_SPEED_LARGE and CURLOPT_MAX_RECV_SPEED_LARGE) are broken\n  on Windows (since 7.16.0, but that's when they were introduced as previous\n  to that the limiting logic was made in the application only and not in the\n  library). It was actually also broken on select()-based systems (as apposed\n  to poll()) but we haven't had any such reports. We now use select(), Sleep()\n  or delay() properly to sleep a while without waiting for anything input or\n  output when the rate limiting is activated with the easy interface.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1167777296
  },
  {
    "id": "ebee2e323d42e7ef4017fcf99e67e02b083d8002",
    "files": [
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "- David McCreedy fixed a bad call to getsockname() that wrongly used a size_t\n  variable to point to when it should be a socklen_t.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1166794254
  },
  {
    "id": "89ab5f4380b9fd6507e0bc365310d88c82dd3de1",
    "files": [
      "lib/urldata.h",
      "CHANGES",
      "lib/transfer.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/ftp.c",
      "lib/http.c"
    ],
    "message": "Robson Braga Araujo reported bug #1618359\n(http://curl.haxx.se/bug/view.cgi?id=1618359) and subsequently provided a\npatch for it: when downloading 2 zero byte files in a row, curl 7.16.0\nenters an infinite loop, while curl 7.16.1-20061218 does one additional\nunnecessary request.\n\nFix: During the \"Major overhaul introducing http pipelining support and\nshared connection cache within the multi handle.\" change, headerbytecount\nwas moved to live in the Curl_transfer_keeper structure. But that structure\nis reset in the Transfer method, losing the information that we had about\nthe header size. This patch moves it back to the connectdata struct.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1166696138
  },
  {
    "id": "88c8d72a214864952b6d1c2347b6c3f5b7d69e84",
    "files": [
      "tests/data/test538",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c"
    ],
    "message": "Alexey Simak found out that when doing FTP with the multi interface and\nsomething went wrong like it got a bad response code back from the server,\nlibcurl would leak memory. Added test case 538 to verify the fix.\n\nI also noted that the connection would get cached in that case, which\ndoesn't make sense since it cannot be re-use when the authentication has\nfailed. I fixed that issue too at the same time, and also that the path\nwould be \"remembered\" in vain for cases where the connection was about to\nget closed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165829578
  },
  {
    "id": "ca48b6bf35d4054240748f8e95a40b835c99f1f6",
    "files": [
      "lib/transfer.c"
    ],
    "message": "fixed the printf formatting after I changed the type of 'excess'",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165505586
  },
  {
    "id": "840e796aa9c12a94bec90ee2a0bd49ee3163deb1",
    "files": [
      "lib/urldata.h",
      "RELEASE-NOTES",
      "TODO-RELEASE",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Sebastien Willemijns reported bug #1603712\n(http://curl.haxx.se/bug/view.cgi?id=1603712) which is about connections\ngetting cut off prematurely when --limit-rate is used. While I found no such\nproblems in my tests nor in my reading of the code, I found that the\n--limit-rate code was severly flawed (since it was moved into the lib, since\n7.15.5) when used with the easy interface and it didn't work as documented so\nI reworked it somewhat and now it works for my tests.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165397860
  },
  {
    "id": "e4505aefd9dc81eb2c51f2739f8dc626f7c3ce93",
    "files": [
      "lib/url.h",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/easy.c",
      "lib/multi.c"
    ],
    "message": "Jared Lundell filed bug report #1604956\n(http://curl.haxx.se/bug/view.cgi?id=1604956) which identified setting\nCURLOPT_MAXCONNECTS to zero caused libcurl to SIGSEGV. Starting now, libcurl\nwill always internally use no less than 1 entry in the connection cache.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165332986
  },
  {
    "id": "17ae28e0feb08da02d785a69d08116d877df5ca9",
    "files": [
      "RELEASE-NOTES",
      "lib/parsedate.c",
      "CHANGES"
    ],
    "message": "Martin Skinner brought back bug report #1230118 to haunt us once again.\n(http://curl.haxx.se/bug/view.cgi?id=1230118) curl_getdate() did not work\nproperly for all input dates on Windows. It was mostly seen on some TZ time\nzones using DST. Luckily, Martin also provided a fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165330663
  },
  {
    "id": "3c4f622479bafbebe654340ac7b6d68b03573a32",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Alexey Simak filed bug report #1600447\n(http://curl.haxx.se/bug/view.cgi?id=1600447) in which he noted that active\nFTP connections don't work with the multi interface. The problem is here that\nthe multi interface state machine has a state during which it can wait for the\ndata connection to connect, but the active connection is not done in the same\nstep in the sequence as the passive one is so it doesn't quite work for\nactive. The active FTP code still use a blocking function to allow the remote\nserver to connect.\n\nThe fix (work-around is a better word) for this problem is to set the\nboolean prematurely that the data connection is completed, so that the \"wait\nfor connect\" phase ends at once.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165326569
  },
  {
    "id": "3ce43764be4c7b58481b4b7a7d9b77e2c02724cf",
    "files": [
      "lib/select.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Matt Witherspoon fixed a problem case when the CPU load went to 100% when a\nHTTP upload was disconnected:\n\n\"What appears to be happening is that my system (Linux 2.6.17 and 2.6.13) is\nsetting *only* POLLHUP on poll() when the conditions in my previous mail\noccur. As you can see, select.c:Curl_select() does not check for POLLHUP. So\nbasically what was happening, is poll() was returning immediately (with\nPOLLHUP set), but when Curl_select() looked at the bits, neither POLLERR or\nPOLLOUT was set. This still caused Curl_readwrite() to be called, which\nquickly returned. Then the transfer() loop kept continuing at full speed\nforever.\"",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1165325825
  },
  {
    "id": "9ea3831c08fab5b320e381b1552964ff789316c7",
    "files": [
      "lib/ssh.c",
      "lib/transfer.c"
    ],
    "message": "James Housley fixed SCP downloading by setting the maxdownload.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1164448169
  },
  {
    "id": "04d5d1895cb90ddc3dada1b64d48c75d26d4f84e",
    "files": [
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "Michael Wallner fixed this problem: When I set domains in the options\nstruct, and there are domain/search entries in /etc/resolv.conf, the domains\nof the options struct will be overridden.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1164236081
  },
  {
    "id": "b5b3d9e5c7f88f6586d31a84028ff07fba658ee8",
    "files": [
      "lib/url.c",
      "CHANGES"
    ],
    "message": "Olaf fixed a leftover problem with the CONNECT fix of his that would leave a\nwrong error message in the error message buffer.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1162908422
  },
  {
    "id": "a777eb3d816dbd437d9b8a9e3b7b52be91d68e3b",
    "files": [
      "docs/KNOWN_BUGS",
      "CHANGES",
      "lib/http.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/urldata.h"
    ],
    "message": "Olaf Stueben provided a patch that I edited slightly. It fixes the notorious\nKNOWN_BUGS #25, which happens when a proxy closes the connection when\nlibcurl has sent CONNECT, as part of an authentication negotiation. Starting\nnow, libcurl will re-connect accordingly and continue the authentication as\nit should.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1162557835
  },
  {
    "id": "cde5e35d9b046b224c64936c432d67c9de8bcc9e",
    "files": [
      "CHANGES",
      "lib/transfer.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "docs/curl.1",
      "docs/libcurl/curl_easy_setopt.3",
      "tests/data/test281"
    ],
    "message": "Fixed CURLOPT_FAILONERROR to return CURLE_HTTP_RETURNED_ERROR even for the\ncase when 401 or 407 are returned, *IF* no auth credentials have been given.\nThe CURLOPT_FAILONERROR option is not possible to make fool-proof for 401\nand 407 cases when auth credentials is given, but we've now covered this\nsomewhat more.\n\nYou might get some amounts of headers transferred before this situation is\ndetected, like for when a \"100-continue\" is received as a response to a\nPOST/PUT and a 401 or 407 is received immediately afterwards.\n\nAdded test 281 to verify this change.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1161808814
  },
  {
    "id": "ee17fba72e1525238a934118a348a241fb0f51ea",
    "files": [
      "ares/ares_getnameinfo.c"
    ],
    "message": "Fixed \"'x' might be used uninitialized in this function\" warning.\nRemoved trailing whitespace.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1161785761
  },
  {
    "id": "930f9bd5342e6d514f9ba5b1303762c100621965",
    "files": [
      "lib/hostthre.c"
    ],
    "message": "clear the struct size not the pointer size, pointed out in bug report\n#1579171",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1161117251
  },
  {
    "id": "2ad7fcbc2fdaab3c544dea037d2e451a255ef6a8",
    "files": [
      "tests/data/test534",
      "tests/data/Makefile.am",
      "tests/libtest/lib533.c"
    ],
    "message": "test 534 added in an attempt to repeat Bogdan Nicula's bug...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1160304713
  },
  {
    "id": "552b963e6defebd6d0d6d41f8c74798d856c313c",
    "files": [
      "tests/libtest/Makefile.am",
      "CHANGES",
      "tests/data/test532",
      "tests/data/Makefile.am",
      "lib/easy.c",
      "lib/multi.c",
      "tests/libtest/lib526.c"
    ],
    "message": "Dmitriy Sergeyev provided an example source code that crashed CVS libcurl\nbut that worked nicely in 7.15.5. I converted it into test case 532 and\nfixed the problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1159996268
  },
  {
    "id": "ae13c93b7db9f9c68eaf95150ed551b3b649d8c4",
    "files": [
      "tests/data/test529",
      "tests/libtest/Makefile.am",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/urldata.h",
      "lib/multiif.h",
      "tests/libtest/lib525.c",
      "lib/multi.c"
    ],
    "message": "Reported in #1561470 (http://curl.haxx.se/bug/view.cgi?id=1561470), libcurl\nwould crash if a bad function sequence was used when shutting down after\nusing the multi interface (i.e using easy_cleanup after multi_cleanup) so\nprecautions have been added to make sure it doesn't any more - test case 529\nwas added to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1159478766
  },
  {
    "id": "68e9f7570839383e90451082a447733c988d9c9b",
    "files": [
      "tests/data/test171",
      "tests/data/test31",
      "tests/data/test62",
      "tests/data/test46",
      "tests/data/test73",
      "tests/data/test172",
      "tests/data/test506",
      "lib/cookie.c",
      "tests/data/test61"
    ],
    "message": "As reported in bug: #1566077 the former URL mentioned in the generated cookie\njar has died and we now instead point out our own version of that",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1159390845
  },
  {
    "id": "ec4a16f2e01b0b92e16fc841bc676394f37022f1",
    "files": [
      "tests/data/test278",
      "tests/data/test279",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am"
    ],
    "message": "Armel Asselin fixed problems when you gave a proxy URL with user name and\nempty password or no password at all. Test case 278 and 279 were added to\nverify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1158788981
  },
  {
    "id": "00ae13f96630dc5c2a9add25a4337710f8fcdaf5",
    "files": [
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "- Guilherme Balena Versiani: I noted a strange BUG in Win32 port\n  (ares_init.c/get_iphlpapi_dns_info() function): when I disable the network\n  by hand or disconnect the network cable in Windows 2000 or Windows XP, my\n  application gets 127.0.0.1 as the only name server. The problem comes from\n  'GetNetworkParams' function, that returns the empty string \"\" as the only\n  name server in that case. Moreover, the Windows implementation of\n  inet_addr() returns INADDR_LOOPBACK instead of INADDR_NONE.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1158006313
  },
  {
    "id": "29dc39fce1126265d8526be15beec3e3fdc1c11d",
    "files": [
      "src/main.c",
      "lib/sslgen.c",
      "include/curl/curl.h",
      "CHANGES",
      "docs/curl.1",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/urldata.h",
      "docs/libcurl/curl_easy_setopt.3",
      "lib/multi.c",
      "tests/libtest/lib526.c"
    ],
    "message": "- Fixed my breakage from earlier today so that doing curl_easy_cleanup() on a\n  handle that is part of a multi handle first removes the handle from the\n  stack.\n\n- Added CURLOPT_SSL_SESSIONID_CACHE and --no-sessionid to disable SSL\n  session-ID re-use on demand since there obviously are broken servers out\n  there that misbehave with session-IDs used.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1157995098
  },
  {
    "id": "b0f6e7cee48365d6b0cc9b52eeb8c151f2d86814",
    "files": [
      "RELEASE-NOTES",
      "lib/http_ntlm.c",
      "CHANGES"
    ],
    "message": "Michele Bini fixed how the hostname is put in NTLM packages. As servers\ndon't expect fully qualified names we need to cut them off at the first dot.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1157802327
  },
  {
    "id": "8ec1bfe897885e855c1ca1fc497f6be383bf392f",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Peter Sylvester cleaned up and fixed the getsockname() uses in ftp.c. Some\nof them can be completetly removed though...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1157753859
  },
  {
    "id": "466d093a92f3e8ccbb8af026e786bc41708caba6",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "docs/KNOWN_BUGS",
      "CHANGES"
    ],
    "message": "- \"Dortik\" (http://curl.haxx.se/bug/view.cgi?id=1551412) provided a patch that\n  while not fixing things very nicely, it does make the SOCKS5 proxy\n  connection slightly better as it now acknowledges the timeout for connection\n  and it no longer segfaults in the case when SOCKS requires authentication\n  and you did not specify username:password.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1157323962
  },
  {
    "id": "d7168a82e2123b6c3eb4db8e890ce7c14e21b32a",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Dmitriy Sergeyev found and fixed a multi interface flaw when using asynch\nname resolves. It could get stuck in the wrong state.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1157028819
  },
  {
    "id": "bdbd0cf27a7342b5eab41623fcd44459921d7f4a",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "David McCreedy fixed a remaining mistake from the August 19 TYPE change.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1156281805
  },
  {
    "id": "74a6921bc454fcbf842a221e95ba5dc09b19049e",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Armel Asselin fixed a crash in the FTP code when using SINGLECWD mode and\nfiles in the root directory.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1155943053
  },
  {
    "id": "a4ebf5b507490ceac7d741c4462ad162629a4bae",
    "files": [
      "lib/urldata.h",
      "RELEASE-NOTES",
      "lib/transfer.c",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Fixed a flaw in the \"Expect: 100-continue\" treatment. If you did two POSTs\non a persistent connection and allowed the first to use that header, you\ncould not disable it for the second request.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1155071569
  },
  {
    "id": "b708fa51ad1dd951ce2710b2eda69d8361327f16",
    "files": [
      "ares/ares_gethostbyname.c"
    ],
    "message": "Fixed comment.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1154706116
  },
  {
    "id": "ed7bff1fec093483b8ee8ac937a3469b9b889f8a",
    "files": [
      "ares/CHANGES",
      "ares/ares_getsock.c"
    ],
    "message": "Ravi Pratap fixed ares_getsock() to actually return the proper bitmap and\nnot always zero!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1154629245
  },
  {
    "id": "8a38c72c48cdc75e21aa1d13235215783115007f",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Mark Lentczner fixed how libcurl was not properly doing chunked encoding\nif the header \"Transfer-Encoding: chunked\" was set by the application.\nhttp://curl.haxx.se/bug/view.cgi?id=1531838",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1154542727
  },
  {
    "id": "ee642859ef04b9588e654ded629224fb0756f017",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/strerror.c"
    ],
    "message": "Maciej Karpiuk fixed a crash that would occur if we passed Curl_strerror()\nan unknown error number on glibc systems.\nhttp://curl.haxx.se/bug/view.cgi?id=1532289",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1154425141
  },
  {
    "id": "9f579f12fcda284c5b9f5dd8c1581fc5cd7fa8fb",
    "files": [
      "lib/multi.c"
    ],
    "message": "spell-fixed a comment",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1154425115
  },
  {
    "id": "a88deadd6f85a6ac3b7f9d574bbb7eaab3115700",
    "files": [
      "lib/formdata.c",
      "RELEASE-NOTES",
      "lib/formdata.h",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Yves Lejeune fixed so that replacing Content-Type: when doing multipart\nformposts work exactly the way you want it (and the way you'd assume it\nworks)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1154039709
  },
  {
    "id": "27c0b438976d0f964b3b6ee126d985759da06662",
    "files": [
      "lib/formdata.c",
      "CHANGES"
    ],
    "message": "David McCreedy fixed a build error when building libcurl with HTTP disabled,\nproblem added with the curl_formget() patch.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1153425892
  },
  {
    "id": "06d05b18b28d67b8745b63266f253276a24b901e",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Jari Sundell did some excellent research and bug tracking, figured out that\nwe did wrong and patched it: When nodes were removed from the splay tree,\nand we didn't properly remove it from the splay tree when an easy handle was\nremoved from a multi stack and thus we could wrongly leave a node in the\nsplay tree pointing to (bad) memory.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1153161358
  },
  {
    "id": "daef1cf34d6df8b199cf2081bda4b1b4d1916b97",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "David McCreedy fixed a flaw where the CRLF counter wasn't properly cleared\nfor FTP ASCII transfers.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1152903522
  },
  {
    "id": "8bed45340a48585bbd91e508f1ac44f5ed5bf178",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Toshiyuki Maezawa fixed a problem where you couldn't override the\nProxy-Connection: header when using a proxy and not doing CONNECT.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1152014519
  },
  {
    "id": "752acedc0b120bd52ec07a09837147c135dbb986",
    "files": [
      "RELEASE-NOTES",
      "lib/http_digest.c",
      "CHANGES"
    ],
    "message": "Olaf St\ufffdben fixed a bug that caused Digest authentication with md5-sess to\nfail. When using the md5-sess, the result was not Md5 encoded and Base64\ntransformed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1148598260
  },
  {
    "id": "1946058e7bf2b39c45f53d39dd67b043f948008e",
    "files": [
      "lib/ssluse.c",
      "CHANGES"
    ],
    "message": "Robson Braga Araujo fixed two problems in the recently added non-blocking SSL\nconnects. The state machine was not reset properly so that subsequent\nconnects using the same handle would fail, and there were two memory leaks.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1147178629
  },
  {
    "id": "73daf8ce334dc3d3dc8215cd898cfbb9fe3267de",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Robson Braga Araujo fixed a memory leak when you added an easy handle to a\nmulti stack and that easy handle had already been used to do one or more\neasy interface transfers, as then the code threw away the previously used\nDNS cache without properly freeing it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1147174380
  },
  {
    "id": "df9108e19b3287d4a0943c473c2af4f29f9004e1",
    "files": [
      "lib/tftp.c"
    ],
    "message": "Stop sending retransmitted received blocks up to client\nFixed handling of retransmitted blocks on transmit\nProperly aligned data to transmit within packet\nReplaced calls to strerror() with Curl_strerror()",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1147117286
  },
  {
    "id": "6307e783d83835ffaa70fc594b2a08307b2e359b",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "docs/KNOWN_BUGS",
      "CHANGES"
    ],
    "message": "Fixed known bug #28. The TFTP code no longer assumes a packed struct and\nthus works reliably on more platforms.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1147100990
  },
  {
    "id": "e85e30546c89e17b6fb0cf383de25b7ed7f3bf3d",
    "files": [
      "lib/tftp.c",
      "lib/connect.c",
      "lib/hostip.c",
      "lib/http.c",
      "lib/ssluse.c",
      "lib/hostares.c",
      "lib/ftp.c",
      "lib/telnet.c",
      "lib/hostsyn.c",
      "lib/hostasyn.c",
      "CHANGES",
      "lib/http_negotiate.c",
      "lib/connect.h",
      "RELEASE-NOTES",
      "lib/file.c",
      "lib/dict.c",
      "lib/sendf.c",
      "lib/hostip6.c"
    ],
    "message": "Roland Blom filed bug report #1481217\n(http://curl.haxx.se/bug/view.cgi?id=1481217), with follow-ups by Michele Bini\nand David Byron. libcurl previously wrongly used GetLastError() on windows to\nget error details after socket-related function calls, when it really should\nuse WSAGetLastError() instead.\n\nWhen changing to this, the former function Curl_ourerrno() is now instead\ncalled Curl_sockerrno() as it is necessary to only use it to get errno from\nsocket-related functions as otherwise it won't work as intended on Windows.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1146782387
  },
  {
    "id": "758f6eed5169f20635c410077b840c1ffb741ddb",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "Mark Eichin submitted bug report #1480821\n(http://curl.haxx.se/bug/view.cgi?id=1480821) He found and identified a\nproblem with how libcurl dealt with GnuTLS and a case where gnutls returned\nGNUTLS_E_AGAIN indicating it would block. It would then return an unexpected\nreturn code, making Curl_ssl_send() confuse the upper layer - causing random\n28 bytes trash data to get inserted in the transfered stream.\n\nThe proper fix was to make the Curl_gtls_send() function return the proper\nreturn codes that the callers would expect. The Curl_ossl_send() function\nalready did this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1146722440
  },
  {
    "id": "12db20be4e8b0130aba7342a1124eb85e3115822",
    "files": [
      "lib/formdata.c",
      "lib/select.c",
      "lib/multi.c",
      "lib/strerror.c"
    ],
    "message": "Fixed signed/unsigned convertion errors in Salford-C.\n#ifdef around WSAEDISCON in strerror.c.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1146072382
  },
  {
    "id": "87c5ed8beca8ae36da5c38ef3594b56d132e7dde",
    "files": [
      "lib/content_encoding.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Paul Querna fixed libcurl to better deal with deflate content encoding when\nthe stream (wrongly) lacks a proper zlib header. This seems to be the case on\ntoo many actual server implementations.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1145998180
  },
  {
    "id": "db03d4bdd0aa5b2eaef8fb0987310fe5c0ff0570",
    "files": [
      "RELEASE-NOTES",
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "Ale Vesely fixed CURLOPT_INTERFACE when using a hostname",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1145627179
  },
  {
    "id": "deeb74b7e4049cd3d25c02d9c5e5f74394567362",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "#1468330 (http://curl.haxx.se/bug/view.cgi?id=1468330) pointed out a bad\ntypecast in the curl tool leading to a crash with (64bit?) VS2005 (at least)\nsince the struct timeval field tv_sec is an int while time_t is 64bit.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1144752591
  },
  {
    "id": "bcc62cc9e34ce7536a05f0bdccda7ada628ba220",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test276",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "#1451929 (http://curl.haxx.se/bug/view.cgi?id=1451929) detailed a bug that\noccurred when asking libcurl to follow HTTP redirects and the original URL had\nmore than one question mark (?). Added test case 276 to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1143533005
  },
  {
    "id": "6421d69bff007ac10f6a5dd2663951c10b4bf9c1",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "David McCreedy fixed libcurl to no longer ignore AUTH failures and now it\nreacts properly according to the CURLOPT_FTP_SSL setting.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1142895068
  },
  {
    "id": "a63f9887b9523a5d73ed9348539919c175c1756a",
    "files": [
      "lib/tftp.c"
    ],
    "message": "Fixed a bug whereby a received file whose length was a multiple of\n512 bytes could have random garbage appended.  Also, stop processing TFTP\npackets which are too short to be legal.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1142892922
  },
  {
    "id": "5975229919b54c0a780bdc8d1bdd5baf6d5959bf",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "fixed tftp packet overflow risk",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1142839970
  },
  {
    "id": "cffebd7fd6b7d9f24793f94fbae2a62c05c46eb0",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/urldata.h",
      "CHANGES"
    ],
    "message": "Markus Koetter filed debian bug report #355715 which identified a problem\nwith the multi interface and multi-part formposts. The fix from February\n22nd could make the Curl_done() function get called twice on the same\nconnection and it was not designed for that and thus tried to call free() on\nan already freed memory area!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1141773101
  },
  {
    "id": "4b23ddc0029c01900db0750a454a6cc81faec7f0",
    "files": [
      "src/writeout.c"
    ],
    "message": "Fixed typo, the option is called --write-out. Bob Bagwill pointed out.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1140730382
  },
  {
    "id": "45e4b811b00e3f33d92bb1db8be6168c2d8a7ba2",
    "files": [
      "lib/url.c"
    ],
    "message": "Fixed a few more comment typos.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1140719962
  },
  {
    "id": "6fdbb011948cc9fd2cadff04b230427cf02dbd7d",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES",
      "lib/hostip.h",
      "lib/multi.c"
    ],
    "message": "Lots of work and analysis by \"xbx___\" in bug #1431750\n(http://curl.haxx.se/bug/view.cgi?id=1431750) helped me identify and fix two\ndifferent but related bugs:\n\n1) Removing an easy handle from a multi handle before the transfer is done\n   could leave a connection in the connection cache for that handle that is\n   in a state that isn't suitable for re-use. A subsequent re-use could then\n   read from a NULL pointer and segfault.\n\n2) When an easy handle was removed from the multi handle, there could be an\n   outstanding c-ares DNS name resolve request. When the response arrived,\n   it caused havoc since the connection struct it \"belonged\" to could've\n   been freed already.\n\nNow Curl_done() is called when an easy handle is removed from a multi handle\npre-maturely (that is, before the transfer was complteted). Curl_done() also\nmakes sure to cancel all (if any) outstanding c-ares requests.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1140697248
  },
  {
    "id": "75c943055962180f178f3b37bcee855fdaf640c0",
    "files": [
      "lib/url.c"
    ],
    "message": "Fixed some spelling errors in comments, and extraneous \\n in failf logs.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1140635373
  },
  {
    "id": "29e446e508d42b960d4a8a097586606da561c7ab",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Shmulik Regev fixed an issue with multi-pass authentication and compressed\ncontent when libcurl didn't honor the internal ignorebody flag.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1140391008
  },
  {
    "id": "10beb36b1cd1479d14b245a922e1ab49d9a8b1f9",
    "files": [
      "RELEASE-NOTES",
      "lib/http_negotiate.c",
      "CHANGES",
      "tests/server/sws.c"
    ],
    "message": "Ulf H\ufffdrnhammar fixed a format string (printf style) problem in the Negotiate\ncode. It should however not be the cause of any troubles. He also fixed a\nfew similar problems in the HTTP test server code.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1140301621
  },
  {
    "id": "8cb695a9633e13d4378d9dc8f2af51ffb97a086f",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "fixed --limit-rate",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1138836502
  },
  {
    "id": "d9bd5de0b12b00db813dcfaec2f8f12636b721a1",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Fixed FTP_SKIP_PASV_IP and FTP_USE_EPSV to \"do right\" when used on FTP thru\nHTTP proxy.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1137104318
  },
  {
    "id": "31c7aa0ba4dfcd69099ed2b669c35d40d05df69c",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Michael Jahn fixed ftp over CONNECT",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1137069604
  },
  {
    "id": "f4cc8153aeb5209ddb9698b2b0780ab2bfdb3d44",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Mike Jean fixed so that the second CONNECT when doing FTP over a HTTP proxy\nactually used a new connection and not sent the second request on the first\nsocket!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1136672656
  },
  {
    "id": "f49df54a36a39995be32782154f3ca2692f17ac4",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "7.15.1 with the now to be announced security flaw fixed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1133910351
  },
  {
    "id": "083c5e17e176058190d228ee9c25987898014417",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "Yang Tse fixed: Openssl 0.9.9 makes 'const' the SSL_METHOD parameter in\nSSL_CTX_new and others, and also makes functions SSLv23_client_method,\nTLSv1_client_method, etc return a 'const' SSL_METHOD pointer. Previous\nversions do not use the 'const' qualifier.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1133795644
  },
  {
    "id": "feacad7f684920d4d91b456f8c80e2a30dd4a400",
    "files": [
      "lib/tftp.c"
    ],
    "message": "Yang Tse fixed the 4th argument in the sendto() calls",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1133565720
  },
  {
    "id": "599d9642ca92a8f9b6feaef20844c1ef4f41dbcc",
    "files": [
      "src/main.c",
      "lib/setup.h"
    ],
    "message": "Yang Tse fixed MSVC 6.0 warnings",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1132737000
  },
  {
    "id": "92c0de518eee482c8a9c516ec5c1e6b447b2a1a5",
    "files": [
      "lib/http_ntlm.c",
      "CHANGES"
    ],
    "message": "Quagmire reported that he needed to raise a NTLM buffer for SSPI to work\nproperly for a case, and so we did. We raised it even for non-SSPI builds\nbut it should not do any harm. http://curl.haxx.se/bug/view.cgi?id=1356715",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1132006252
  },
  {
    "id": "d52ed3fff2e138d2c4d455dffe5888d70441ffb3",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Jan Kunder's debian bug report\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=338680 identified a weird\nerror message for when you try to upload a file and the requested directory\ndoesn't exist on the target server.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1131927492
  },
  {
    "id": "adf462fe0508e7229bcfabfd8ae7012aa57e5066",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Debian bug report 338681 by Jan Kunder: make curl better detect and report bad\nlimit-rate units: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=338681 Now\ncurl will return error if a bad unit is used.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1131880008
  },
  {
    "id": "5e3836055ff8697c0d0ea514fdc9e16ca4b3c424",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "Dima Barsky patched problem #1348930: the GnuTLS code completely ignored\nclient certificates! (http://curl.haxx.se/bug/view.cgi?id=1348930).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1131751207
  },
  {
    "id": "ae9fbe573e4717adb1bfaa2d980a4b9896856617",
    "files": [
      "lib/tftp.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "David Lang fixed IPv6 support for TFTP!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1131661507
  },
  {
    "id": "966fa848a0213be52d3a4b3787c36ec7c5553f22",
    "files": [
      "src/main.c",
      "lib/urldata.h",
      "CHANGES",
      "lib/transfer.c",
      "lib/url.c",
      "tests/data/Makefile.am",
      "docs/curl.1",
      "docs/libcurl/curl_easy_setopt.3",
      "tests/data/test274"
    ],
    "message": "Nis Jorgensen filed bug report #1338648\n(http://curl.haxx.se/bug/view.cgi?id=1338648) which really is more of a\nfeature request, but anyway. It pointed out that --max-redirs did not allow\nit to be set to 0, which then would return an error code on the first\nLocation: found. Based on Nis' patch, now libcurl supports CURLOPT_MAXREDIRS\nset to 0, or -1 for infinity. Added test case 274 to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1130450738
  },
  {
    "id": "6f8fe67ace4346c3c22fb3348d54ba1cfeb59669",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "tommink[at]post.pl reported in bug report #1337723\n(http://curl.haxx.se/bug/view.cgi?id=1337723) that curl could not upload\nbinary data from stdin on Windows if the data contained control-Z (hex 1a)\nsince that is treated as end-of-file when read in text mode. Gisle Vanem\npointed out the fix, and I made both -T and --data-binary take advantage of\nit.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1130446921
  },
  {
    "id": "9e0882ba98feff82f4ffa1f8701cdc139bbcd0f1",
    "files": [
      "lib/connect.c"
    ],
    "message": "close the existing socket when trying next IP, as otherwise we leak one!\nbug #1326306",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1130246111
  },
  {
    "id": "c890149c8c144e6eb226d4ebf1723d203e1859ff",
    "files": [
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "Dima Barsky reported a problem with GnuTLS-enabled libcurl in bug report\n  #1334338 (http://curl.haxx.se/bug/view.cgi?id=1334338). When reading an SSL\n  stream from a server and the server requests a \"rehandshake\", the current\n  code simply returns this as an error. I have no good way to test this, but\n  I've added a crude attempt of dealing with this situation slightly better -\n  it makes a blocking handshake if this happens. Done like this because fixing\n  this the \"proper\" way (that would handshake asynchronously) will require\n  quite some work and I really need a good way to test this to do such a\n  change.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1130015107
  },
  {
    "id": "1a1ab2e2e8abb6618721188109156e5bdda35cdd",
    "files": [
      "lib/url.c",
      "CHANGES"
    ],
    "message": "\"Ofer\" reported a problem when libcurl re-used a connection and failed to do\nit, it could then accidentally actually crash. Presumably, this concerns FTP\nconnections.  http://curl.haxx.se/bug/view.cgi?id=1330310",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1129928444
  },
  {
    "id": "b4c53e2cfd11fa9fec43d766fbec1a06931de11d",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "An anonymous submitter filed bug #1299181\n(http://curl.haxx.se/bug/view.cgi?id=1299181) that identified a silly problem\nwith Content-Range: headers with the 'bytes' keyword written in a different\ncase than all lowercase! It would cause a segfault!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1127812419
  },
  {
    "id": "b9494cb0d6ce76adb23bbc6006c09bdff63b455f",
    "files": [
      "ares/ares_getnameinfo.c"
    ],
    "message": "1 - attempted fix of uninitialized variable\n2 - indented and edited to fit better within 80 columns\n3 - fixed possible buffer overflow in the service name lookup function",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1127299525
  },
  {
    "id": "87bbd1389947f5d407951b2f25febf8dc5057590",
    "files": [
      "RELEASE-NOTES",
      "lib/hostthre.c",
      "CHANGES"
    ],
    "message": "Igor Polyakov fixed a rather nasty problem with the threaded name resolver\nfor Windows, that could lead to an Access Violation when the multi interface\nwas used due to an issue with how the resolver thread was and was not\nterminated.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1125325433
  },
  {
    "id": "432dfe2b8ff14dad451ec25f0bee09d454893324",
    "files": [
      "RELEASE-NOTES",
      "lib/gtls.c",
      "CHANGES"
    ],
    "message": "Fixed CA cert verification using GnuTLS with the default bundle, which\npreviously failed due to GnuTLS not allowing x509 v1 CA certs by default.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1124869213
  },
  {
    "id": "a676c18502d5ec3128db11accf04d6de3f9be949",
    "files": [
      "CHANGES",
      "lib/transfer.c",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/cookie.c",
      "lib/cookie.h"
    ],
    "message": "- Jeff Pohlmeyer found out that if you ask libcurl to load a cookiefile (with\n  CURLOPT_COOKIEFILE), add a cookie (with CURLOPT_COOKIELIST), tell it to\n  write the result to a given cookie jar and then never actually call\n  curl_easy_perform() - the given file(s) to read was never read but the\n  output file was written and thus it caused a \"funny\" result.\n\n- While doing some tests for the bug above, I noticed that Firefox generates\n  large numbers (for the expire time) in the cookies.txt file and libcurl\n  didn't treat them properly. Now it does.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1124268943
  },
  {
    "id": "35110eca737b86c555add7d3fd19dc4111ed8248",
    "files": [
      "lib/transfer.c"
    ],
    "message": "James Bursa identified a libcurl HTTP bug and a good way to repeat it. If a\nsite responds with bad HTTP response that doesn't contain any header at all,\nonly a response body, and the write callback returns 0 to abort the\ntransfer, it didn't have any real effect but the write callback would be\ncalled once more anyway.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1123968526
  },
  {
    "id": "6c157a404b3b0d2e6659fde92f498c7c5608ac61",
    "files": [
      "RELEASE-NOTES",
      "lib/parsedate.c",
      "CHANGES"
    ],
    "message": "Christopher R. Palmer fixed the offsets used for date parsings when the time\nzone name of a daylight savings time was used. For example, PDT vs PDS. This\nflaw was introduced with the new date parser (11 sep 2004 - 7.12.2).\nFortunately, no web server or cookie string etc should be using such time\nzone names thus limiting the effect of this bug.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1123624771
  },
  {
    "id": "493d6033aa299b614f0edecd86e1eccf95a86a00",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Jon Grubbs filed bug report #1249962 which identified a problem with NTLM on a\nHTTP proxy if an FTP URL was given. libcurl now properly switches to pure HTTP\ninternally when an HTTP proxy is used, even for FTP URLs. The problem would\nalso occur with other multi-pass auth methods.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1123455546
  },
  {
    "id": "9da9d00c62b3f45ffb53a95a2a88a31c661dbd83",
    "files": [
      "docs/examples/cookie_interface.c"
    ],
    "message": "fixed example since this is how the interface works now",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1122587480
  },
  {
    "id": "6e87cf5b30ac44447315f66ffa164e8eec8df831",
    "files": [
      "lib/connect.c",
      "lib/ftp.c",
      "lib/strerror.c"
    ],
    "message": "Fixed some typos in output messages.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1121984315
  },
  {
    "id": "d49c1442970642ba0daf2654b54dca971c83fd8c",
    "files": [
      "RELEASE-NOTES",
      "lib/parsedate.c",
      "CHANGES"
    ],
    "message": "Gisle Vanem came up with a nice little work-around for bug #1230118. It\nseems the Windows (MSVC) libc time functions may return data one hour off if\nTZ is not set and automatic DST adjustment is enabled. This made\ncurl_getdate() return wrong value, and it also concerned internal cookie\nexpirations etc.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1120575461
  },
  {
    "id": "e3a530eb612d77e5021a7d6a0e79f3c98522d790",
    "files": [
      "tests/libtest/lib505.c"
    ],
    "message": "Andr\ufffds Garc\ufffda fixed a warning appearing on windows",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1117191701
  },
  {
    "id": "4a091bbd8a30685d4f676a023c0488abb0469d3f",
    "files": [
      "lib/url.c",
      "tests/data/Makefile.am",
      "tests/data/test260",
      "tests/server/sws.c"
    ],
    "message": "Bug report #1204435 identified a problem with malformed URLs like\n\"http://somehost?data\" as it added a slash too much in the request (\"GET\n/?data/\"...). Added test case 260 to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1116446461
  },
  {
    "id": "3f23e8443e67e5f415aaf532062c1054ab1b9a1a",
    "files": [
      "lib/url.c"
    ],
    "message": "oops, found by bug reported in bug report #1200661",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1115905465
  },
  {
    "id": "01165e08e0d131b399fba2190f17af67e66f0888",
    "files": [
      "tests/data/test257",
      "lib/netrc.c",
      "CHANGES",
      "lib/http.c",
      "lib/url.c",
      "tests/data/Makefile.am",
      "lib/urldata.h"
    ],
    "message": "Fred New reported a bug where we used Basic auth and user name and password in\n.netrc, and when following a Location: the subsequent requests didn't properly\nuse the auth as found in the netrc file. Added test case 257 to verify my fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1114465188
  },
  {
    "id": "543fbe14eee5dbbd81f1e9ec2004d5f327504367",
    "files": [
      "lib/gtls.c"
    ],
    "message": "Fixed the CN extraction",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1114203386
  },
  {
    "id": "04b35e86d5cad45079fbea0ed1d6e9f0481cc976",
    "files": [
      "ares/ares_parse_aaaa_reply.c",
      "ares/ares_gethostbyname.c"
    ],
    "message": "Fixed for Mac OS X builds based on excellent feedback from Heinz Stockinger.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1114182062
  },
  {
    "id": "d323b3d816c84b83368de9b0c60f13b5a364139f",
    "files": [
      "src/main.c"
    ],
    "message": "Set the retry delay variables after the option parsing, as bug report\n#1187787 points out.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1114164109
  },
  {
    "id": "63d109f7be8ddd027c86355dd09d02189b731a46",
    "files": [
      "tests/libtest/lib523.c",
      "CHANGES",
      "lib/url.c",
      "tests/data/test522",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.am",
      "tests/data/test521",
      "tests/libtest/lib521.c"
    ],
    "message": "Olivier reported that even though he used CURLOPT_PORT, libcurl clearly still\nused the default port. He was right. I fixed the problem and added the test\ncases 521, 522 and 523 to verify the fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1113853264
  },
  {
    "id": "80fe93bc338b3795a4ac32f1d15bc71861100ffd",
    "files": [
      "lib/gtls.c"
    ],
    "message": "OK, I must've been halucinating or something because I no longer see the\nbug I thought I saw before when I changed this...!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1113082694
  },
  {
    "id": "fb3c85ab2f6353985b5a3b4252e18b8398d095eb",
    "files": [
      "tests/data/Makefile.am",
      "lib/urldata.h",
      "tests/data/test249",
      "lib/transfer.c"
    ],
    "message": "fixed the 304 response-with-content-length problem reported by Cory Nelson",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1112979553
  },
  {
    "id": "993600761f62f8a4e32868df7ab51e2d84898e10",
    "files": [
      "ares/ares_query.c",
      "ares/ares_process.c",
      "ares/ares_mkquery.c",
      "ares/CHANGES",
      "ares/ares_expand_name.c",
      "ares/ares_parse_a_reply.c",
      "ares/ares_send.c",
      "ares/ares_parse_ptr_reply.c",
      "ares/ares_init.c",
      "ares/ares_gethostbyaddr.c",
      "ares/ares_gethostbyname.c"
    ],
    "message": "Tupone Alfredo fixed includes of arpa/nameser_compat.h to build fine on Mac OS\nX.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1112826462
  },
  {
    "id": "158588640a6d79bb20b1b1ed6497b7802969868e",
    "files": [
      "lib/http.c"
    ],
    "message": "Don't close the connection if we're in a known negotiation mode and we won't\nsend any data anyway. Probably the bug Tom Moers noticed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1112099305
  },
  {
    "id": "84b4e9ff7c1eee735e2653db24fbd1fd0ab72ab5",
    "files": [
      "lib/urldata.h",
      "lib/ftp.c"
    ],
    "message": "Fixed the FTP response reader function to properly deal with responses split\nup in several chunks when read.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1112096125
  },
  {
    "id": "8a076d1dba48493eb009982ef68406dc5fc90ce9",
    "files": [
      "tests/data/Makefile.am",
      "tests/data/test239",
      "tests/data/test243",
      "lib/http.c"
    ],
    "message": "Based on Augustus Saunders' comments and findings, the HTTP output auth\nfunction was fixed to use the proper proxy authentication when multiple ones\nwere added as accepted. test 239 and test 243 were added to repeat the\nproblems and verify the fixes.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1112048371
  },
  {
    "id": "6c6dda1b7442aa97c1e565f54350885e135d0447",
    "files": [
      "lib/select.c"
    ],
    "message": "Fixed typo.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1111454667
  },
  {
    "id": "efaf6886505cd29084af05aa06edc19fd71bdfe9",
    "files": [
      "lib/inet_ntoa_r.h",
      "lib/inet_ntop.c",
      "lib/url.c",
      "lib/if2ip.c",
      "lib/ftp.c",
      "lib/setup.h"
    ],
    "message": "Fixed ftp support with uClibc due to differing inet_ntoa_r() behaviour.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1110920446
  },
  {
    "id": "702664e9591197c10ec36ab7a0ab7395b77726d7",
    "files": [
      "tests/libtest/lib520.c",
      "CHANGES",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/libtest/Makefile.am",
      "tests/data/test520"
    ],
    "message": "Dominick Meglio reported that using CURLOPT_FILETIME when transferring a FTP\nfile got a Last-Modified: header written to the data stream, corrupting the\nactual data. This was because some conditions from the previous FTP code was\nnot properly brought into the new FTP code. I fixed and I added test case 520\nto verify. (This bug was introduced in 7.13.1)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1110269354
  },
  {
    "id": "aa47ac4c066fa125ec1bfef941698f49a548aede",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "lib/ftp.c",
      "tests/data/test235",
      "CHANGES"
    ],
    "message": "Added test case 235 that makes a resumed upload of a file that isn't present\non the remote side. This then converts the operation to an ordinary STOR\nupload. This was requested/pointed out by Ignacio Vazquez-Abrams.\n\nIt also proved (and I fixed) a bug in the newly rewritten ftp code (and\npresent in the 7.13.1 release) when trying to resume an upload and the servers\nreturns an error to the SIZE command. libcurl then loops and sends SIZE\ncommands infinitely.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1109980326
  },
  {
    "id": "7012a4a291f2480da9e34cbf111dec26226389c2",
    "files": [
      "src/main.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Rene Rebe fixed a -# crash when more data than expected was retrieved.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1109895122
  },
  {
    "id": "f8b4ba80e0b6c53620084108b59aed95d16a26ec",
    "files": [
      "lib/krb4.c",
      "lib/security.c"
    ],
    "message": "krb4 fixed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1109074830
  },
  {
    "id": "176981b529bad6a61ad4a5439c87953ae5541a98",
    "files": [
      "lib/connect.c"
    ],
    "message": "close the socket properly when returning error due to failing localbind\nBug report #1124588 by David",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1108651503
  },
  {
    "id": "ac022b2e30f42f860f365348ee569f87d0fbe1cf",
    "files": [
      "RELEASE-NOTES",
      "lib/transfer.c",
      "CHANGES",
      "lib/http.c"
    ],
    "message": "Christopher R. Palmer reported a problem with HTTP-POSTing using \"anyauth\"\nthat picks NTLM. Thanks to David Byron letting me test NTLM against his\nservers, I could quickly repeat and fix the problem. It turned out to be:\n\nWhen libcurl POSTs without knowing/using an authentication and it gets back a\nlist of types from which it picks NTLM, it needs to either continue sending\nits data if it keeps the connection alive, or not send the data but close the\nconnection. Then do the first step in the NTLM auth. libcurl didn't send the\ndata nor close the connection but simply read the response-body and then sent\nthe first negotiation step. Which then failed miserably of course. The fixed\nversion forces a connection if there is more than 2000 bytes left to send.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1108564283
  },
  {
    "id": "b98faaa8c0c5f2f8d0a1d4301be4b5d9950c98ee",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed bad krb4 code. It always tried to use krb4 if built enabled.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1108162257
  },
  {
    "id": "e4a1788614aed581f03b54cd421ab949aac3b37d",
    "files": [
      "lib/content_encoding.c"
    ],
    "message": "Fix for a bug report that compressed files that are exactly 64 KiB long\nproduce a zlib error.",
    "committer": {
      "email": "dan@coneharvesters.com",
      "name": "Dan Fandrich"
    },
    "date": 1107803557
  },
  {
    "id": "f661475962213123b5e640db9744b23ea361ac65",
    "files": [
      "lib/connect.c",
      "CHANGES"
    ],
    "message": "Connect failures with the multi interface was often returned as \"connect()\ntimed out\" even though the reason was different. Fixed this problem by not\nsetting this timeout to zero when using multi.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1106954484
  },
  {
    "id": "4551e7ce49275da08e5fcf0ef46944b42de892fc",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "docs/KNOWN_BUGS",
      "CHANGES"
    ],
    "message": "KNOWN_BUGS #17 fixed. A DNS cache entry may not remain locked between two\ncurl_easy_perform() invokes. It was previously unlocked at disconnect, which\ncould mean that it remained locked between multiple transfers. The DNS cache\nmay not live as long as the connection cache does, as they are separate.\n\nTo deal with the lack of DNS (host address) data availability in re-used\nconnections, libcurl now keeps a copy of the IP adress as a string, to be able\nto show it even on subsequent requests on the same connection.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1106950488
  },
  {
    "id": "7472ede32ae5a1c80928e03ef8fd836630eb6ac8",
    "files": [
      "src/main.c",
      "tests/data/test227",
      "CHANGES",
      "docs/curl.1",
      "RELEASE-NOTES",
      "tests/data/Makefile.am"
    ],
    "message": "Philippe Hameau found out that -Q \"+[command]\" didn't work, although some code\nwas written for it. I fixed and added test case 227 to verify it.  The curl.1\nman page didn't mention the '+' so I added it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1106259732
  },
  {
    "id": "3050ae57c0ad3a071448fb36b5d5d720910d5d00",
    "files": [
      "tests/data/test225",
      "docs/KNOWN_BUGS",
      "tests/data/test226",
      "CHANGES",
      "docs/TODO",
      "tests/data/Makefile.am",
      "lib/ftp.c"
    ],
    "message": "Stephan Bergmann made libcurl return CURLE_URL_MALFORMAT if an FTP URL\ncontains %0a or %0d in the user, password or CWD parts. (A future fix would\ninclude doing it for %00 as well - see KNOWN_BUGS for details.) Test case 225\nand 226 were added to verify this",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1106171762
  },
  {
    "id": "0e263553488ffbc08b5e98012835bceff9d23f7d",
    "files": [
      "lib/select.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Inspired by Martijn Koster's patch and example source at\nhttp://www.greenhills.co.uk/mak/gentoo/curl-eintr-bug.c, I now made the\nselect() and poll() calls properly loop if they return -1 and errno is\nEINTR. glibc docs for this is found here:\nhttp://www.gnu.org/software/libc/manual/html_node/Interrupted-Primitives.html\n\nThis last link says BSD doesn't have this \"effect\". Will there be a problem\nif we do this unconditionally?\nS: ----------------------------------------------------------------------",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1105653108
  },
  {
    "id": "29102befa66e009c668d6a51cc41051a273d4703",
    "files": [
      "RELEASE-NOTES",
      "lib/transfer.h",
      "lib/transfer.c",
      "CHANGES",
      "lib/multi.c"
    ],
    "message": "Cyrill Osterwalder posted a detailed analysis about a bug that occurs when\nusing a custom Host: header and curl fails to send a request on a re-used\npersistent connection and thus creates a new connection and resends it. It\nthen sent two Host: headers. Cyrill's analysis was posted here:\nhttp://curl.haxx.se/mail/archive-2005-01/0022.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1105452045
  },
  {
    "id": "9d1145598abf9fddae2e88cca9e114c12a1b7d9d",
    "files": [
      "lib/url.c",
      "RELEASE-NOTES",
      "CHANGES"
    ],
    "message": "Bruce Mitchener identified (bug report #1099640) the never-ending SOCKS5\nproblem with the version byte and the check for bad versions. Bruce has lots\nof clues on this, and based on his suggestion I've now removed the check of\nthat byte since it seems to be able to contain 1 or 5.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1105399934
  },
  {
    "id": "21bb852750d39a51d20e29652d29b0be5fdbef38",
    "files": [
      "lib/urldata.h",
      "CHANGES",
      "lib/multi.h",
      "lib/url.c",
      "RELEASE-NOTES",
      "lib/easy.h",
      "lib/easy.c",
      "lib/multi.c"
    ],
    "message": "Pavel Orehov reported memory problems with the multi interface in bug report\n#1098843. In short, a shared DNS cache was setup for a multi handle and when\nthe shared cache was deleted before the individual easy handles, the latter\ncleanups caused read/writes to already freed memory.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1105351627
  },
  {
    "id": "52e1ce95189dfe2c79167a9b0c284e3d966f95e0",
    "files": [
      "src/main.c"
    ],
    "message": "fixed #1097019, multiple GET posts (-G) error",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1105050335
  },
  {
    "id": "67abd4cd47cf0135c9ce0637f224624afad95c2f",
    "files": [
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "Rune Kleveland fixed a minor memory leak for received cookies with the (rare)\nversion attribute set.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103754811
  },
  {
    "id": "a173e07eec19b49af0f3f32f636768eee653ebbf",
    "files": [
      "lib/sendf.c"
    ],
    "message": "Prevent failf() from using the va_list variable more than once.\nSee bug report #1088962 and  Single Unix Specification:\nhttp://www.opengroup.org/onlinepubs/007908799/xsh/vfprintf.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103638930
  },
  {
    "id": "497cc6bfaf74048a6c275abb1eaa9bc2d266dd4c",
    "files": [
      "src/main.c"
    ],
    "message": "Samuel Listopad fixed -E to support \"C:/path\" (with forward slash) as well.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103365711
  },
  {
    "id": "ccf65be0a463f8813e1bafb5db7c6334a0b08b28",
    "files": [
      "lib/ftp.c"
    ],
    "message": "fixed minor memory leak when running out of memory",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103274019
  },
  {
    "id": "d3b414724b18e84ed32c044527aac9a85e434690",
    "files": [
      "RELEASE-NOTES",
      "CHANGES",
      "tests/runtests.pl",
      "lib/http.c"
    ],
    "message": "Dinar in bug report #1086121, found a file handle leak when a multipart\nformpost (including a file upload part) was aborted before the whole file was\nsent.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103190756
  },
  {
    "id": "d88b3d3d5d487d0f70230eb6548a843d32836ce2",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test214",
      "CHANGES",
      "src/urlglob.c"
    ],
    "message": "fixed how backslashes are treated in glob strings",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103102604
  },
  {
    "id": "0d0d5e7ee3b8575118d8d268802623f2a9a49ee5",
    "files": [
      "tests/libtest/lib519.c",
      "CHANGES",
      "lib/url.c",
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/libtest/Makefile.am",
      "tests/data/test519"
    ],
    "message": "Harshal Pradhan fixed changing username/password on a persitent HTTP\nconnection.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1103059371
  },
  {
    "id": "d02b2c430874819c0ad6a9d8cf1e75721bc529d4",
    "files": [
      "tests/server/sws.c"
    ],
    "message": "Fixed missing braces warning.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1102937461
  },
  {
    "id": "22a0c57746ae12506b1ba0f0fafffd26c1907d6a",
    "files": [
      "tests/server/sws.c"
    ],
    "message": "Missing 'in6addr_any' in MingW's lib. ld bug?",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1102882465
  },
  {
    "id": "bd2db872376bc8e9c9bce24dfad490850c775cb6",
    "files": [
      "lib/strerror.c"
    ],
    "message": "fixed error message",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1102791323
  },
  {
    "id": "80a324386b0d6653a19da6e3eeb28530e2478e5d",
    "files": [
      "RELEASE-NOTES",
      "lib/http_ntlm.c",
      "CHANGES"
    ],
    "message": "Rene Bernhardt found and fixed a buffer overrun in the NTLM code, where\nlibcurl always and unconditionally overwrote a stack-based array with 3 zero\nbytes. I edited the fix to make it less likely to occur again (and added\na comment explaining the reason to the buffer size).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1102460981
  },
  {
    "id": "4435e3b269606107f90adb3e1b842e439029b6b3",
    "files": [
      "lib/sendf.c",
      "CHANGES"
    ],
    "message": "Fixed so that the final error message is sent to the verbose info \"stream\"\neven if no errorbuffer is set.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1102374270
  },
  {
    "id": "35944744f84f8127529b315951946416fa592a7c",
    "files": [
      "RELEASE-NOTES",
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Richard Atterer fixed libcurl's way of dealing with the EPSV\nresponse. Previously, libcurl would re-resolve the host name with the new\nport number and attempt to connect to that, while it should use the IP from\nthe control channel. This bug made it hard to EPSV from an FTP server with\nmultiple IP addresses!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1102289613
  },
  {
    "id": "2c27e4ee767c37e1923d26dfc1cddafe31490c2c",
    "files": [
      "RELEASE-NOTES",
      "tests/data/Makefile.am",
      "tests/data/test207",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Bug report #1078066: when a chunked transfer was pre-maturely closed exactly\nat a chunk boundary it was not considered an error and thus went unnoticed.\nAdded test case 207 to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1102066285
  },
  {
    "id": "0966ddafaa7f044c2a4d972ba416dc4ec96f1ab4",
    "files": [
      "lib/ftp.c",
      "docs/libcurl/curl_easy_setopt.3",
      "CHANGES"
    ],
    "message": "As reported in Mandrake's bug tracker bug 12285\n(http://qa.mandrakesoft.com/show_bug.cgi?id=12285), when connecting to an\nIPv6 host with FTP, --disable-epsv (or --disable-eprt) effectively disables\nthe ability to transfer a file. Now, when connected to an FTP server with\nIPv6, these FTP commands can't be disabled even if asked to with the\navailable libcurl options.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1101763507
  },
  {
    "id": "ffe17a8197e73b791f6b1609bdcdc3a40818acdc",
    "files": [
      "lib/progress.c",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "As reported in Mandrake's bug tracker bug 12289\n(http://qa.mandrakesoft.com/show_bug.cgi?id=12289), curl would print a newline\nto \"finish\" the progress meter after each redirect and not only after a\ncompleted transfer.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1101479593
  },
  {
    "id": "4245400ae4c2623c49280ffeb295d4eb6790f7e2",
    "files": [
      "src/main.c"
    ],
    "message": "Fixed _write() arguments.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1098969489
  },
  {
    "id": "a00e7f0f5ecd8fd93951a85ef86eb8b3c58f092e",
    "files": [
      "tests/data/test194",
      "CHANGES",
      "lib/transfer.c",
      "tests/data/Makefile.am",
      "docs/TODO",
      "lib/http.c"
    ],
    "message": "Tomas Pospisek filed bug report #1053287 that proved -C - and --fail on a\nfile that was already completely downloaded caused an error, while it\ndoesn't if you don't use --fail! I added test case 194 to verify the fix.\nGrrr. CURLOPT_FAILONERROR is now added to the list stuff to remove in\nlibcurl v8 due to all the kludges needed to support it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1098703720
  },
  {
    "id": "beb61ef4298a91422679fec79475b70422095d40",
    "files": [
      "lib/formdata.c",
      "CHANGES"
    ],
    "message": "Mohun Biswas found out that formposting a zero-byte file didn't work very\ngood. I fixed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1098657100
  },
  {
    "id": "071218a201d5b86fbfdf1ae72a3ddf51633b8d99",
    "files": [
      "lib/url.c"
    ],
    "message": "Fixed tld_check_name(). idna_to_unicode_lzlz() should never fail,\nbut return FALSE if 'uc_name == NULL' just in case.",
    "committer": {
      "email": "gvanem@broadpark.no",
      "name": "Gisle Vanem"
    },
    "date": 1097088958
  },
  {
    "id": "d239fc5d04b0c0a961fc766301912f561c79bd37",
    "files": [
      "lib/ftp.c",
      "CHANGES"
    ],
    "message": "Aleksandar Milivojevic reported a problem in the Redhat bugzilla (see\nhttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=134133) and not to anyone\ninvolved in the curl project! This happens when you try to curl a file from a\nproftpd site using SSL. It seems proftpd sends a somewhat unorthodox PASS\nresponse code (232 instead of 230). I relaxed the response code check to deal\nwith this and similar cases.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1096629731
  },
  {
    "id": "ec4da97a35fb285c4316f8b4017f84cba5d494b7",
    "files": [
      "lib/formdata.c"
    ],
    "message": "fixed the basename() replacement, reported by Gisle",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1096629638
  },
  {
    "id": "6af6a2bbe873ed8e85f4f65d5c0906532f3828a2",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed an error message: we use CWD, we don't cd into dirs with FTP",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1096442483
  },
  {
    "id": "2576ac1c76953e573668f8f016f822bc2f2403f6",
    "files": [
      "RELEASE-NOTES",
      "lib/easy.c",
      "CHANGES"
    ],
    "message": "Bertrand Demiddelaer fixed curl_easy_reset() so that it doesn't mistakingly\nenable the progress meter.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1096410407
  },
  {
    "id": "bfeea8e6b72208c04f3f577852587a33fad82c82",
    "files": [
      "ares/CHANGES",
      "ares/ares_init.c"
    ],
    "message": "- Henrik Stoerner fix: got a report that Tru64 Unix (the unix from Digital\n  when they made Alpha's) uses /etc/svc.conf for the purpose fixed below for\n  other OSes. He made c-ares check for and understand it if present.\n\n- Now c-ares will use local host name lookup _before_ DNS resolving by default\n  if nothing else is told.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1096409979
  },
  {
    "id": "7676f402186203b6dc0a0f7581f6d1a545213300",
    "files": [
      "RELEASE-NOTES",
      "lib/ldap.c",
      "CHANGES"
    ],
    "message": "jean-claude Chauve fixed an LDAP bug",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1095840101
  },
  {
    "id": "25bf23105d0ae927a9b62a1d4f4f30312481955f",
    "files": [
      "tests/data/Makefile.am",
      "tests/data/test187",
      "CHANGES",
      "lib/transfer.c"
    ],
    "message": "Location: problem with bad original URL, identified in bug report #1029478",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1095370118
  },
  {
    "id": "ade8e47a8c4092c47081c2f9c6adbd968ee87dc7",
    "files": [
      "lib/parsedate.c"
    ],
    "message": "more docs and fixed the delta compared to GMT that prevented test case 141 to\nwork with this",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1094930194
  },
  {
    "id": "0ec4c66fbaea2d024e4efa16a608e9099ef49de3",
    "files": [
      "src/main.c",
      "tests/data/test186",
      "CHANGES",
      "docs/curl.1",
      "RELEASE-NOTES",
      "tests/data/Makefile.am"
    ],
    "message": "fixed -F to support setting type= even on parts that aren't file-uploads",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1094852872
  },
  {
    "id": "b8b56248bddc646bf8d262dc9c5b45ce68a1ef08",
    "files": [
      "tests/data/test185",
      "CHANGES",
      "tests/data/test184",
      "lib/http.c",
      "lib/url.c",
      "tests/data/Makefile.am",
      "lib/urldata.h"
    ],
    "message": "- Bug report #1025986. When following a Location: with a custom Host: header\n  replacement, curl only replaced the Host: header on the initial request\n  and didn't replace it on the following ones. This resulted in requests with\n  two Host: headers.\n\n  Now, curl checks if the location is on the same host as the initial request\n  and then continues to replace the Host: header. And when it moves to another\n  host, it doesn't replace the Host: header but it also doesn't make the\n  second Host: header get used in the request.\n\n  This change is verified by the two new test cases 184 and 185.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1094849931
  },
  {
    "id": "2b1673c9c83f693fdf243607f9141e5e897e0ba8",
    "files": [
      "tests/data/test6",
      "tests/data/test512",
      "tests/libtest/lib509.c",
      "tests/data/test501",
      "tests/data/test157",
      "tests/data/test12",
      "tests/data/test75",
      "tests/data/test97",
      "tests/data/test306",
      "tests/data/test44",
      "tests/data/test26",
      "tests/data/test87",
      "tests/data/test305",
      "tests/data/test31",
      "tests/data/test83",
      "tests/data/test169",
      "tests/data/test72",
      "tests/data/test7",
      "tests/data/test172",
      "tests/data/test76",
      "tests/data/test70",
      "tests/data/test48",
      "tests/data/test59",
      "tests/data/test94",
      "tests/data/test66",
      "tests/data/test78",
      "tests/data/test79",
      "tests/data/test77",
      "tests/data/test509",
      "tests/data/test25",
      "tests/data/test175",
      "tests/data/test5",
      "tests/data/test64",
      "tests/data/test56",
      "tests/data/test57",
      "tests/data/test183",
      "tests/data/test11",
      "tests/data/test153",
      "tests/data/test8",
      "tests/data/test91",
      "tests/data/test164",
      "tests/data/test166",
      "tests/data/test150",
      "tests/runtests.pl",
      "tests/data/test152",
      "tests/data/test154",
      "tests/data/test176",
      "tests/data/test98",
      "tests/data/test43",
      "tests/data/test177",
      "tests/data/test36",
      "tests/data/test68",
      "tests/data/test84",
      "tests/data/test46",
      "tests/data/test50",
      "tests/data/test23",
      "tests/data/test159",
      "tests/data/test27",
      "tests/data/test300",
      "tests/data/test301",
      "tests/data/test173",
      "tests/data/test40",
      "tests/data/test61",
      "tests/data/test55",
      "tests/data/test42",
      "tests/data/test81",
      "tests/data/test180",
      "tests/data/test99",
      "tests/data/test63",
      "tests/data/test17",
      "tests/data/test163",
      "tests/data/test67",
      "tests/data/test158",
      "tests/data/test60",
      "tests/data/test29",
      "tests/data/test52",
      "tests/data/test9",
      "tests/data/test506",
      "tests/data/test24",
      "tests/data/test30",
      "tests/data/test514",
      "tests/data/test34",
      "tests/data/test181",
      "tests/data/test151",
      "tests/data/test74",
      "tests/data/test22",
      "tests/data/test15",
      "tests/data/test95",
      "tests/data/test18",
      "tests/data/test54",
      "tests/data/test69",
      "tests/data/test90",
      "tests/data/test13",
      "tests/data/test302",
      "tests/data/test303",
      "tests/data/test39",
      "tests/data/test167",
      "tests/data/test304",
      "tests/data/test16",
      "tests/data/test14",
      "tests/data/test160",
      "tests/data/test178",
      "tests/data/test73",
      "tests/data/test28",
      "tests/data/test93",
      "tests/data/test88",
      "tests/data/test86",
      "tests/data/test47",
      "tests/data/test510",
      "tests/data/test162",
      "tests/data/test65",
      "tests/data/test179",
      "tests/data/test10",
      "tests/data/test82",
      "tests/data/test33",
      "tests/data/test155",
      "tests/data/test168",
      "tests/data/test41",
      "tests/data/test170",
      "tests/data/test92",
      "tests/data/test174",
      "tests/data/test62",
      "tests/data/test38",
      "tests/data/test71",
      "tests/data/test3",
      "tests/data/test500",
      "tests/data/test171",
      "tests/data/test51",
      "tests/data/test2",
      "tests/data/test4",
      "tests/data/test80",
      "tests/data/test1",
      "tests/data/test156",
      "tests/data/test49",
      "tests/data/test58",
      "tests/data/test45",
      "tests/data/test32",
      "tests/data/test513",
      "tests/data/test508",
      "tests/data/test53",
      "tests/data/test503",
      "tests/data/test85",
      "tests/data/test89",
      "tests/data/test37",
      "tests/data/test165"
    ],
    "message": "Now the test servers and test cases can run on a custom port number. There's\nno fixed port numbers in use anymore. Starting now, the default ports the\nservers use are 8990 - 8993. There's no option to modify these yet, but\nchanging the $base option in the top of the runtests.pl script.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1094630918
  },
  {
    "id": "4934e6471b98b7e87bee2ade909f64750448562c",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "In OpenSSL 0.9.7d and earlier, ASN1_STRING_to_UTF8 fails if the input is\nalready UTF-8 encoded. We check for this case and copy the raw string manually\nto avoid the problem. This code can be made conditional in the future when\nOpenSSL has been fixed. Work-around brought by Alexis S. L. Carvalho.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1092125203
  },
  {
    "id": "9c4ffcc25097cedfa71dce42d4bdbcf273765313",
    "files": [
      "lib/http_negotiate.c"
    ],
    "message": "Enrico Scholz fixed the service name to be uppercase as reported in bug\nreport #1004105",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1091731974
  },
  {
    "id": "55e61c092ed05b5fbe92e7f212d98bf331ba22c0",
    "files": [
      "lib/connect.c"
    ],
    "message": "Fixed multiple IP connects with the multi interface. This fix is influenced\nby Gisle Vanem's patch, only modified by me.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1091623081
  },
  {
    "id": "b9f1dd7691f3de2dc3c333579340f55aff72198d",
    "files": [
      "lib/url.c"
    ],
    "message": "Bertrand Demiddelaer fixed the host name to get setup properly even when\na connection is re-used, when a proxy is in use.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1091050053
  },
  {
    "id": "0e03165467416b2637341ada829a9e16a003daa4",
    "files": [
      "lib/cookie.c"
    ],
    "message": "Bertrand Demiddelaer fixed two missing newlines",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1090856527
  },
  {
    "id": "8e7fcd9ee1fbee3c955efe825d7681dfc4dd072d",
    "files": [
      "src/urlglob.c"
    ],
    "message": "using #[num] with -o now make it literally used if there's no globbing for\nthat particular index. Reported in bug report 997536.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1090833070
  },
  {
    "id": "e35187741be548ae869db90024b0486faa02dd7f",
    "files": [
      "lib/http.c"
    ],
    "message": "spellfixed comments",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1088662086
  },
  {
    "id": "1daa258b8aaa004ddc022d98f2c0ea13ffb580a6",
    "files": [
      "lib/hostthre.c"
    ],
    "message": "fixed problems I missed to fix from my cleanup",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1088064594
  },
  {
    "id": "818aed35e2f7c1602333c0b2ecc0444272966cc7",
    "files": [
      "lib/connect.c"
    ],
    "message": "static functions are better not Curl_ prefixed to make their static\nstatus more obvious",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1087981683
  },
  {
    "id": "76920413d9f9e0c7cd05d297acd8dc640fdbd6f2",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "Gisle fixed the wildcard checks for certificates.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1087894282
  },
  {
    "id": "a76288b99aae391127a4f0ff3dc065b8c64efa9b",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Alexander Krasnostavsky fixed a flaw in the 3rd party transfer code that\ndidn't properly check return code.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1087376722
  },
  {
    "id": "3d00c86f4ca2439a2748fa61c591fb69b36c010d",
    "files": [
      "lib/file.c"
    ],
    "message": "Steven Bazyl and Seshubabu Pasam pointed out a bug on win32 when freeing the\npath after a transfer.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1086851848
  },
  {
    "id": "80197cf493bc4c4d18da83982c9f3fce860e57bb",
    "files": [
      "ares/ares_init.c"
    ],
    "message": "James Bursa fixed a RISC OS init issue, removed trailing whitespace",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1086729911
  },
  {
    "id": "dcf7310b2d6b40ac37358f4d69f6e3e9aa3c9c70",
    "files": [
      "lib/easy.c"
    ],
    "message": "fixed curl_easy_duphandle() to properly clean up all memory if any memory\nfunction fails and it returns NULL",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1085644089
  },
  {
    "id": "59f904d8de005755f87aa0a4312ab7570a62c6f7",
    "files": [
      "CHANGES",
      "lib/http.c",
      "lib/url.c",
      "tests/data/Makefile.am",
      "lib/urldata.h",
      "tests/data/test172",
      "tests/data/test6"
    ],
    "message": "Robert D. Young reported that CURLOPT_COOKIEFILE and CURLOPT_COOKIE could\nnot be used both in one request. Fixed it and added test case 172 to verify.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1085382828
  },
  {
    "id": "755f98e7687a1fc2a7ff363212803b39897897a0",
    "files": [
      "tests/data/test171",
      "tests/data/Makefile.am",
      "CHANGES",
      "lib/cookie.c"
    ],
    "message": "While talking to host a.b.c, libcurl did wrongly not accept cookies that were\nset to the domain .a.b.c (that is with a dot prefix). This is now fixed and\ntest case 171 verifies it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1085172015
  },
  {
    "id": "6176f14141f1ec76be18bc3befbaaa73c4681eb1",
    "files": [
      "lib/transfer.c"
    ],
    "message": "fixed a warning on IRIX, deleted trailing whitespace",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1084776608
  },
  {
    "id": "98f968f2eef9adc29f1702c09bd7d6306e338a55",
    "files": [
      "lib/url.c"
    ],
    "message": "fixed Curl_open() to not leak anything if one malloc() fails, fix by\nJames Bursa only modified by me.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1084310223
  },
  {
    "id": "b8541929c8d9afc29f70289a1cdc209046808b10",
    "files": [
      "lib/sendf.c"
    ],
    "message": "curl_slist_append() fixed to clear up properly if a memory function fails",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1084198879
  },
  {
    "id": "fff01f24bf8dabf7bb6edb7ebdc7cba197d6039b",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "Luca fixed the nc= in the digest line since it apparantly should not have\nquotes...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1084176555
  },
  {
    "id": "8e73e553367730c6f4edebd40d723ae7319092a6",
    "files": [
      "lib/hostares.c"
    ],
    "message": "Michael Benedict brought a fix that fills in the errorbuffer properly\nwhen ares fails to resolve a name. This was fixed before but somehow has\nfallen out again!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083841851
  },
  {
    "id": "6bdcfecbcf587e8ac39d9f6e51b81dcdb361f977",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Joe Halpin fixed the warning on the typecast from data pointer to function\npointer!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083766132
  },
  {
    "id": "3f21fe60fc5d3662fdfd9165470bf8f51231ef94",
    "files": [
      "lib/progress.c"
    ],
    "message": "Gisle fixed the percentage to work, I adjusted it slightly to not as easily\noverflow on 32bit filesize-systems",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083764684
  },
  {
    "id": "32a9554c924febb96c3ff02395333fe7395feb23",
    "files": [
      "lib/memdebug.c"
    ],
    "message": "Gisle fixed: don't reference 'mem' if it's NULL.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083764514
  },
  {
    "id": "e7ee1ccf4596a37a2278e523d0da7652ab43a42c",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Gisle fixed the problem with ldap_search_s() fails with \"filter error\": a case\nof using 'lud_filter' after freeing 'lud_dn'.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083596494
  },
  {
    "id": "1756499b11cdd3bad84df074a7aed0f07db09638",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "oops, a bad strtok() was fixed by Luca",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083304422
  },
  {
    "id": "59907ebc0e4031e2447b57684d530da22a5d32c7",
    "files": [
      "lib/url.c",
      "lib/http.c"
    ],
    "message": "fixed the host/proxy name issue when re-using a connection and made IDN names\nwork when using proxy by converting the IDN-name to the ACE-encoded version\nbefore the request-URL is passed to the proxy.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083246108
  },
  {
    "id": "2f53da5e7ae16fc66c87ed479c8cdc20cb6305fd",
    "files": [
      "tests/libtest/lib504.c"
    ],
    "message": "make the loop use a fixed number of attempts to prevent eternal loops",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1083063583
  },
  {
    "id": "4aac210a83f28db45686647b90e31e1385b25e48",
    "files": [
      "lib/hostthre.c"
    ],
    "message": "Gisle fixed a mistaken check",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1082989122
  },
  {
    "id": "fb1039f2ab239b5f1bee153406364574fc20be29",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "Tor Arntsen fixed a 'Statement not reachable'-warning",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1082980363
  },
  {
    "id": "3755bffcc2fd3b031e6ea9c51e0d2e9949f8c3ce",
    "files": [
      "CHANGES",
      "lib/hostip.c"
    ],
    "message": "Gisle Vanem found and fixed a memory leak when doing (failing) Windows\n threaded name resolves.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1082729070
  },
  {
    "id": "2ff30d067c19aea79cd82e0a45e313cf3bb07285",
    "files": [
      "CHANGES",
      "tests/data/test162",
      "lib/transfer.c",
      "tests/data/Makefile.am",
      "lib/urldata.h",
      "lib/http.c"
    ],
    "message": "- David Byron found and fixed a small bug with the --fail and authentication\n  stuff added a few weeks ago.  Turns out that if you specify --proxy-ntlm and\n  communicate with a proxy that requires basic authentication, the proxy\n  properly returns a 407, but the failure detection code doesn't realize it\n  should give up, so curl returns with exit code 0. Test case 162 verifies\n  this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1082664461
  },
  {
    "id": "b7a760046545fa9afc3feca68d12dc087fbe625c",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "CHANGES",
      "lib/http.c",
      "lib/ssluse.c",
      "RELEASE-NOTES",
      "lib/ftp.c",
      "lib/transfer.c"
    ],
    "message": "Cleaned up hostname/name/gname and path/ppath confusion. Removed the fixed-\nlength limit of the hostname part of the URL.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1082447604
  },
  {
    "id": "4f84e6d9e249297fa659818d5e28934fc98c5936",
    "files": [
      "lib/urldata.h",
      "RELEASE-NOTES",
      "lib/ftp.c",
      "tests/data/test142",
      "CHANGES"
    ],
    "message": "removed the fixed dir depth limit in the FTP code",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1082015559
  },
  {
    "id": "aba6c2b89d96f661c2b4d77fc925b47921008e3d",
    "files": [
      "tests/data/Makefile.am",
      "tests/data/test511",
      "tests/libtest/Makefile.am",
      "tests/libtest/lib511.c"
    ],
    "message": "Added test case 511 in an attempt to repeat bug report #934666 \"storage leak\nin ftp.c\", but it shows no leaking.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1081924237
  },
  {
    "id": "9044fcbb5f4dbf2f873409f9a3fb725e6284b5d1",
    "files": [
      "lib/hostip.c"
    ],
    "message": "Gisle Vanem's fix for bug item #927979 reported by Nathan O'Sullivan.\n\nGood enough?",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1081263074
  },
  {
    "id": "ee1595dcd54c4e8c56045ec0b3762d6ec45fc178",
    "files": [
      "lib/hostip.c"
    ],
    "message": "Roy Shan fixed a case that prevented ares name resolve timeouts to occur.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080766201
  },
  {
    "id": "1745ecd8acab4b6a412f88ab261aacf67d70c3b4",
    "files": [
      "lib/http_digest.c"
    ],
    "message": "* Fixed a memory leak when doing repeated re-negotiations.\n* Made the incoming line parser more forgiving to allow \"name=contents\" pairs\nwhere the contents isn't within double quotes.\n* Made the digest code return CURLDIGEST_BADALGO if a requested algorithm\nisn't supported by the code.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080734107
  },
  {
    "id": "dd2add82ee5717446f365239eead0974e171d506",
    "files": [
      "lib/url.c",
      "tests/data/test63"
    ],
    "message": "Fixed how the user name is extracted from http_proxy environment variable\nwhen set.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080729966
  },
  {
    "id": "40d9855df2e547e182d4c4798c7b75967b9643eb",
    "files": [
      "lib/connect.c",
      "acinclude.m4"
    ],
    "message": "Andr\ufffds Garc\ufffda fixed a warning in the ioctlsocket() usage.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080729293
  },
  {
    "id": "8230d9bff85dac401e39e575fca9acb31676ce19",
    "files": [
      "ares/ares_strerror.c"
    ],
    "message": "Dominick Meglio fixed a missing comma",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080713440
  },
  {
    "id": "ed22afe5fbf4b68a7c7e82fb3b3f75d533963d52",
    "files": [
      "lib/connect.c"
    ],
    "message": "Tor fixed a left-over from the ip argument to setnodelay",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080386150
  },
  {
    "id": "d44f3f84f8c8eb5951d47aeb2ea8caf120a5ec29",
    "files": [
      "lib/progress.c"
    ],
    "message": "Fixed the time fields no never get wider than 8 letters. They can now switch\nto a \"days + hours\" or even \"just days\" display if the time value is very\nlarge. I also switched several calculations over to fixed-point instead of the\nprevious doubles.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1080042214
  },
  {
    "id": "40e892bb36010778d1d7a30f399dd900fab01702",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "Jeff Lawson fixed the SSL connection to deal with received signals during the\nconnect.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1078908181
  },
  {
    "id": "bd42a2acb17397eb8f0b382e25db054d328b0990",
    "files": [
      "ares/ahost.c"
    ],
    "message": "Gisle Vanem fixed the bad argc check",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1078825410
  },
  {
    "id": "71d81f1f7532f80ef57e114e45e93c72aefe9850",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Now uses CURL_FORMAT_OFF_T instead of %Od\nFixed the check for bad resumes. Made test case 99 work and proved a bug\nin test case ... eh, was it 32?",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1078158454
  },
  {
    "id": "485122035c2139dc6da23e77bb2ac021d8e998ee",
    "files": [
      "lib/mprintf.c"
    ],
    "message": "fixed the test code to work",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1078158137
  },
  {
    "id": "7d2e8728280f797bced37434d54e85ba95f02505",
    "files": [
      "lib/url.c"
    ],
    "message": "Only consider the fresh-connection option on the first connection made, not\non followed redirections etc. This should fix the bug #905365, which caused\nNTLM to fail with the option set.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1078134222
  },
  {
    "id": "6c78b4b7c0673be0ca92d728c6fab6c260a78599",
    "files": [
      "lib/formdata.c"
    ],
    "message": "fixed some more size_t/int/long warnings and removed a few CMC comments",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1077888074
  },
  {
    "id": "4ba7ef34d1fc269b142627197c3eea34db3ffa6b",
    "files": [
      "ares/ares_init.c"
    ],
    "message": "fixed a \"comparison between signed and unsigned\" warning",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1077833960
  },
  {
    "id": "0d3674129fad3ce4494f22be78f62d0a8041fe59",
    "files": [
      "ares/ares_init.c"
    ],
    "message": "Dan Fandrich fixed a minor flaw in Dominick's fix!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1077691062
  },
  {
    "id": "f128fae705d269dd4e24405fba44d77fb4aa8c20",
    "files": [
      "lib/krb4.c"
    ],
    "message": "fixed some warnings in the (both new and old) base64 usage",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1077552579
  },
  {
    "id": "7729c63be04d6612126a991dd25507716babae0e",
    "files": [
      "tests/libtest/lib509.c"
    ],
    "message": "fixed the no-ssl version to return int as well",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1077205146
  },
  {
    "id": "e4916145ef9743b0f417fbec86888f29b5622276",
    "files": [
      "lib/url.c"
    ],
    "message": "Jeff Lawson pointed out that we need to check for a '5' in the version field\nto properly work with SOCKS5 proxies. I also included some ascii art describing\nthe SOCKS5 response, as RFC1928 describes. Jeff provided details in bug\nreport #741841 and here: http://curl.haxx.se/mail/lib-2004-02/0181.html",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1076916810
  },
  {
    "id": "011929cf4d825c327769c647bf9b7ad0530b1cb9",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Tor Arntsen's patch for working around a notorious bug in the AIX5\ngetaddrinfo() implementation.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1076313156
  },
  {
    "id": "9c95ebcbe70bbf122b833cfe7750f5f019c08c55",
    "files": [
      "ares/adig.c"
    ],
    "message": "fixed \"comparison between signed and unsigned\" complaints",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1075890263
  },
  {
    "id": "e1d541086c457eb22ac130fcbaad26014e069d23",
    "files": [
      "lib/hostip.c"
    ],
    "message": "Dirk Manske fixed the ares usage even more. We could get a timeout from ares\nas well, and when failing and not getting a timeout we now include the\nerror message ares can provide us with.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1075737230
  },
  {
    "id": "7f0ec867694c0474b755caae04fa18c7c619dbfb",
    "files": [
      "src/getpass.c"
    ],
    "message": "fixed the win32 function to use the correct proto, as pointed out by Gisle\nVanem",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1075706670
  },
  {
    "id": "663d2080d14715602674f0afc2bd85b1438152d4",
    "files": [
      "ares/ares_process.c",
      "ares/CHANGES"
    ],
    "message": "Dirk Manske fixed a flaw in the setting of the socket to non-blocking",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1075375416
  },
  {
    "id": "fac1c13895b62464abd7c4e875d46b12ec7873c0",
    "files": [
      "lib/progress.c"
    ],
    "message": "fixed the progress meter display for files >32 bit, Gisle Vanem reported",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1074844932
  },
  {
    "id": "846d203d3155eb98ebe4133a215b3b3aa2ec0b1d",
    "files": [
      "src/main.c"
    ],
    "message": "spell-fixed a comment\nnow errors out if built with off_t > 32 bits but without strtoll()",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1074150563
  },
  {
    "id": "2d567af06950dc1654726d5d52518d81ae8a7f1d",
    "files": [
      "lib/hostip.c"
    ],
    "message": "fixed the Curl_resolv()'s return code when the looked up host was already\nin the cache (Vincent Bronner)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1074071154
  },
  {
    "id": "50e7545118dca4bb456d7c8120ac8f2f4c5bf6f5",
    "files": [
      "lib/url.c",
      "CHANGES"
    ],
    "message": "Giuseppe Attardi fixed a really tricky bug",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1071499717
  },
  {
    "id": "8f0abd31c5f3e21c15bfac529f362fc9d7c8e279",
    "files": [
      "lib/dict.c"
    ],
    "message": "Use Curl_transfer() properly. Fixes the bug Gisle Vanem found!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1071070079
  },
  {
    "id": "0ab2dff69ce7da9964bd8060d8f8d71799048d74",
    "files": [
      "lib/krb4.c"
    ],
    "message": "based on Gisle's comment, I removed the use of syslog() and fixed the\nnetdb.h include, then I re-indented some code to use curl-style",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1070551309
  },
  {
    "id": "06c38330ba463a3a4bb343547dd71addb3073fa5",
    "files": [
      "CHANGES",
      "lib/hostip.c"
    ],
    "message": "Steve Green fixed Curl_resolv()",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1070438151
  },
  {
    "id": "d1d417664ec5983265eabcab128628632d5a4a43",
    "files": [
      "lib/url.c"
    ],
    "message": "Gisle Vanem fixed the check-order for FTPS and FTP.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1070346341
  },
  {
    "id": "1d977b78481d1d430cb05c8297ee412e62f31c8e",
    "files": [
      "lib/http.c"
    ],
    "message": "When basic is the only auth wanted (which it is by default), the auth phase\nis always considered done immediately as Basic needs to extra passes.\n\nThis fix corrects bug report #848371.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1069751115
  },
  {
    "id": "af9dc9f12808e92f089b2dff80469ce08c0a1274",
    "files": [
      "lib/url.c"
    ],
    "message": "Gaz Iqbal fixed a range string memory leak!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1069657802
  },
  {
    "id": "f481b3e1dc2428783cbafa3839e56d26444c24d4",
    "files": [
      "lib/http.c"
    ],
    "message": "bail out properly on a 407 when we can't authenticate basic, bug report\n#845247",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1069322022
  },
  {
    "id": "1e251a64f3ba31ef19c979ffac5601adae391783",
    "files": [
      "lib/formdata.c"
    ],
    "message": "Default Content-Type for formparts has changed to \"application/octet-stream\".\nThis seems more appropriate, and I believe mozilla and the likes do this.\n\n.html files now get text/html as Content-Type.\n\nPointed out in bug report #839806.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1068709398
  },
  {
    "id": "17a834bc63b2781aefcef1fc2213877053ba1873",
    "files": [
      "lib/ftp.c"
    ],
    "message": "After S\ufffdbastien Willemijns' bug report, we now check the separators properly\nin the 229-reply servers respond on a EPSV command and bail out better if\nthe reply string is not valid RFC2428-compliant.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1068451973
  },
  {
    "id": "c7f54764163fe9e3ba042b179e6398ccdc8e34ad",
    "files": [
      "lib/telnet.c"
    ],
    "message": "fixed the bug my previous change introduced",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1066542169
  },
  {
    "id": "80a06403e403be7b1ba80161fc3b65ab0c70d013",
    "files": [
      "lib/transfer.c"
    ],
    "message": "fixed gcc -Wshadow warnings",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1066508933
  },
  {
    "id": "65dab79ca58cd95dc8741399a6ed7b8c21c606d3",
    "files": [
      "lib/url.c",
      "lib/urldata.h",
      "lib/ftp.c",
      "lib/connect.h"
    ],
    "message": "gcc -Wshadow complaints fixed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1066508073
  },
  {
    "id": "d1a3c9944ee3215d78d644c47768e205fd043990",
    "files": [
      "lib/url.c"
    ],
    "message": "Lachlan O'Dea fixed a resume problem: \"If I set CURLOPT_RESUME_FROM, perform\nan HTTP download, then reset CURLOPT_RESUME_FROM to 0, the next download still\nhas a Range header with a garbage value.\" bug report #820502",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1065729887
  },
  {
    "id": "e4adbf401761f62ba71bb6884f7c4de17b6a2a7f",
    "files": [
      "lib/inet_pton.c"
    ],
    "message": "Dominick Meglio fixed this to build fine on MSVC",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1065687541
  },
  {
    "id": "ff5b6ff5288d29dee7a8e8d24d0948451350cb50",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "fixed to build fine without ssl",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1065618410
  },
  {
    "id": "45ef092cc265dacf080a9ae6d24fa0886f4eaea8",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Jon Turner mentioned this bug fix to correct how libcurl deals with paths\nafter a failed transfer.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1065281102
  },
  {
    "id": "58b1437cae71335fe78e850f0f2bacfcfb268333",
    "files": [
      "lib/http_ntlm.h",
      "lib/http_ntlm.c",
      "lib/http.c"
    ],
    "message": "When we issue a HTTP request, first make sure if the authentication phase\nis over or not, as if it isn't we shall not begin any PUT or POST operation.\n\nThis cures bug report #805853, and test case 88 verifies it!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1063660282
  },
  {
    "id": "5629eeaec2580ff63f7539ee0045e18ec3e44ddc",
    "files": [
      "lib/hostip.c"
    ],
    "message": "The error buffer was not getting filled when Curl_wait_for_resolv() fails.\nJeff Pohlmeyer fixed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1062404468
  },
  {
    "id": "4459d3b4349788c61fc25a3bfdce851f3c0db505",
    "files": [
      "lib/ftp.c"
    ],
    "message": "have cwd_and_mkd prefixed with ftp_ to make it appear as a ftp-only\nfunction",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1061555718
  },
  {
    "id": "a3c12482140ebb7bc9375afc60733219ad935f8d",
    "files": [
      "lib/http.c"
    ],
    "message": "Bugfix from Serge Semashko that fixes a bug introduced when we applied his\nNTLM patch. Test case 84 and 85 verify this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060676416
  },
  {
    "id": "acfa131c8cc94930064c23561892a83295aaffd3",
    "files": [
      "lib/url.c"
    ],
    "message": "memory leak fixed when re-using connections with proxy user+passwd",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060604730
  },
  {
    "id": "168703b7bf51743c3d8990fef9d2330194cfd459",
    "files": [
      "lib/cookie.c"
    ],
    "message": "Added some infof() calls, that require the data pointer so now several\ncookie functions need that.\n\nI also fixed the cookie loader to properly load and deal with cookies without\ncontents (or rather with a blank content).",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060595711
  },
  {
    "id": "8dd069604ce80652935215f0e0986cf487e4ac6d",
    "files": [
      "lib/share.c"
    ],
    "message": "Dirk Manske's bugfix for the share stuff",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060583402
  },
  {
    "id": "12e78a082eeb116c528572e6de51b7c4a0eb1bf1",
    "files": [
      "tests/server/getpart.c"
    ],
    "message": "Gisle Vanem fixed a single-byte overflow",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060363101
  },
  {
    "id": "bbe23945e438ec74002df18ffd01b182c98175c5",
    "files": [
      "lib/mprintf.c"
    ],
    "message": "fix the treatment of the variable width specifier '*', which caused a bug\nin the urlglobbing just now, fixed in the debian bug tracker as Bug#203827",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060209167
  },
  {
    "id": "1e7e53c87e2eb635fda9b50f8642f5d2b42a35df",
    "files": [
      "lib/ftp.c"
    ],
    "message": "clean up the dir tree hierarchy in *_done() to make persistant connection\nFTP use the correct directories!\n\nReported in bug report #783116",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1060088650
  },
  {
    "id": "f72ba7f79d3eb261f922d24072409ee300402059",
    "files": [
      "lib/http_chunks.c"
    ],
    "message": "Mark Fletcher provided an excellent bug report that identified a problem\n with FOLLOWLOCATION and chunked transfer-encoding, as libcurl would not\n properly ignore the body contents of 3XX response that included the\n Location: header.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1059949094
  },
  {
    "id": "5e133e2dff3f466c194d89672219bcfbee205072",
    "files": [
      "lib/ftp.c"
    ],
    "message": "David Gardner pointed out in bug report 770755 that using the FTP command CWD\nwith a blank argument is a bad idea. Now skip blanks.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1058660291
  },
  {
    "id": "5ef6520d4ed043e40876b309feb5a83808f0dc28",
    "files": [
      "tests/server/sws.c"
    ],
    "message": "fixed the CONNECT thing again",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1058658855
  },
  {
    "id": "2c1925161eaa3a4d20e3c870a558911d96cedb5f",
    "files": [
      "tests/server/sws.c"
    ],
    "message": "If the data contents contains the word 'swsclose', then this server will\ndisconnect the client after the response have been sent. This also happens\nif the respons is zero byte long.\n\nIn all other cases (unless an error happens), it will now maintain the\nconnection to allow proper persistant connection testing. This was required\nfor the NTLM testing to work so I finally had to fix this. Of course most of\nthe existing HTTP tests will be adjusted to work with this new rule of test\nfile syntax for HTTP tests.\n\nAlso fixed the log function to deal with varargs for better logging.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1058658262
  },
  {
    "id": "79749f8eb4a81c0a9743eaa71dfa03cc525da674",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Fix to the endless loop of bad Basic authentication as reported in Cris\nBailiff's bug report 768275.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1058310362
  },
  {
    "id": "27018882ec8de09b7afc0358f0424fd10af8a90f",
    "files": [
      "lib/http_ntlm.c"
    ],
    "message": "Cris Bailiff's bugfix",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1055490998
  },
  {
    "id": "e7fb72a7320211fb7669194eacddce401348c692",
    "files": [
      "src/main.c",
      "src/urlglob.h",
      "src/urlglob.c"
    ],
    "message": "Pass the error stream pointer to the URL globber, so that it can report\nerrors correctly to the user, if need be.\n\nAlso fixed so that a missing ] in the globbing process no longer leads\nto core dump.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1055238142
  },
  {
    "id": "d288222e80f1d6d250fe8b6d40f3b43c8a715da6",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "work-around SSL implementation flaws better, pointed out in bug report\n#745122.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1054560423
  },
  {
    "id": "b2ef79ef3d47b3768e16103b44c9a129196ed280",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Rudy Koento's problem fixed, test case 66 verifies this.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1053683277
  },
  {
    "id": "9f69deec7d071fbad247574b2fec9263bc020954",
    "files": [
      "lib/url.c"
    ],
    "message": "Added CURLOPT_HTTPDIGEST support\nSOCKS5 fix as suggested by Jis in bugreport #741841.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1053643126
  },
  {
    "id": "465de793e8a6c7a6f546f1de84aaf5476c5e89e6",
    "files": [
      "lib/cookie.c"
    ],
    "message": "Skip any preceeding dots from the domain name of cookies when we keep them\nin memory, only add it when we save the cookie. This makes all tailmatching\nand domain string matching internally a lot easier.\n\nThis was also the reason for a remaining bug I introduced in my overhaul.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1053037699
  },
  {
    "id": "efd836d971c63b481545594ab31da7eadaff66f2",
    "files": [
      "lib/cookie.c",
      "lib/cookie.h"
    ],
    "message": "Many cookie fixes:\n  o Save domains in jars like Mozilla does. It means all domains set in\n    Set-Cookie: headers are dot-prefixed.\n  o Save and use the 'tailmatch' field in the Mozilla/Netscape cookie jars (the\n    second column).\n  o Reject cookies using illegal domains in the Set-Cookie: line. Concerns\n    both domains with too few dots or domains that are outside the currently\n    operating server host's domain.\n  o Set the path part by default to the one used in the request, if none was\n    set in the Set-Cookie line.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1051722223
  },
  {
    "id": "c95814c04d6a0436e5c4c88d2e1d57c7e0c91060",
    "files": [
      "lib/content_encoding.c"
    ],
    "message": "Dan Fandrich's gzip bugfix",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1051050722
  },
  {
    "id": "fece361a55aabd8eab617ee3a3ab4cd549ff3fcf",
    "files": [
      "lib/content_encoding.c"
    ],
    "message": "Nic fixed so that Curl_client_write() must not be called with 0 lenth data.\n\nI edited somewhat and removed trailing whitespaces.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1050078678
  },
  {
    "id": "7b51b2f12834f09763d4e53cd1737d450d46cd9c",
    "files": [
      "lib/http_chunks.c"
    ],
    "message": "Nic Hines fixed this bug when deflate or gzip contents were downloaded using\nchunked encoding.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1050078223
  },
  {
    "id": "1a2db0dfb14d755071b4f321b3401a7091b0a467",
    "files": [
      "lib/transfer.c"
    ],
    "message": "James Bursa fixed a flaw in the content-type extracting code that could\nmiss the first letter",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1049813318
  },
  {
    "id": "4b3f800c030948525b72422413980d4538126e74",
    "files": [
      "lib/url.c"
    ],
    "message": "Frankie Fong filed bug report #708708 which identified a problem with\nConnectionExists() when first doing a proxy connecto to a HTTPS site and then\nswitching over to a HTTP connection to the same host.\n\nThis fix corrects the problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1049082121
  },
  {
    "id": "82bc76b2439ce22c3e8e0bdb79b3f15ae0e04b35",
    "files": [
      "src/main.c"
    ],
    "message": "Dan Shearer's fix from bug report #618892, which makes 'curl -O' output\nan error message about a missing URL.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1048935810
  },
  {
    "id": "56dd2da96217da1b2ab7dbef5d77e137ede06d7c",
    "files": [
      "lib/url.c"
    ],
    "message": "Hopefully this change addresses these two bug reports: 707003 and 706624.\n\nWe need to make sure that when we init a 'connectdata' struct and then\nafterwards check for and re-use another one, we must be careful so that the\nnewly set values are transmitted and used in the surviving connectdata struct.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1048234188
  },
  {
    "id": "c2d8025a0ae50200592ef87a386b742c07352027",
    "files": [
      "lib/sendf.c"
    ],
    "message": "Christophe Demory fixed the check to work better for non-blocking on HP-UX\nsystems. Bug report #701749.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1047409661
  },
  {
    "id": "3242ea5f66d7e5714538a11832009cc23762b174",
    "files": [
      "lib/http.c"
    ],
    "message": "Init postdata properly before issuing a request, so that there isn't any\nlingering POST-stuff that confuses GET requests. Juan F. Codagnone reported\nthis problem in bug report #653859.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1046627022
  },
  {
    "id": "3ddc7b939028cbb391f093bd14a49030ada5182e",
    "files": [
      "lib/base64.c"
    ],
    "message": "Christopher R. Palmer fixed Curl_base64_encode() to deal with zeroes in the\ndata to encode.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1045161010
  },
  {
    "id": "21c16f923c0618cf35fdc71921b3544f8ea04eca",
    "files": [
      "src/main.c",
      "docs/curl.1"
    ],
    "message": "Julian Noble pointed out that capath is indeed working fine on Windows\nthese days since the c_rehash tool is written (fixed) to do the proper\naction even on file systems that don't support symlinks.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1044308212
  },
  {
    "id": "169b2eeb94f7643229ac08fe305876530d40a680",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Fixes bug #669059. We now extract the Content-Type better and more accurate.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1043903042
  },
  {
    "id": "89934239d7c7336ec60305766666ca276176536d",
    "files": [
      "lib/ftp.c"
    ],
    "message": "reset conn->size to -1 on the ftp-do function to make it not go on to\nftp_done() with the previous transfer's value, as Dave Halbakken found out.\nHe also verified this fixed corrected the problem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1043837679
  },
  {
    "id": "2b054e53099fdd44f67eb84dc44b546f03a89528",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Bertrand Demiddelaer found and fixed this memory leak.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1043406839
  },
  {
    "id": "6f35ed51dc63ddeeda3a32794b391ba841fe5caa",
    "files": [
      "lib/connect.c"
    ],
    "message": "This fixed yet another connect problem with the multi interface and ipv4\nstack. Kjetil Jacobsen reported and verified the fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1042123971
  },
  {
    "id": "6a7e53a7c7fa468d25adc5d6bda9b6bf6c1abc8c",
    "files": [
      "lib/escape.c"
    ],
    "message": "fixed a very, very rare and very, very little memory leak",
    "committer": {
      "email": "jpbarrette@gmail.com",
      "name": "Jean-Philippe Barette-LaPierre"
    },
    "date": 1041992867
  },
  {
    "id": "0f34521612456d844959b1ef0ad5555d1821b67d",
    "files": [
      "src/main.c"
    ],
    "message": "fixed the create_dir_hierarchy() to not use uninited memory, as noticed by\nMatthew Blain.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1041932157
  },
  {
    "id": "cfb32da198dd3917082d40de6d0ad88b431002fb",
    "files": [
      "lib/easy.c"
    ],
    "message": "fix bug (?) :-)\n\npreviously, if you called curl_easy_perform and then set the global dns\ncache, the global cache wouldn't be used.  I don't see this really happening\nin practice, but this code allows you to do it.",
    "committer": {
      "email": "sterling@bumblebury.com",
      "name": "Sterling Hughes"
    },
    "date": 1041833835
  },
  {
    "id": "9b4f92130f74a4efe08c119d7dd41f10a011eb1c",
    "files": [
      "lib/sendf.c"
    ],
    "message": "return -1 even if SSL_pending() doesn't return non-zero, as we don't really\ncare how many bytes that is readable NOW. Philippe Raoult reported the\nbug in 7.10.3-pre3.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1041179251
  },
  {
    "id": "1698015e3c9c28e9b7b9f4a68b2d628dc525fcf1",
    "files": [
      "lib/base64.c"
    ],
    "message": "Curl_base64_decode() fixed by Matthew B",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1040313771
  },
  {
    "id": "39dc14c0025fe942efcd4a7b903443fa0c9ae4a0",
    "files": [
      "lib/sendf.c"
    ],
    "message": "Fixed the usage of SSL_read() to properly return -1 if the EWOULDBLOCK\nsituation occurs, which it previously didn't!\n\nThis was reptoed by Evan Jordan in bug report #653022.\n\nAlso, if ERROR_SYSCALL is returned from SSL_write(), include the errno number\nin the error string for easier error detection.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1040312715
  },
  {
    "id": "747f87f61e2278381cb9da3b9b19b9ca39a0582b",
    "files": [
      "lib/connect.c"
    ],
    "message": "Removed weird special multi interface condition that caused bug report\n#651464.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1040119500
  },
  {
    "id": "57f0e3292d7ae14e623c5d212ba7e5ad96f106e5",
    "files": [
      "tests/libtest/lib503.c"
    ],
    "message": "used this to verify bug report 651460",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1039796478
  },
  {
    "id": "3aea0d3d68a5b508cf76b0622ba208ca7c9fe42c",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "Evan Jordan's fix for a memory leak. Bug report 650989.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1039788529
  },
  {
    "id": "e5e2fb82744daa7f9db77bd6a7168af30ff74330",
    "files": [
      "lib/http.c"
    ],
    "message": "Dan Becker fixed a minor memory leak on persistent connnections using\nFOLLOWLOCATION and CURLOPT_USERPWD.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1038331935
  },
  {
    "id": "7df5677b4677eabbb8d1477171f3c9bf0028f08d",
    "files": [
      "lib/easy.c",
      "lib/hostip.h",
      "lib/hostip.c"
    ],
    "message": "fixed Curl_freeaddrinfo() to only free addrinfo, and added Curl_freednsinfo()\nfor freeing single dns cache entries",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1038303714
  },
  {
    "id": "ce011b8a2d6fb3fd44baaff404750f6f57059edb",
    "files": [
      "lib/url.c"
    ],
    "message": "bug fix for the problem Juan Ignacio Herv\ufffds discovered today",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1037984380
  },
  {
    "id": "ef749fa9ce93830f9835c9951a223dea4f5782ff",
    "files": [
      "lib/url.c"
    ],
    "message": "Bug report #634625 identified how curl returned timeout immediately when\nCURLOPT_CONNECTTIMEOUT was used and provided a fix.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1036658710
  },
  {
    "id": "0fa512f26d2a4ad02c90e89a5f1f77c9e36dc98d",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Nikita Schmidt's fix to debian bug report #165382. This is verified with\nthe new test case 55.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1035202022
  },
  {
    "id": "701509d32237da51bd5b4e6c5bcbd145541259a1",
    "files": [
      "lib/url.c",
      "lib/http.c"
    ],
    "message": "Jeff Lawson fixed a few problems with connection re-use that remained when\nyou set CURLOPT_PROXY to \"\".",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1034236849
  },
  {
    "id": "30b7a9f17290d79cd5c51be287e6cbd4fd4eab90",
    "files": [
      "lib/connect.c"
    ],
    "message": "fixed a Curl_connecthost() bug, we should default to set connected to false",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1029153717
  },
  {
    "id": "7313501e30a58bcda30df802ec86c010685ee715",
    "files": [
      "lib/transfer.c"
    ],
    "message": "fixed the Curl_cookie_add() invoke to not assume a space after the colon",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1027981435
  },
  {
    "id": "2443e1f38c38c4fe2611e330990dfe6296da19aa",
    "files": [
      "lib/timeval.c"
    ],
    "message": "T. Bharath fixed his mm lib timer resolution fix",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1025074038
  },
  {
    "id": "20f85b94dff46f431e366c28dbdc364b26e64141",
    "files": [
      "lib/ldap.c"
    ],
    "message": "kris@freebsd.org fixed a bad format string",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023867911
  },
  {
    "id": "17b784381ec4b0739070e6ce7237ddb58d8a5381",
    "files": [
      "lib/ftp.c"
    ],
    "message": "kris@freebsd.org fixed a few bad format strings",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023867862
  },
  {
    "id": "fc37ef9e4b9cd4a385d9d6104ba144da334f67b6",
    "files": [
      "lib/http.c"
    ],
    "message": "make sure data->set.postfields is non-NULL before doing strlen() on the\npointer. Bugs item #566835.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023780021
  },
  {
    "id": "b47b053e54e4e6cfa49c06435b76190ebd00d860",
    "files": [
      "lib/multi.c"
    ],
    "message": "Gustaf Hui fixed curl_multi_remove_handle() to prevent a potential crash",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023312560
  },
  {
    "id": "0db227f55e715f2dc6b8fb5668af10a21dd5a38d",
    "files": [
      "lib/hostip.c"
    ],
    "message": "hostcache_fixoffset() is now corrected to work on 64bit architectures\nBug report #564585.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023284493
  },
  {
    "id": "9aec0fc7deaeb3c80ac61d6aeaf2dcc1d8e1e266",
    "files": [
      "lib/timeval.c"
    ],
    "message": "T. Bharath fixed higher resolution time for windows builds",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023108392
  },
  {
    "id": "bce5e0d82cfde0885e83ddfe1956dbb97ab2b0f3",
    "files": [
      "lib/progress.c"
    ],
    "message": "T. Bharath fixed the TIMER_REDIRECT.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1023108364
  },
  {
    "id": "ec585e8907ac8df8c1545f1cd7e2567edf284d08",
    "files": [
      "lib/url.c"
    ],
    "message": "When re-using a connection, make sure that we use the current host name as\nwe might actually re-use a connection to a different host, when using proxies!\n\nThis was what bug report #558888 was all about.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1022019896
  },
  {
    "id": "baa77ec13bde1625213aa41fbc98001db08df5b7",
    "files": [
      "src/writeout.c"
    ],
    "message": "FreeBSD needs sys/types.h before we include sys/select.h that was included\nmainly for AIX in the first place...! As reported in bug report #556869",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1021622233
  },
  {
    "id": "9263652c6d91569ed2856b84bbd5f57c2565162a",
    "files": [
      "lib/hostip.c"
    ],
    "message": "Fixes bug report #556930 - we need to make sure that the data is all right\nafter we've realloc() the packed hostent struct.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1021621768
  },
  {
    "id": "0b898b5a8a1998a529bcab8808540a741dcc7ef7",
    "files": [
      "lib/multi.c"
    ],
    "message": "fixed return code",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1020429637
  },
  {
    "id": "c64fca1b0cd360cca39b960864ed6f591dbc16ec",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fixed the FTP response reader to deal with timeouts better. Previously it\nwould reset the timeout for each incoming data, which would make veeery\nslow responses be allowed to take even more time since the timeout would only\nbe reached if the time between two received data chunks was longer than the\nset timeout value...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1019913846
  },
  {
    "id": "471f1d694f1495941e338410374f64a44c5a4175",
    "files": [
      "lib/url.c"
    ],
    "message": "fixes bug report #547484, no_proxy doesn't properly strip off port numbers\nfrom the host names before comparing",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1019568868
  },
  {
    "id": "ef436bdbe8a28626e11462d77b66f6b4bb36d737",
    "files": [
      "lib/http.c"
    ],
    "message": "renamed the TIMECOND defines to be CURL_ prefixed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1019519595
  },
  {
    "id": "29e873b12d9723a7becb6fb2a06f7f346d3e3157",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Jonatan Lander fixed the \"Disables POST, goes with GET\" output to be more\nconnected with reality! ;-)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1018878426
  },
  {
    "id": "5528c1eaa55551d0a668318674f4f485b0102a10",
    "files": [
      "lib/url.c"
    ],
    "message": "corrected the verbose output for connects and fixed the connect time stamp\nbetter for FTP (any protocol with protocol-specific connect actions)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1018599518
  },
  {
    "id": "d560207ea183a051b86c9e01b3ec4c6490cde4e7",
    "files": [
      "lib/ftp.c"
    ],
    "message": "This corrects VERBOSE PASV ftp transfers on AIX (and OSF1/Tru64)\nGerhard Herre reported this in bug report #536238",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1017900476
  },
  {
    "id": "28939dd45cf0f21c039af961120ee25f2bd391f9",
    "files": [
      "docs/examples/multi-app.c",
      "docs/examples/multi-double.c",
      "docs/examples/multi-single.c"
    ],
    "message": "fixed include and added header",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1016546447
  },
  {
    "id": "5c691ed8351eea800be412b21ad03aadfb42bacc",
    "files": [
      "lib/ftp.c"
    ],
    "message": "verbose PASV transfers passed a bad buffer size to the name resolver functions\nand it cause cause a crash.\n\nAlbert Choy found and fixed it.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1016297987
  },
  {
    "id": "fb29529a52cd4d889173e30d50ed08cc05dee198",
    "files": [
      "lib/hostip.c"
    ],
    "message": "Jun-ichiro itojun Hagino <itojun@itojun.org>:\n\nNow first check if IPv6 is supported, then use PF_UNSPEC. If not, use PF_INET.\nIt'll solve both the \"slow name lookup\" problem on IPv4 and still work fine on\nIPv6 hosts.\n\nBug report #530204 has more details:\nhttp://sourceforge.net/tracker/?func=detail&atid=100976&aid=530204&group_id=976",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1016186070
  },
  {
    "id": "017be8a882113c5414ac283266491ca8035c0092",
    "files": [
      "lib/url.c"
    ],
    "message": "Jean-Philippe Barrette-LaPierre fixed the CURLOPT_PASSWDFUNCTION to make\nNULL set back the internal default function",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1015600002
  },
  {
    "id": "b86e543a13e5db71597e5d9adfbe01d01d3abf69",
    "files": [
      "src/main.c"
    ],
    "message": "closes bug report #527032, --progress-bar works again and it adds a newline\nafter the transfer is done properly",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1015589157
  },
  {
    "id": "3612c3774ea88214c0821b4fe30899b3e65df3d3",
    "files": [
      "lib/cookie.c"
    ],
    "message": "made Max-Age work as defined in the RFC.\nmy brain damaged fix to not parse spaces as part of the value is now fixed\nto instead strip off trailing spaces from values.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1014795484
  },
  {
    "id": "a333bddeeb6ce46f0a7d218d78fa700c881f2833",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Andr\ufffds Garc\ufffda solved bug report #515228 by making sure the progress meter\nis updated even if everything is read in one single pass, as the windows\nfunctions apparantly does more often than other systems.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1014212314
  },
  {
    "id": "c795123cd575be3d593900984146efda0302e78e",
    "files": [
      "lib/mprintf.c"
    ],
    "message": "fixed a long long mistake",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1014075165
  },
  {
    "id": "e452f467d46d06cb6eee7d314ee5d78efd4e8e9c",
    "files": [
      "lib/hash.c",
      "lib/llist.c"
    ],
    "message": "Philip Gladstone's 64-bit issues corrected.\nReminder for the future: when we're using malloc() we MUST include <stdlib.h>\nas otherwise 64bit archs go bananas.\n\nBug report #517687",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1013957735
  },
  {
    "id": "e9bfef0eb1ecf8adaa7f51873f42a7d4caae7640",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Brent Beardsley found the content-type bug!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1012978933
  },
  {
    "id": "6212e6990aead04919bb69eef3a724ff5df81fde",
    "files": [
      "lib/hostip.c"
    ],
    "message": "someone should have me punished, but this bug made curl bug seriously\non IPv4-linux machines",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1012245798
  },
  {
    "id": "4146ce826768fe547d83eb1d6a9167db49983bcc",
    "files": [
      "lib/transfer.c"
    ],
    "message": "bug report #508235 identified a non-working Location: following, and this\nlittle fix seems to correct it. another case where we just returned and\ndidn't shut off the reading. This bug is introduced in 7.9.3 due to the\nnew internal \"order\".",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1011947749
  },
  {
    "id": "2db894807b546087b4e03af5afa0cb07aae6127c",
    "files": [
      "lib/transfer.c"
    ],
    "message": "Andr\ufffds Garc\ufffda found out that we didn't properly stop reading from a connection\nafter the headers on a HEAD request. This bug has been added in 7.9.3 and was\nmnot present earlier.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1011770132
  },
  {
    "id": "5c6eddcadd65432b8739117a161cb8062be997d9",
    "files": [
      "lib/connect.c"
    ],
    "message": "fixed time-out returned without error text set",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1011219961
  },
  {
    "id": "87037136efd4d5eeefb7456c2ad14740a956e47d",
    "files": [
      "lib/cookie.c"
    ],
    "message": "As identified in bug report #495290, the last \"name=value\" pair in a\nSet-Cookie: line was ignored if they didn't end with a trailing\nsemicolon. This is indeed wrong syntax, but there are high-profile web sites\nout there sending cookies like that so we must make a best-effort to parse\nthem.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1010444736
  },
  {
    "id": "781f52a287d23c6feeaf518a6ab053933f75b7a0",
    "files": [
      "lib/krb4.c"
    ],
    "message": "fixed an inet_ntoa() occurance to use inet_ntoa_r() if it is available.\nI also replaced all printf() calls with calls to Curl_failf()",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1010137964
  },
  {
    "id": "07c67138c9d4ee437b02d1e5d50f64327f362642",
    "files": [
      "src/main.c"
    ],
    "message": "fixed the option parser to not loop when a long option is specified",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1007112366
  },
  {
    "id": "1c8da21083ade5c6f29b928e408d20a2e407b206",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Eric fixed a wild write",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1006422034
  },
  {
    "id": "0ffec712e1b6479ff236d387c3d6b17d66f61881",
    "files": [
      "lib/formdata.c"
    ],
    "message": "Marcus Webster reported and fixed this read-one-byte-too-many problem...",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1005232018
  },
  {
    "id": "2e32d415c0e7df143b93d6c112ffb88103f51058",
    "files": [
      "lib/url.c",
      "lib/setup.h",
      "lib/transfer.c"
    ],
    "message": "myalarm() is history, we now use HAVE_ALARM and we now do our very best to\n1 - restore the previous sigaction struct as soon as we are about to shut\noff our timeout\n2 - restore the previous alarm() timeout, in case an application or similar\nhad it running before we \"borrowed\" it for a while.\n\nNo, this does not fix the multi-thread problem you get with alarm(). This\npatch should correct bug report #478780:\n//sourceforge.net/tracker/?func=detail&atid=100976&aid=478780&group_id=976\n\nIf not, please post details!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1005075193
  },
  {
    "id": "08ad385e0eaae73cce890b09d957fd6ff053ce5f",
    "files": [
      "lib/ldap.c"
    ],
    "message": "Ramana Mokkapati did some good bug hunting, and we these fixes ldap transfers\nshould work a lot better!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1004969097
  },
  {
    "id": "42a9d96faebb068516697473a6180c0027c65e6f",
    "files": [
      "lib/url.c",
      "lib/urldata.h"
    ],
    "message": "fixed conn->name error on connection re-use and enlarged the 'gname' array\nto hold 512 bytes (for user+password+hostname)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1004350221
  },
  {
    "id": "d7330618735c5ea179515d03346114c2d4c2b9f2",
    "files": [
      "lib/ldap.c"
    ],
    "message": "bug report #474568 -\nWe need to set \"no further data to download\" before the Curl_ldap() function\nreturns, as otherwise it'll hang on that assumed transfer.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1003998509
  },
  {
    "id": "09da2c176735ab52beb3731028f4dfd5fd321255",
    "files": [
      "lib/krb4.c",
      "lib/security.c"
    ],
    "message": "fixed the missing getftpresponse edits",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1001668775
  },
  {
    "id": "b556d6caeecc01d919c91b4d1408e8e718d6a3b3",
    "files": [
      "lib/url.c"
    ],
    "message": "fixed bug report #462600, following a Location: when the initial URL didn't\nhave a protocol:// part did wrong",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 1000838005
  },
  {
    "id": "df09214c6236c826bf1d44885fb4c42e77a23808",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "strcasecmp() is banned from our code, should be strequal() everywhere!\nTim Costello reported bug report #454858.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 998634047
  },
  {
    "id": "f112cc14b9af2a2754ad1bcaa77c65a1ccaa3954",
    "files": [
      "src/main.c"
    ],
    "message": "The redirected error stream was closed before curl_easy_cleanup() was made,\nand when VERBOSE was enabled, that used the stream. Also, the stream was\nclosed even if we looped to get more files.\nCorrects Dustin Boswell's bug report #441610",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 997350473
  },
  {
    "id": "823fa6d27396b5a7248a0fb9b6d9084ca53b54ed",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Nico's fixes for VMS, most of these are fixes for bad uses of size_t that\nforgets that it is very often unsigned. These should be fixed globally and\nthen many #ifdef VMS lines can be removed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 997102059
  },
  {
    "id": "944f9a73f43d1f76f6b1697e2a0655f1811e067c",
    "files": [
      "lib/sendf.c"
    ],
    "message": "Jonathan Hseu noticed that you couldn't get a header callback unless you\n  set CURLOPT_WRITEHEADER to non-NULL, even if you didn't care about that\n  data. This is now fixed.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 997086146
  },
  {
    "id": "8b4809a89829d875d15b89b3f601738f33080df7",
    "files": [
      "src/main.c"
    ],
    "message": "fixed the -# to write to the same as --stderr is set to",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 991161047
  },
  {
    "id": "2966ef66616fc641e67c401737a968c60cb68ca6",
    "files": [
      "lib/transfer.c"
    ],
    "message": "store httpcode _before_ doing the FAILONERROR check so that getinfo works\nafterwards (bug #426442)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 990565749
  },
  {
    "id": "8526fa97ce02e55e480c8d29e50e1d0ac31934ee",
    "files": [
      "lib/url.c"
    ],
    "message": "Pawel A. Gajda fixed resumed transfers on persistent connections",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 989911273
  },
  {
    "id": "e82d2dc6346ed8c687765b681dd22b2f4d8fba14",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Jun-ichiro itojun Hagino fixed FTP PORT for IPv6-enabled libcurl",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 989839787
  },
  {
    "id": "8fd89d6b937e6fd12b43af351676dceeaaf25324",
    "files": [
      "lib/ssluse.c",
      "lib/ssluse.h"
    ],
    "message": "fixed Curl_SSLConnect() to return CURLcode errors, including the new error\ncode for peer certificate errors",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 989659796
  },
  {
    "id": "18f044f19d26f2b6dcd41796966f488a62a1bdca",
    "files": [
      "lib/url.c"
    ],
    "message": "we don't use the HTTP_PROXY environment variable in uppercase anymore, since\nit might become a security problem (Bugs item #415391)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 986998432
  },
  {
    "id": "84e71e1c500dca251deb98c3c5b8af7765861ebc",
    "files": [
      "lib/escape.c"
    ],
    "message": "Andr\ufffds Garc\ufffda fixed curl_escape()",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 986668528
  },
  {
    "id": "6bd1ed034a83371088bcc08f70cc6878aeb3973b",
    "files": [
      "lib/transfer.c"
    ],
    "message": "bugfixed the Location: following that must've been bad since the persistant\nconnections were introduced",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 986305073
  },
  {
    "id": "f8e1fc32de60c5f4c30d20d2bc8c55ac13405752",
    "files": [
      "lib/url.c",
      "lib/telnet.c",
      "lib/urldata.h",
      "lib/dict.c",
      "lib/http.c"
    ],
    "message": "Edin Kadribaic's bug report #408488 forced a rearrange of two struct fields\nfrom urldata to connectdata, quite correctly.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 984579071
  },
  {
    "id": "11ee547a0e4f2ede8530ca20d7c42a39d4c848f3",
    "files": [
      "lib/ssluse.c"
    ],
    "message": "J\ufffdrn Hartroth fixed a bad #endif placement",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 984558041
  },
  {
    "id": "8eb8a0a8e4ee854f063d589fc97bfbf89836a5dd",
    "files": [
      "lib/url.c"
    ],
    "message": "bugfix: don't use the connectindex if it is -1",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 984390297
  },
  {
    "id": "a14aaaf23fa8202fe60f5d7ba29dfe842ab5f80d",
    "files": [
      "lib/telnet.c",
      "lib/transfer.c"
    ],
    "message": "fixed up the telnet to work (using support from Linus Nielsen)",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 980953544
  },
  {
    "id": "b137d5ec237f08359ecda08513f77525ce045140",
    "files": [
      "src/main.c"
    ],
    "message": "bugfix for when more -o than URLs is used",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 979043114
  },
  {
    "id": "4031104404c6ceed5e57134125dcdb6cac51c564",
    "files": [
      "lib/ftp.h",
      "lib/netrc.h",
      "lib/strequal.h",
      "lib/ldap.h",
      "lib/http.c",
      "include/curl/mprintf.h",
      "lib/ldap.c",
      "lib/highlevel.c",
      "lib/timeval.h",
      "lib/cookie.h",
      "lib/memdebug.c",
      "lib/dict.h",
      "lib/progress.h",
      "lib/getenv.c",
      "lib/dict.c",
      "lib/security.c",
      "lib/formdata.h",
      "lib/sendf.c",
      "lib/speedcheck.h",
      "lib/if2ip.h",
      "lib/ssluse.h",
      "docs/INTERNALS",
      "lib/strequal.c",
      "lib/arpa_telnet.h",
      "lib/download.c",
      "lib/ssluse.c",
      "lib/base64.c",
      "lib/telnet.h",
      "lib/url.c",
      "lib/mprintf.c",
      "lib/version.c",
      "lib/sendf.h",
      "lib/formdata.c",
      "lib/base64.h",
      "lib/ftp.c",
      "lib/hostip.c",
      "lib/speedcheck.c",
      "lib/cookie.c",
      "lib/url.h",
      "include/curl/curl.h",
      "lib/krb4.c",
      "lib/timeval.c",
      "lib/hostip.h",
      "lib/http.h",
      "lib/file.c",
      "lib/if2ip.c",
      "src/main.c",
      "lib/download.h",
      "lib/getenv.h",
      "lib/telnet.c",
      "lib/netrc.c",
      "lib/progress.c",
      "CHANGES"
    ],
    "message": "Internal symbols that aren't static are now prefixed with 'Curl_'",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 978689501
  },
  {
    "id": "9ee94b3d847f40d228a8c39bd226b161cc2fc671",
    "files": [
      "lib/ftp.c"
    ],
    "message": "fixed a leaked file descriptor when PORT failed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 977216796
  },
  {
    "id": "ec420c62d92a32e8fec08259e0cbca23f81c8254",
    "files": [
      "src/main.c"
    ],
    "message": "fixed a strdup(NULL) error",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 976613452
  },
  {
    "id": "ca8196a4dccb339660a9431a339eb74c2d95569e",
    "files": [
      "src/main.c"
    ],
    "message": "J\ufffdrn fixed a multiple URL output bug",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 975932478
  },
  {
    "id": "29d21bea18281c4588dcc2507e9659b3f13c3ec6",
    "files": [
      "lib/ftp.c"
    ],
    "message": "bad directory name extractor fixed, now always free the file and directory\nvery early, as that could leak memory before",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 974833465
  },
  {
    "id": "0a72154cd2422024c5e77762761fc101d47c4faf",
    "files": [
      "src/main.c"
    ],
    "message": "fixed strdup() of a NULL pointer",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 974475137
  },
  {
    "id": "3b91db110b2b60e40eb90e2f6353414b584d9d41",
    "files": [
      "src/main.c"
    ],
    "message": "fixed crash in config file parser",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 974321129
  },
  {
    "id": "460aa295e016a2e131cf79cc52a8e84ac0cacfda",
    "files": [
      "lib/file.c"
    ],
    "message": "Chris Faherty fixed a free-twice problem",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 974101883
  },
  {
    "id": "78423c5899c3927fc038c0f8ceccce9245c5043d",
    "files": [
      "lib/cookie.c"
    ],
    "message": "Venkataramana Mokkapati corrected a cookie parser bug",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 973843804
  },
  {
    "id": "a5b01cf4e833089ea469e32ba30ad624de3aa279",
    "files": [
      "src/main.c"
    ],
    "message": "Kevin Roth's bugreport with config files containing '-v defaulturl' is now\nfixed",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 972548113
  },
  {
    "id": "00eaf202988bc36d235bbecb1facc72372ea14f9",
    "files": [
      "lib/ftp.c",
      "lib/http.c"
    ],
    "message": "bugfixed the proxytunnel",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 969022538
  },
  {
    "id": "4e35b4387cc38d4722285c3b5c0393c37622c815",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Fred Noz fixed the gethostbyaddr_() call",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 966546489
  },
  {
    "id": "e7ce27a22c6785d70c9bc37eff4b58d3570cca41",
    "files": [
      "lib/url.c"
    ],
    "message": "Linux name resolving problem fixed with larger name-buffer",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 966017330
  },
  {
    "id": "02f994a715c3afae203ad99a71e52ea284523c40",
    "files": [
      "lib/ftp.c",
      "lib/hostip.c"
    ],
    "message": "Fixed to use the new HAVE_GETHOSTBYxxxx_R_x defines, now trying to support\nthe AIX-style as well. The AIX-stuff is *NOT* verified to work.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 965388437
  },
  {
    "id": "72158ad2cfa94de6aec6673ba2ef471f625f4593",
    "files": [
      "lib/ftp.c"
    ],
    "message": "Rich Gray fixed the PORT command line with the missing \\r!",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 961487153
  },
  {
    "id": "1d75889360bb5ea892b7102f2c49f2991db9619c",
    "files": [
      "src/main.c"
    ],
    "message": "- Paul Marquis <pmarquis@iname.com> fixed the config file parsing of curl to\n  deal with any-length lines, removing the previous limit of 4K.",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 950223788
  },
  {
    "id": "3c477053e5b933869c621f2681ec8fbfc4a3c1d7",
    "files": [
      "src/main.c"
    ],
    "message": "fixed the progressmode selector\nsorted out the -y and -Y confusion in the help texts",
    "committer": {
      "email": "daniel@haxx.se",
      "name": "Daniel Stenberg"
    },
    "date": 949357270
  }
]